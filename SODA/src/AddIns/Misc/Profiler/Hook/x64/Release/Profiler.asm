; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?ThreadNameChanged@CProfiler@@UEAAJ_KKQEA_W@Z	; CProfiler::ThreadNameChanged
PUBLIC	?ExceptionCLRCatcherExecute@CProfiler@@UEAAJXZ	; CProfiler::ExceptionCLRCatcherExecute
PUBLIC	?ExceptionCLRCatcherFound@CProfiler@@UEAAJXZ	; CProfiler::ExceptionCLRCatcherFound
PUBLIC	?ExceptionCatcherLeave@CProfiler@@UEAAJXZ	; CProfiler::ExceptionCatcherLeave
PUBLIC	?ExceptionCatcherEnter@CProfiler@@UEAAJ_K0@Z	; CProfiler::ExceptionCatcherEnter
PUBLIC	?ExceptionUnwindFinallyLeave@CProfiler@@UEAAJXZ	; CProfiler::ExceptionUnwindFinallyLeave
PUBLIC	?ExceptionUnwindFinallyEnter@CProfiler@@UEAAJ_K@Z ; CProfiler::ExceptionUnwindFinallyEnter
PUBLIC	?ExceptionUnwindFunctionLeave@CProfiler@@UEAAJXZ ; CProfiler::ExceptionUnwindFunctionLeave
PUBLIC	?ExceptionUnwindFunctionEnter@CProfiler@@UEAAJ_K@Z ; CProfiler::ExceptionUnwindFunctionEnter
PUBLIC	?ExceptionOSHandlerLeave@CProfiler@@UEAAJ_K@Z	; CProfiler::ExceptionOSHandlerLeave
PUBLIC	?ExceptionOSHandlerEnter@CProfiler@@UEAAJ_K@Z	; CProfiler::ExceptionOSHandlerEnter
PUBLIC	?ExceptionSearchCatcherFound@CProfiler@@UEAAJ_K@Z ; CProfiler::ExceptionSearchCatcherFound
PUBLIC	?ExceptionSearchFilterLeave@CProfiler@@UEAAJXZ	; CProfiler::ExceptionSearchFilterLeave
PUBLIC	?ExceptionSearchFilterEnter@CProfiler@@UEAAJ_K@Z ; CProfiler::ExceptionSearchFilterEnter
PUBLIC	?ExceptionSearchFunctionLeave@CProfiler@@UEAAJXZ ; CProfiler::ExceptionSearchFunctionLeave
PUBLIC	?ExceptionSearchFunctionEnter@CProfiler@@UEAAJ_K@Z ; CProfiler::ExceptionSearchFunctionEnter
PUBLIC	?ExceptionThrown@CProfiler@@UEAAJ_K@Z		; CProfiler::ExceptionThrown
PUBLIC	?ThreadAssignedToOSThread@CProfiler@@UEAAJ_KK@Z	; CProfiler::ThreadAssignedToOSThread
PUBLIC	?ThreadDestroyed@CProfiler@@UEAAJ_K@Z		; CProfiler::ThreadDestroyed
PUBLIC	?ThreadCreated@CProfiler@@UEAAJ_K@Z		; CProfiler::ThreadCreated
PUBLIC	?FunctionUnloadStarted@CProfiler@@UEAAJ_K@Z	; CProfiler::FunctionUnloadStarted
PUBLIC	?Shutdown@CProfiler@@UEAAJXZ			; CProfiler::Shutdown
PUBLIC	?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z	; CProfiler::Initialize
PUBLIC	?Release@CProfiler@@UEAAKXZ			; CProfiler::Release
PUBLIC	?AddRef@CProfiler@@UEAAKXZ			; CProfiler::AddRef
PUBLIC	?QueryInterface@CProfiler@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CProfiler::QueryInterface
PUBLIC	??0StackEntry@@QEAA@PEAUFunctionInfo@@_K@Z	; StackEntry::StackEntry
PUBLIC	?hasAtLeastTwoElements@?$LightweightStack@UStackEntry@@@@QEAA_NXZ ; LightweightStack<StackEntry>::hasAtLeastTwoElements
PUBLIC	?belowTop@?$LightweightStack@UStackEntry@@@@QEAAAEAUStackEntry@@XZ ; LightweightStack<StackEntry>::belowTop
PUBLIC	?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ ; LightweightStack<StackEntry>::Enlarge
PUBLIC	?push@?$LightweightStack@UStackEntry@@@@QEAAXAEBUStackEntry@@@Z ; LightweightStack<StackEntry>::push
PUBLIC	?empty@?$LightweightStack@UStackEntry@@@@QEAA_NXZ ; LightweightStack<StackEntry>::empty
PUBLIC	?top@?$LightweightStack@UStackEntry@@@@QEAAAEAUStackEntry@@XZ ; LightweightStack<StackEntry>::top
PUBLIC	?pop@?$LightweightStack@UStackEntry@@@@QEAAXXZ	; LightweightStack<StackEntry>::pop
PUBLIC	?max_size@?$allocator@U?$pair@$$CB_KH@std@@@std@@QEBA_KXZ ; std::allocator<std::pair<unsigned __int64 const ,int> >::max_size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::max_size
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CB_KH@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node::_Node
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Insert
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::_Dec
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::operator--
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator--
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@1@AEB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,bool>
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::insert
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Lbound
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::lower_bound
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::find
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KH@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::operator*
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KH@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator*
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KH@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator->
PUBLIC	??0?$pair@_KH@std@@QEAA@AEB_KAEBH@Z		; std::pair<unsigned __int64,int>::pair<unsigned __int64,int>
PUBLIC	??$?0_KH@?$pair@$$CB_KH@std@@QEAA@AEBU?$pair@_KH@1@@Z ; std::pair<unsigned __int64 const ,int>::pair<unsigned __int64 const ,int><unsigned __int64,int>
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::size
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::const_iterator
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CBKPEAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator*
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator*
PUBLIC	??0?$pair@$$CBKPEAVThreadInfo@@@std@@QEAA@AEBKAEBQEAVThreadInfo@@@Z ; std::pair<unsigned long const ,ThreadInfo * __ptr64>::pair<unsigned long const ,ThreadInfo * __ptr64>
PUBLIC	??A?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAAAEAPEAVThreadInfo@@AEBK@Z ; std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::operator[]
PUBLIC	??0CriticalSection@@QEAA@XZ			; CriticalSection::CriticalSection
PUBLIC	??0?$allocator@U?$pair@$$CB_KH@std@@@std@@QEAA@XZ ; std::allocator<std::pair<unsigned __int64 const ,int> >::allocator<std::pair<unsigned __int64 const ,int> >
PUBLIC	??$?0U?$pair@$$CB_KH@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned __int64 const ,int> >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KH@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,int> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,int> > >
PUBLIC	??0?$allocator@U?$pair@$$CB_KH@std@@@std@@QEAA@AEBV01@@Z ; std::allocator<std::pair<unsigned __int64 const ,int> >::allocator<std::pair<unsigned __int64 const ,int> >
PUBLIC	??0?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>
PUBLIC	??$?0U?$pair@$$CB_KH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node><std::pair<unsigned __int64 const ,int> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >
PUBLIC	??$?0U?$pair@$$CB_KH@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64><std::pair<unsigned __int64 const ,int> >
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_val<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@_KPEAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@_K@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>::allocate
PUBLIC	??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@AEBQEAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>
PUBLIC	?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBQEAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>::construct
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Init
PUBLIC	??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >
PUBLIC	??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ ; std::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >
PUBLIC	??0?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEAA@XZ ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
PUBLIC	??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >
PUBLIC	??0?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEAA@AEBV01@@Z ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
PUBLIC	??0?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>
PUBLIC	??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >
PUBLIC	??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >
PUBLIC	??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@AEBQEAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>
PUBLIC	?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBQEAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::construct
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Init
PUBLIC	??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >
PUBLIC	??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ ; std::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >
PUBLIC	??0?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEAA@XZ ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >
PUBLIC	??0_Aux_cont@std@@QEAA@QEBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
PUBLIC	??0_Container_base_aux@std@@QEAA@XZ		; std::_Container_base_aux::_Container_base_aux
PUBLIC	??$_Allocate@V_Aux_cont@std@@@std@@YAPEAV_Aux_cont@0@_KPEAV10@@Z ; std::_Allocate<std::_Aux_cont>
PUBLIC	?allocate@?$allocator@V_Aux_cont@std@@@std@@QEAAPEAV_Aux_cont@2@_K@Z ; std::allocator<std::_Aux_cont>::allocate
PUBLIC	??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned long const ,ThreadInfo * __ptr64> >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >
PUBLIC	??0?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEAA@AEBV01@@Z ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >
PUBLIC	??0?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>
PUBLIC	??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node><std::pair<unsigned long const ,ThreadInfo * __ptr64> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >
PUBLIC	??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64><std::pair<unsigned long const ,ThreadInfo * __ptr64> >
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >
PUBLIC	??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@AEBQEAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>
PUBLIC	?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBQEAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::construct
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Init
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >
PUBLIC	??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ ; std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEBA_KXZ ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::max_size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::max_size
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocate
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node::_Node
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator--
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator--
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@AEB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Lbound
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::lower_bound
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::find
PUBLIC	??0?$pair@KPEAVThreadInfo@@@std@@QEAA@AEBKAEBQEAVThreadInfo@@@Z ; std::pair<unsigned long,ThreadInfo * __ptr64>::pair<unsigned long,ThreadInfo * __ptr64>
PUBLIC	??$?0KPEAVThreadInfo@@@?$pair@$$CBKPEAVThreadInfo@@@std@@QEAA@AEBU?$pair@KPEAVThreadInfo@@@1@@Z ; std::pair<unsigned long const ,ThreadInfo * __ptr64>::pair<unsigned long const ,ThreadInfo * __ptr64><unsigned long,ThreadInfo * __ptr64>
PUBLIC	?_Kfn@?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KH@2@@Z ; std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>::_Kfn
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@KAAEAU?$pair@$$CB_KH@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Myval
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@KAAEB_KPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Key
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Eqrange
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::equal_range
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator++
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,unsigned __int64>
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_K@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,unsigned __int64>
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA_KAEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::erase
PUBLIC	??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	?max_size@?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEBA_KXZ ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::max_size
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::max_size
PUBLIC	??0bad_alloc@std@@QEAA@PEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocate
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node::_Node
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
PUBLIC	??1length_error@std@@UEAA@XZ			; std::length_error::~length_error
PUBLIC	??_Glength_error@std@@UEAAPEAXI@Z		; std::length_error::`scalar deleting destructor'
PUBLIC	??0length_error@std@@QEAA@AEBV01@@Z		; std::length_error::length_error
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Insert
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator--
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator--
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@AEB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::insert
PUBLIC	??0ThreadInfo@@QEAA@XZ				; ThreadInfo::ThreadInfo
PUBLIC	??0?$pair@_KPEAVThreadInfo@@@std@@QEAA@AEB_KAEBQEAVThreadInfo@@@Z ; std::pair<unsigned __int64,ThreadInfo * __ptr64>::pair<unsigned __int64,ThreadInfo * __ptr64>
PUBLIC	??$?0_KPEAVThreadInfo@@@?$pair@$$CB_KPEAVThreadInfo@@@std@@QEAA@AEBU?$pair@_KPEAVThreadInfo@@@1@@Z ; std::pair<unsigned __int64 const ,ThreadInfo * __ptr64>::pair<unsigned __int64 const ,ThreadInfo * __ptr64><unsigned __int64,ThreadInfo * __ptr64>
PUBLIC	?Enter@CriticalSection@@QEAAXXZ			; CriticalSection::Enter
PUBLIC	?Leave@CriticalSection@@QEAAXXZ			; CriticalSection::Leave
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Eqrange
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::equal_range
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator++
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::erase
PUBLIC	??R?$less@_K@std@@QEBA_NAEB_K0@Z		; std::less<unsigned __int64>::operator()
PUBLIC	?_Kfn@?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ; std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>::_Kfn
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEB_KPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Key
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Lbound
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::lower_bound
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::find
PUBLIC	??R?$less@K@std@@QEBA_NAEBK0@Z			; std::less<unsigned long>::operator()
PUBLIC	?_Kfn@?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@SAAEBKAEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>::_Kfn
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Myval
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEBKPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Key
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>
PUBLIC	?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Eqrange
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::equal_range
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator++
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::erase
PUBLIC	??1ThreadInfo@@QEAA@XZ				; ThreadInfo::~ThreadInfo
PUBLIC	??_GThreadInfo@@QEAAPEAXI@Z			; ThreadInfo::`scalar deleting destructor'
PUBLIC	?_Getcont@_Aux_cont@std@@QEBAPEBV_Container_base_aux@2@XZ ; std::_Aux_cont::_Getcont
PUBLIC	?_Getmycont@_Iterator_base_aux@std@@QEBAPEBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Myval
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator*
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator*
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator->
PUBLIC	??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@ ; `string'
PUBLIC	??_R0PEAD@8					; char * __ptr64 `RTTI Type Descriptor'
PUBLIC	??_R0PEAX@8					; void * __ptr64 `RTTI Type Descriptor'
PUBLIC	_CT??_R0PEAD@88
PUBLIC	_CT??_R0PEAX@88
PUBLIC	_CTA2PEAD
PUBLIC	_TI2PEAD
PUBLIC	?nextPosFunctionID@@3JC				; nextPosFunctionID
PUBLIC	??_C@_1BM@IMNIDHAD@?$AAm?$AAa?$AAp?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAI?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EA@LIAAHHAL@?$AAm?$AAa?$AAp?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA0?$AA?5?$AA?$CC?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CD?$AA?$CF?$AAd?$AA?$CC?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_0BF@IEBMFIMJ@COR_ENABLE_PROFILING?$AA@	; `string'
PUBLIC	??_C@_1CA@CPAJBOA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IA@ICOEBLFH@?$AAF?$AAA?$AAT?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AA?4?$AAN?$AAE?$AAT?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_1DK@JNGEKABN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GE@MBLADCNK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?0?$AA?5?$AAl?$AAe?$AAa?$AAv?$AAe?$AA?5?$AAa@ ; `string'
PUBLIC	??_C@_1EG@BIFPEPFJ@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5?$AAp?$AAr?$AAo?$AAf?$AAi?$AAl?$AAi@ ; `string'
PUBLIC	??_C@_1BI@LJPPCMFK@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?4?$AA?4?$AA?4?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BB@EIHAAPLC@SharedMemoryName?$AA@	; `string'
PUBLIC	??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@		; `string'
PUBLIC	??_C@_0FF@CHALMHHG@Could?5not?5find?5environment?5varia@ ; `string'
PUBLIC	??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@	; `string'
PUBLIC	??_C@_09OHDMFPFI@MutexName?$AA@			; `string'
PUBLIC	??_C@_0EO@MELDENFF@Could?5not?5find?5environment?5varia@ ; `string'
PUBLIC	??_C@_0BA@DKCEJMG@AccessEventName?$AA@		; `string'
PUBLIC	??_C@_0FE@HNFKMMLK@Could?5not?5find?5environment?5varia@ ; `string'
PUBLIC	??_C@_1FK@PMAJBODM@?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?9?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi@ ; `string'
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVlength_error@std@@@8??0length_error@std@@QEAA@AEBV01@@Z64
PUBLIC	_CTA3?AVlength_error@std@@
PUBLIC	_TI3?AVlength_error@std@@
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	_CTA2?AVbad_alloc@std@@
PUBLIC	_TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7CProfiler@@6B@				; CProfiler::`vftable'
EXTRN	?what@exception@std@@UEBAPEBDXZ:PROC		; std::exception::what
EXTRN	IID_ICorProfilerCallback:BYTE
EXTRN	IID_ICorProfilerCallback2:BYTE
EXTRN	__imp_?_Myptr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEBAPEB_WXZ:PROC
EXTRN	__imp_?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ:PROC
EXTRN	__imp_InitializeCriticalSectionAndSpinCount:PROC
EXTRN	__imp_SetEnvironmentVariableA:PROC
EXTRN	IID_ICorProfilerInfo:BYTE
EXTRN	IID_ICorProfilerInfo2:BYTE
EXTRN	FunctionEnterNaked:PROC
EXTRN	FunctionLeaveNaked:PROC
EXTRN	FunctionTailcallNaked:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_OpenMutexA:PROC
EXTRN	__imp_GetEnvironmentVariableA:PROC
EXTRN	__imp_vswprintf_s:PROC
EXTRN	__imp_?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z:PROC
EXTRN	__imp_??0exception@std@@QEAA@AEBQEBD@Z:PROC
EXTRN	__imp_?what@exception@std@@UEBAPEBDXZ:PROC
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UEAAPEAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	__imp_??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ:PROC
EXTRN	__imp_EnterCriticalSection:PROC
EXTRN	__imp_LeaveCriticalSection:PROC
EXTRN	__imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ:PROC
?nextPosFunctionID@@3JC DD 01H DUP (?)			; nextPosFunctionID
;	COMDAT ??_7CProfiler@@6B@
CONST	SEGMENT
??_7CProfiler@@6B@ DQ FLAT:?QueryInterface@CProfiler@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CProfiler::`vftable'
	DQ	FLAT:?AddRef@CProfiler@@UEAAKXZ
	DQ	FLAT:?Release@CProfiler@@UEAAKXZ
	DQ	FLAT:?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z
	DQ	FLAT:?Shutdown@CProfiler@@UEAAJXZ
	DQ	FLAT:?AppDomainCreationStarted@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?AppDomainCreationFinished@CCorProfilerCallbackImpl@@UEAAJ_KJ@Z
	DQ	FLAT:?AppDomainShutdownStarted@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?AppDomainShutdownFinished@CCorProfilerCallbackImpl@@UEAAJ_KJ@Z
	DQ	FLAT:?AssemblyLoadStarted@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?AssemblyLoadFinished@CCorProfilerCallbackImpl@@UEAAJ_KJ@Z
	DQ	FLAT:?AssemblyUnloadStarted@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?AssemblyUnloadFinished@CCorProfilerCallbackImpl@@UEAAJ_KJ@Z
	DQ	FLAT:?ModuleLoadStarted@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?ModuleLoadFinished@CCorProfilerCallbackImpl@@UEAAJ_KJ@Z
	DQ	FLAT:?ModuleUnloadStarted@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?ModuleUnloadFinished@CCorProfilerCallbackImpl@@UEAAJ_KJ@Z
	DQ	FLAT:?ModuleAttachedToAssembly@CCorProfilerCallbackImpl@@UEAAJ_K0@Z
	DQ	FLAT:?ClassLoadStarted@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?ClassLoadFinished@CCorProfilerCallbackImpl@@UEAAJ_KJ@Z
	DQ	FLAT:?ClassUnloadStarted@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?ClassUnloadFinished@CCorProfilerCallbackImpl@@UEAAJ_KJ@Z
	DQ	FLAT:?FunctionUnloadStarted@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?JITCompilationStarted@CCorProfilerCallbackImpl@@UEAAJ_KH@Z
	DQ	FLAT:?JITCompilationFinished@CCorProfilerCallbackImpl@@UEAAJ_KJH@Z
	DQ	FLAT:?JITCachedFunctionSearchStarted@CCorProfilerCallbackImpl@@UEAAJ_KPEAH@Z
	DQ	FLAT:?JITCachedFunctionSearchFinished@CCorProfilerCallbackImpl@@UEAAJ_KW4__MIDL___MIDL_itf_corprof_0000_0004@@@Z
	DQ	FLAT:?JITFunctionPitched@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?JITInlining@CCorProfilerCallbackImpl@@UEAAJ_K0PEAH@Z
	DQ	FLAT:?ThreadCreated@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ThreadDestroyed@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ThreadAssignedToOSThread@CProfiler@@UEAAJ_KK@Z
	DQ	FLAT:?RemotingClientInvocationStarted@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?RemotingClientSendingMessage@CCorProfilerCallbackImpl@@UEAAJPEAU_GUID@@H@Z
	DQ	FLAT:?RemotingClientReceivingReply@CCorProfilerCallbackImpl@@UEAAJPEAU_GUID@@H@Z
	DQ	FLAT:?RemotingClientInvocationFinished@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?RemotingServerReceivingMessage@CCorProfilerCallbackImpl@@UEAAJPEAU_GUID@@H@Z
	DQ	FLAT:?RemotingServerInvocationStarted@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?RemotingServerInvocationReturned@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?RemotingServerSendingReply@CCorProfilerCallbackImpl@@UEAAJPEAU_GUID@@H@Z
	DQ	FLAT:?UnmanagedToManagedTransition@CCorProfilerCallbackImpl@@UEAAJ_KW4__MIDL___MIDL_itf_corprof_0000_0005@@@Z
	DQ	FLAT:?ManagedToUnmanagedTransition@CCorProfilerCallbackImpl@@UEAAJ_KW4__MIDL___MIDL_itf_corprof_0000_0005@@@Z
	DQ	FLAT:?RuntimeSuspendStarted@CCorProfilerCallbackImpl@@UEAAJW4__MIDL___MIDL_itf_corprof_0000_0006@@@Z
	DQ	FLAT:?RuntimeSuspendFinished@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?RuntimeSuspendAborted@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?RuntimeResumeStarted@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?RuntimeResumeFinished@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?RuntimeThreadSuspended@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?RuntimeThreadResumed@CCorProfilerCallbackImpl@@UEAAJ_K@Z
	DQ	FLAT:?MovedReferences@CCorProfilerCallbackImpl@@UEAAJKQEA_K0QEAK@Z
	DQ	FLAT:?ObjectAllocated@CCorProfilerCallbackImpl@@UEAAJ_K0@Z
	DQ	FLAT:?ObjectsAllocatedByClass@CCorProfilerCallbackImpl@@UEAAJKQEA_KQEAK@Z
	DQ	FLAT:?ObjectReferences@CCorProfilerCallbackImpl@@UEAAJ_K0KQEA_K@Z
	DQ	FLAT:?RootReferences@CCorProfilerCallbackImpl@@UEAAJKQEA_K@Z
	DQ	FLAT:?ExceptionThrown@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ExceptionSearchFunctionEnter@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ExceptionSearchFunctionLeave@CProfiler@@UEAAJXZ
	DQ	FLAT:?ExceptionSearchFilterEnter@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ExceptionSearchFilterLeave@CProfiler@@UEAAJXZ
	DQ	FLAT:?ExceptionSearchCatcherFound@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ExceptionOSHandlerEnter@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ExceptionOSHandlerLeave@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ExceptionUnwindFunctionEnter@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ExceptionUnwindFunctionLeave@CProfiler@@UEAAJXZ
	DQ	FLAT:?ExceptionUnwindFinallyEnter@CProfiler@@UEAAJ_K@Z
	DQ	FLAT:?ExceptionUnwindFinallyLeave@CProfiler@@UEAAJXZ
	DQ	FLAT:?ExceptionCatcherEnter@CProfiler@@UEAAJ_K0@Z
	DQ	FLAT:?ExceptionCatcherLeave@CProfiler@@UEAAJXZ
	DQ	FLAT:?COMClassicVTableCreated@CCorProfilerCallbackImpl@@UEAAJ_KAEBU_GUID@@PEAXK@Z
	DQ	FLAT:?COMClassicVTableDestroyed@CCorProfilerCallbackImpl@@UEAAJ_KAEBU_GUID@@PEAX@Z
	DQ	FLAT:?ExceptionCLRCatcherFound@CProfiler@@UEAAJXZ
	DQ	FLAT:?ExceptionCLRCatcherExecute@CProfiler@@UEAAJXZ
	DQ	FLAT:?ThreadNameChanged@CProfiler@@UEAAJ_KKQEA_W@Z
	DQ	FLAT:?GarbageCollectionStarted@CCorProfilerCallbackImpl@@UEAAJHQEAHW4__MIDL___MIDL_itf_corprof_0011_0006@@@Z
	DQ	FLAT:?SurvivingReferences@CCorProfilerCallbackImpl@@UEAAJKQEA_KQEAK@Z
	DQ	FLAT:?GarbageCollectionFinished@CCorProfilerCallbackImpl@@UEAAJXZ
	DQ	FLAT:?FinalizeableObjectQueued@CCorProfilerCallbackImpl@@UEAAJK_K@Z
	DQ	FLAT:?RootReferences2@CCorProfilerCallbackImpl@@UEAAJKQEA_KQEAW4__MIDL___MIDL_itf_corprof_0011_0001@@QEAW4__MIDL___MIDL_itf_corprof_0011_0002@@0@Z
	DQ	FLAT:?HandleCreated@CCorProfilerCallbackImpl@@UEAAJ_K0@Z
	DQ	FLAT:?HandleDestroyed@CCorProfilerCallbackImpl@@UEAAJ_K@Z
CONST	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DQ FLAT:??_Elength_error@std@@UEAAPEAXI@Z ; std::length_error::`vftable'
	DQ	FLAT:?what@logic_error@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z ; std::bad_alloc::`vftable'
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
_TI2?AVbad_alloc@std@@ DD 00H
	DD	imagerel ??1bad_alloc@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT _CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
_CTA2?AVbad_alloc@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT _TI3?AVlength_error@std@@
xdata$x	SEGMENT
_TI3?AVlength_error@std@@ DD 00H
	DD	imagerel ??1length_error@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT _CTA3?AVlength_error@std@@
xdata$x	SEGMENT
_CTA3?AVlength_error@std@@ DD 03H
	DD	imagerel _CT??_R0?AVlength_error@std@@@8??0length_error@std@@QEAA@AEBV01@@Z64
	DD	imagerel _CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z64
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _CT??_R0?AVlength_error@std@@@8??0length_error@std@@QEAA@AEBV01@@Z64
xdata$x	SEGMENT
_CT??_R0?AVlength_error@std@@@8??0length_error@std@@QEAA@AEBV01@@Z64 DD 00H
	DD	imagerel ??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	040H
	DD	imagerel ??0length_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@PMAJBODM@?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?9?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi@
CONST	SEGMENT
??_C@_1FK@PMAJBODM@?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?9?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi@ DB 'e'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, '-', 00H, 'T', 00H
	DB	'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, ')', 00H
	DB	' ', 00H, 'a', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, 'y', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'm'
	DB	00H, 'a', 00H, 'p', 00H, '!', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@HNFKMMLK@Could?5not?5find?5environment?5varia@
CONST	SEGMENT
??_C@_0FE@HNFKMMLK@Could?5not?5find?5environment?5varia@ DB 'Could not fi'
	DB	'nd environment variable ''AccessEventName'', please restart t'
	DB	'he profiler!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKCEJMG@AccessEventName?$AA@
CONST	SEGMENT
??_C@_0BA@DKCEJMG@AccessEventName?$AA@ DB 'AccessEventName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@MELDENFF@Could?5not?5find?5environment?5varia@
CONST	SEGMENT
??_C@_0EO@MELDENFF@Could?5not?5find?5environment?5varia@ DB 'Could not fi'
	DB	'nd environment variable ''MutexName'', please restart the pro'
	DB	'filer!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09OHDMFPFI@MutexName?$AA@
CONST	SEGMENT
??_C@_09OHDMFPFI@MutexName?$AA@ DB 'MutexName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@
CONST	SEGMENT
??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@ DB 'Unknown error!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@CHALMHHG@Could?5not?5find?5environment?5varia@
CONST	SEGMENT
??_C@_0FF@CHALMHHG@Could?5not?5find?5environment?5varia@ DB 'Could not fi'
	DB	'nd environment variable ''SharedMemoryName'', please restart '
	DB	'the profiler!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
CONST	SEGMENT
??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@ DB 'Profiler Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EIHAAPLC@SharedMemoryName?$AA@
CONST	SEGMENT
??_C@_0BB@EIHAAPLC@SharedMemoryName?$AA@ DB 'SharedMemoryName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@LJPPCMFK@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?4?$AA?4?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@LJPPCMFK@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?4?$AA?4?$AA?4?$AA?$AA@ DB 'S'
	DB	00H, 'h', 00H, 'u', 00H, 't', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'n', 00H, '.', 00H, '.', 00H, '.', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@BIFPEPFJ@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5?$AAp?$AAr?$AAo?$AAf?$AAi?$AAl?$AAi@
CONST	SEGMENT
??_C@_1EG@BIFPEPFJ@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5?$AAp?$AAr?$AAo?$AAf?$AAi?$AAl?$AAi@ DB 'S'
	DB	00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'f', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'y', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'r'
	DB	00H, 'o', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@MBLADCNK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?0?$AA?5?$AAl?$AAe?$AAa?$AAv?$AAe?$AA?5?$AAa@
CONST	SEGMENT
??_C@_1GE@MBLADCNK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?0?$AA?5?$AAl?$AAe?$AAa?$AAv?$AAe?$AA?5?$AAa@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'l', 00H, 'e'
	DB	00H, 'a', 00H, 'v', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'c'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'h', 00H, 'o', 00H
	DB	'o', 00H, 'k', 00H, 's', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@JNGEKABN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@JNGEKABN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AA@ DB 'E'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 't', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'e', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 'k', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@ICOEBLFH@?$AAF?$AAA?$AAT?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AA?4?$AAN?$AAE?$AAT?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1IA@ICOEBLFH@?$AAF?$AAA?$AAT?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AA?4?$AAN?$AAE?$AAT?$AA?5?$AAv?$AAe@ DB 'F'
	DB	00H, 'A', 00H, 'T', 00H, 'A', 00H, 'L', 00H, ' ', 00H, 'E', 00H
	DB	'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ':', 00H, ' ', 00H, 'U'
	DB	00H, 'n', 00H, 's', 00H, 'u', 00H, 'p', 00H, 'p', 00H, 'o', 00H
	DB	'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '.', 00H, 'N'
	DB	00H, 'E', 00H, 'T', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'n', 00H, 'e'
	DB	00H, 'e', 00H, 'd', 00H, 's', 00H, ' ', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 'b', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 't', 00H, ' '
	DB	00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	'2', 00H, '.', 00H, '0', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@CPAJBOA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@CPAJBOA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IEBMFIMJ@COR_ENABLE_PROFILING?$AA@
CONST	SEGMENT
??_C@_0BF@IEBMFIMJ@COR_ENABLE_PROFILING?$AA@ DB 'COR_ENABLE_PROFILING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LIAAHHAL@?$AAm?$AAa?$AAp?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA0?$AA?5?$AA?$CC?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CD?$AA?$CF?$AAd?$AA?$CC?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@LIAAHHAL@?$AAm?$AAa?$AAp?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA0?$AA?5?$AA?$CC?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CD?$AA?$CF?$AAd?$AA?$CC?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, '0'
	DB	00H, ' ', 00H, '"', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, '#', 00H, '%', 00H, 'd', 00H, '"', 00H, ' '
	DB	00H, '"', 00H, '%', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@IMNIDHAD@?$AAm?$AAa?$AAp?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAI?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@IMNIDHAD@?$AAm?$AAa?$AAp?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAI?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AA@ DB 'm'
	DB	00H, 'a', 00H, 'p', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H
	DB	'%', 00H, 'I', 00H, 'd', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT _TI2PEAD
xdata$x	SEGMENT
_TI2PEAD DD	00H
	DD	00H
	DD	00H
	DD	imagerel _CTA2PEAD
xdata$x	ENDS
;	COMDAT _CTA2PEAD
xdata$x	SEGMENT
_CTA2PEAD DD	02H
	DD	imagerel _CT??_R0PEAD@88
	DD	imagerel _CT??_R0PEAX@88
xdata$x	ENDS
;	COMDAT _CT??_R0PEAX@88
xdata$x	SEGMENT
_CT??_R0PEAX@88 DD 01H
	DD	imagerel ??_R0PEAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT _CT??_R0PEAD@88
xdata$x	SEGMENT
_CT??_R0PEAD@88 DD 01H
	DD	imagerel ??_R0PEAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	08H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PEAX@8
_DATA	SEGMENT
??_R0PEAX@8 DQ	FLAT:??_7type_info@@6B@			; void * __ptr64 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAX', 00H
_DATA	ENDS
;	COMDAT ??_R0PEAD@8
_DATA	SEGMENT
??_R0PEAD@8 DQ	FLAT:??_7type_info@@6B@			; char * __ptr64 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAD', 00H
_DATA	ENDS
;	COMDAT ??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
CONST	SEGMENT
??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@ DB 'Couldn''t in'
	DB	'itialize critical section', 00H		; `string'
_bad_alloc_Message DQ FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$ = 16
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	rax, rcx

; 955  : 	}

	ret	0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$ = 16
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	rax, rcx

; 955  : 	}

	ret	0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$ = 16
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	rax, rcx

; 955  : 	}

	ret	0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	QWORD PTR __imp_??0exception@std@@QEAA@AEBV01@@Z
	lea	r11, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rbx], r11
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned long const ,ThreadInfo * __ptr64> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned long const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CB_KH@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CB_KH@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned __int64 const ,int> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CB_KH@std@@@?$allocator@V_Aux_cont@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned __int64 const ,int> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node><std::pair<unsigned long const ,ThreadInfo * __ptr64> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node><std::pair<unsigned long const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CB_KH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CB_KH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node><std::pair<unsigned __int64 const ,int> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CB_KH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node><std::pair<unsigned __int64 const ,int> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64><std::pair<unsigned long const ,ThreadInfo * __ptr64> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBKPEAVThreadInfo@@@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64><std::pair<unsigned long const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CB_KPEAVThreadInfo@@@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64><std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CB_KH@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$pair@$$CB_KH@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64><std::pair<unsigned __int64 const ,int> >, COMDAT

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CB_KH@std@@@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64><std::pair<unsigned __int64 const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??$?0_KPEAVThreadInfo@@@?$pair@$$CB_KPEAVThreadInfo@@@std@@QEAA@AEBU?$pair@_KPEAVThreadInfo@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0_KPEAVThreadInfo@@@?$pair@$$CB_KPEAVThreadInfo@@@std@@QEAA@AEBU?$pair@_KPEAVThreadInfo@@@1@@Z PROC ; std::pair<unsigned __int64 const ,ThreadInfo * __ptr64>::pair<unsigned __int64 const ,ThreadInfo * __ptr64><unsigned __int64,ThreadInfo * __ptr64>, COMDAT

; 57   : 		{	// construct from compatible pair

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax

; 58   : 		}

	mov	rax, rcx
	ret	0
??$?0_KPEAVThreadInfo@@@?$pair@$$CB_KPEAVThreadInfo@@@std@@QEAA@AEBU?$pair@_KPEAVThreadInfo@@@1@@Z ENDP ; std::pair<unsigned __int64 const ,ThreadInfo * __ptr64>::pair<unsigned __int64 const ,ThreadInfo * __ptr64><unsigned __int64,ThreadInfo * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0KPEAVThreadInfo@@@?$pair@$$CBKPEAVThreadInfo@@@std@@QEAA@AEBU?$pair@KPEAVThreadInfo@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0KPEAVThreadInfo@@@?$pair@$$CBKPEAVThreadInfo@@@std@@QEAA@AEBU?$pair@KPEAVThreadInfo@@@1@@Z PROC ; std::pair<unsigned long const ,ThreadInfo * __ptr64>::pair<unsigned long const ,ThreadInfo * __ptr64><unsigned long,ThreadInfo * __ptr64>, COMDAT

; 57   : 		{	// construct from compatible pair

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax

; 58   : 		}

	mov	rax, rcx
	ret	0
??$?0KPEAVThreadInfo@@@?$pair@$$CBKPEAVThreadInfo@@@std@@QEAA@AEBU?$pair@KPEAVThreadInfo@@@1@@Z ENDP ; std::pair<unsigned long const ,ThreadInfo * __ptr64>::pair<unsigned long const ,ThreadInfo * __ptr64><unsigned long,ThreadInfo * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0_KH@?$pair@$$CB_KH@std@@QEAA@AEBU?$pair@_KH@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0_KH@?$pair@$$CB_KH@std@@QEAA@AEBU?$pair@_KH@1@@Z PROC ; std::pair<unsigned __int64 const ,int>::pair<unsigned __int64 const ,int><unsigned __int64,int>, COMDAT

; 57   : 		{	// construct from compatible pair

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax

; 58   : 		}

	mov	rax, rcx
	ret	0
??$?0_KH@?$pair@$$CB_KH@std@@QEAA@AEBU?$pair@_KH@1@@Z ENDP ; std::pair<unsigned __int64 const ,int>::pair<unsigned __int64 const ,int><unsigned __int64,int>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
_TEXT	SEGMENT
this$ = 8
_Larg$ = 16
_Parg$ = 24
_Rarg$ = 32
_Val$ = 40
_Carg$ = 48
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node::_Node, COMDAT

; 38   : 			{	// construct a node with value

	mov	QWORD PTR [rcx], rdx
	mov	rdx, QWORD PTR _Val$[rsp]
	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	BYTE PTR [rcx+40], 0
	mov	QWORD PTR [rcx+32], rax

; 39   : 			}

	mov	rax, rcx
	mov	BYTE PTR [rcx+41], 0
	ret	0
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node::_Node
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
_TEXT	SEGMENT
this$ = 8
_Larg$ = 16
_Parg$ = 24
_Rarg$ = 32
_Val$ = 40
_Carg$ = 48
??0_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node::_Node, COMDAT

; 38   : 			{	// construct a node with value

	mov	QWORD PTR [rcx], rdx
	mov	rdx, QWORD PTR _Val$[rsp]
	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	BYTE PTR [rcx+40], 0
	mov	QWORD PTR [rcx+32], rax

; 39   : 			}

	mov	rax, rcx
	mov	BYTE PTR [rcx+41], 0
	ret	0
??0_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node::_Node
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CB_KH@2@D@Z
_TEXT	SEGMENT
this$ = 8
_Larg$ = 16
_Parg$ = 24
_Rarg$ = 32
_Val$ = 40
_Carg$ = 48
??0_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CB_KH@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node::_Node, COMDAT

; 38   : 			{	// construct a node with value

	mov	QWORD PTR [rcx], rdx
	mov	rdx, QWORD PTR _Val$[rsp]
	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+24], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	BYTE PTR [rcx+40], 0
	mov	QWORD PTR [rcx+32], rax

; 39   : 			}

	mov	rax, rcx
	mov	BYTE PTR [rcx+41], 0
	ret	0
??0_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@PEAU012@00AEBU?$pair@$$CB_KH@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node::_Node
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>, COMDAT

; 50   : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [r8+8]
	mov	QWORD PTR [rcx+24], rax

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>, COMDAT

; 50   : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [r8+8]
	mov	QWORD PTR [rcx+24], rax

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@1@0@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>, COMDAT

; 50   : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [r8+8]
	mov	QWORD PTR [rcx+24], rax

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEBA_KXZ PROC ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEBA_KXZ ENDP ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEBA_KXZ PROC ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEBA_KXZ ENDP ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CB_KH@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@U?$pair@$$CB_KH@std@@@std@@QEBA_KXZ PROC ; std::allocator<std::pair<unsigned __int64 const ,int> >::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CB_KH@std@@@std@@QEBA_KXZ ENDP ; std::allocator<std::pair<unsigned __int64 const ,int> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >, COMDAT

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::max_size, COMDAT

; 606  : 		return (this->_Alval.max_size());

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 607  : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::size, COMDAT

; 601  : 		return (_Mysize);

	mov	rax, QWORD PTR [rcx+56]

; 602  : 		}

	ret	0
?size@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Myval@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Myval, COMDAT

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	lea	rax, QWORD PTR [rcx+24]

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Myval
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >, COMDAT

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::max_size, COMDAT

; 606  : 		return (this->_Alval.max_size());

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 607  : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Myval@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Myval, COMDAT

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	lea	rax, QWORD PTR [rcx+24]

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Myval
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CB_KH@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@U?$pair@$$CB_KH@std@@@std@@QEAA@AEBV01@@Z PROC ; std::allocator<std::pair<unsigned __int64 const ,int> >::allocator<std::pair<unsigned __int64 const ,int> >, COMDAT

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CB_KH@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::allocator<std::pair<unsigned __int64 const ,int> >::allocator<std::pair<unsigned __int64 const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::max_size, COMDAT

; 606  : 		return (this->_Alval.max_size());

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 607  : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@KAAEAU?$pair@$$CB_KH@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Myval@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@KAAEAU?$pair@$$CB_KH@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Myval, COMDAT

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	lea	rax, QWORD PTR [rcx+24]

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@KAAEAU?$pair@$$CB_KH@2@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Myval
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@AEB_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@AEB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>, COMDAT

; 50   : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+16], al

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@AEB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@AEB_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@AEB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>, COMDAT

; 50   : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+16], al

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@1@AEB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,bool>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPEAVThreadInfo@@@std@@QEAA@AEBKAEBQEAVThreadInfo@@@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@$$CBKPEAVThreadInfo@@@std@@QEAA@AEBKAEBQEAVThreadInfo@@@Z PROC ; std::pair<unsigned long const ,ThreadInfo * __ptr64>::pair<unsigned long const ,ThreadInfo * __ptr64>, COMDAT

; 50   : 		{	// construct from specified values

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@$$CBKPEAVThreadInfo@@@std@@QEAA@AEBKAEBQEAVThreadInfo@@@Z ENDP ; std::pair<unsigned long const ,ThreadInfo * __ptr64>::pair<unsigned long const ,ThreadInfo * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@1@AEB_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@1@AEB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,bool>, COMDAT

; 50   : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+16], al

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@std@@QEAA@AEBViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@1@AEB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,bool>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\functional
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QEBA_NAEBK0@Z
_TEXT	SEGMENT
this$ = 8
_Left$ = 16
_Right$ = 24
??R?$less@K@std@@QEBA_NAEBK0@Z PROC			; std::less<unsigned long>::operator(), COMDAT

; 143  : 		return (_Left < _Right);

	mov	ecx, DWORD PTR [r8]
	cmp	DWORD PTR [rdx], ecx
	setb	al

; 144  : 		}

	ret	0
??R?$less@K@std@@QEBA_NAEBK0@Z ENDP			; std::less<unsigned long>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >, COMDAT

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@SAAEBKAEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
_Val$ = 8
?_Kfn@?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@SAAEBKAEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z PROC ; std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>::_Kfn, COMDAT

; 65   : 		return (_Val.first);

	mov	rax, rcx

; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@SAAEBKAEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEBKPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Key@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEBKPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Key, COMDAT

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	lea	rax, QWORD PTR [rcx+24]

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEBKPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Key
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >, COMDAT

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
_Val$ = 8
?_Kfn@?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z PROC ; std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>::_Kfn, COMDAT

; 65   : 		return (_Val.first);

	mov	rax, rcx

; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ENDP ; std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEB_KPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Key@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEB_KPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Key, COMDAT

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	lea	rax, QWORD PTR [rcx+24]

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@KAAEB_KPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Key
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\functional
_TEXT	ENDS
;	COMDAT ??R?$less@_K@std@@QEBA_NAEB_K0@Z
_TEXT	SEGMENT
this$ = 8
_Left$ = 16
_Right$ = 24
??R?$less@_K@std@@QEBA_NAEB_K0@Z PROC			; std::less<unsigned __int64>::operator(), COMDAT

; 143  : 		return (_Left < _Right);

	mov	rcx, QWORD PTR [r8]
	cmp	QWORD PTR [rdx], rcx
	setb	al

; 144  : 		}

	ret	0
??R?$less@_K@std@@QEBA_NAEB_K0@Z ENDP			; std::less<unsigned __int64>::operator()
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CB_KH@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$pair@$$CB_KH@std@@@std@@QEAA@XZ PROC	; std::allocator<std::pair<unsigned __int64 const ,int> >::allocator<std::pair<unsigned __int64 const ,int> >, COMDAT

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CB_KH@std@@@std@@QEAA@XZ ENDP	; std::allocator<std::pair<unsigned __int64 const ,int> >::allocator<std::pair<unsigned __int64 const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KH@2@@Z
_TEXT	SEGMENT
_Val$ = 8
?_Kfn@?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KH@2@@Z PROC ; std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>::_Kfn, COMDAT

; 65   : 		return (_Val.first);

	mov	rax, rcx

; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@SAAEB_KAEBU?$pair@$$CB_KH@2@@Z ENDP ; std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@KAAEB_KPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Key@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@KAAEB_KPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Key, COMDAT

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	lea	rax, QWORD PTR [rcx+24]

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@KAAEB_KPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Key
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
_TEXT	ENDS
;	COMDAT ??0?$pair@_KPEAVThreadInfo@@@std@@QEAA@AEB_KAEBQEAVThreadInfo@@@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@_KPEAVThreadInfo@@@std@@QEAA@AEB_KAEBQEAVThreadInfo@@@Z PROC ; std::pair<unsigned __int64,ThreadInfo * __ptr64>::pair<unsigned __int64,ThreadInfo * __ptr64>, COMDAT

; 50   : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@_KPEAVThreadInfo@@@std@@QEAA@AEB_KAEBQEAVThreadInfo@@@Z ENDP ; std::pair<unsigned __int64,ThreadInfo * __ptr64>::pair<unsigned __int64,ThreadInfo * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@KPEAVThreadInfo@@@std@@QEAA@AEBKAEBQEAVThreadInfo@@@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@KPEAVThreadInfo@@@std@@QEAA@AEBKAEBQEAVThreadInfo@@@Z PROC ; std::pair<unsigned long,ThreadInfo * __ptr64>::pair<unsigned long,ThreadInfo * __ptr64>, COMDAT

; 50   : 		{	// construct from specified values

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@KPEAVThreadInfo@@@std@@QEAA@AEBKAEBQEAVThreadInfo@@@Z ENDP ; std::pair<unsigned long,ThreadInfo * __ptr64>::pair<unsigned long,ThreadInfo * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$pair@_KH@std@@QEAA@AEB_KAEBH@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??0?$pair@_KH@std@@QEAA@AEB_KAEBH@Z PROC		; std::pair<unsigned __int64,int>::pair<unsigned __int64,int>, COMDAT

; 50   : 		{	// construct from specified values

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	eax, DWORD PTR [r8]
	mov	DWORD PTR [rcx+8], eax

; 51   : 		}

	mov	rax, rcx
	ret	0
??0?$pair@_KH@std@@QEAA@AEB_KAEBH@Z ENDP		; std::pair<unsigned __int64,int>::pair<unsigned __int64,int>
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\lightweightstack.h
_TEXT	ENDS
;	COMDAT ?pop@?$LightweightStack@UStackEntry@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?pop@?$LightweightStack@UStackEntry@@@@QEAAXXZ PROC	; LightweightStack<StackEntry>::pop, COMDAT

; 77   : 		assert(!empty());
; 78   : 		topPointer--;

	add	QWORD PTR [rcx+8], -24

; 79   : 	}

	ret	0
?pop@?$LightweightStack@UStackEntry@@@@QEAAXXZ ENDP	; LightweightStack<StackEntry>::pop
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?belowTop@?$LightweightStack@UStackEntry@@@@QEAAAEAUStackEntry@@XZ
_TEXT	SEGMENT
this$ = 8
?belowTop@?$LightweightStack@UStackEntry@@@@QEAAAEAUStackEntry@@XZ PROC ; LightweightStack<StackEntry>::belowTop, COMDAT

; 64   : 		assert(size() >= 2);
; 65   : 		return *(topPointer - 1);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, 24

; 66   : 	}

	ret	0
?belowTop@?$LightweightStack@UStackEntry@@@@QEAAAEAUStackEntry@@XZ ENDP ; LightweightStack<StackEntry>::belowTop
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?top@?$LightweightStack@UStackEntry@@@@QEAAAEAUStackEntry@@XZ
_TEXT	SEGMENT
this$ = 8
?top@?$LightweightStack@UStackEntry@@@@QEAAAEAUStackEntry@@XZ PROC ; LightweightStack<StackEntry>::top, COMDAT

; 59   : 		assert(!empty());
; 60   : 		return *topPointer;

	mov	rax, QWORD PTR [rcx+8]

; 61   : 	}

	ret	0
?top@?$LightweightStack@UStackEntry@@@@QEAAAEAUStackEntry@@XZ ENDP ; LightweightStack<StackEntry>::top
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?hasAtLeastTwoElements@?$LightweightStack@UStackEntry@@@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?hasAtLeastTwoElements@?$LightweightStack@UStackEntry@@@@QEAA_NXZ PROC ; LightweightStack<StackEntry>::hasAtLeastTwoElements, COMDAT

; 51   : 		return topPointer > array;

	mov	rdx, QWORD PTR [rcx]
	cmp	QWORD PTR [rcx+8], rdx
	seta	al

; 52   : 	}

	ret	0
?hasAtLeastTwoElements@?$LightweightStack@UStackEntry@@@@QEAA_NXZ ENDP ; LightweightStack<StackEntry>::hasAtLeastTwoElements
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?empty@?$LightweightStack@UStackEntry@@@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$LightweightStack@UStackEntry@@@@QEAA_NXZ PROC	; LightweightStack<StackEntry>::empty, COMDAT

; 47   : 		return topPointer < array;

	mov	rdx, QWORD PTR [rcx]
	cmp	QWORD PTR [rcx+8], rdx
	setb	al

; 48   : 	}

	ret	0
?empty@?$LightweightStack@UStackEntry@@@@QEAA_NXZ ENDP	; LightweightStack<StackEntry>::empty
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
_TEXT	ENDS
;	COMDAT ?ExceptionCatcherLeave@CProfiler@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?ExceptionCatcherLeave@CProfiler@@UEAAJXZ PROC		; CProfiler::ExceptionCatcherLeave, COMDAT

; 594  : 	DebugWriteLine(L"ExceptionCatcherLeave");
; 595  :     return S_OK;

	xor	eax, eax

; 596  : }

	ret	0
?ExceptionCatcherLeave@CProfiler@@UEAAJXZ ENDP		; CProfiler::ExceptionCatcherLeave
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionCatcherEnter@CProfiler@@UEAAJ_K0@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
__formal$ = 24
?ExceptionCatcherEnter@CProfiler@@UEAAJ_K0@Z PROC	; CProfiler::ExceptionCatcherEnter, COMDAT

; 588  : 	DebugWriteLine(L"ExceptionCatcherEnter");
; 589  :     return S_OK;

	xor	eax, eax

; 590  : }

	ret	0
?ExceptionCatcherEnter@CProfiler@@UEAAJ_K0@Z ENDP	; CProfiler::ExceptionCatcherEnter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionUnwindFinallyLeave@CProfiler@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?ExceptionUnwindFinallyLeave@CProfiler@@UEAAJXZ PROC	; CProfiler::ExceptionUnwindFinallyLeave, COMDAT

; 582  : 	DebugWriteLine(L"ExceptionUnwindFinallyLeave");
; 583  :     return S_OK;

	xor	eax, eax

; 584  : }

	ret	0
?ExceptionUnwindFinallyLeave@CProfiler@@UEAAJXZ ENDP	; CProfiler::ExceptionUnwindFinallyLeave
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionUnwindFinallyEnter@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?ExceptionUnwindFinallyEnter@CProfiler@@UEAAJ_K@Z PROC	; CProfiler::ExceptionUnwindFinallyEnter, COMDAT

; 576  : 	DebugWriteLine(L"ExceptionUnwindFinallyEnter");
; 577  :     return S_OK;

	xor	eax, eax

; 578  : }

	ret	0
?ExceptionUnwindFinallyEnter@CProfiler@@UEAAJ_K@Z ENDP	; CProfiler::ExceptionUnwindFinallyEnter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionOSHandlerLeave@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?ExceptionOSHandlerLeave@CProfiler@@UEAAJ_K@Z PROC	; CProfiler::ExceptionOSHandlerLeave, COMDAT

; 570  : 	DebugWriteLine(L"ExceptionOSHandlerLeave");
; 571  :     return S_OK;

	xor	eax, eax

; 572  : }

	ret	0
?ExceptionOSHandlerLeave@CProfiler@@UEAAJ_K@Z ENDP	; CProfiler::ExceptionOSHandlerLeave
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionOSHandlerEnter@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?ExceptionOSHandlerEnter@CProfiler@@UEAAJ_K@Z PROC	; CProfiler::ExceptionOSHandlerEnter, COMDAT

; 564  : 	DebugWriteLine(L"ExceptionOSHandlerEnter");
; 565  :     return S_OK;

	xor	eax, eax

; 566  : }

	ret	0
?ExceptionOSHandlerEnter@CProfiler@@UEAAJ_K@Z ENDP	; CProfiler::ExceptionOSHandlerEnter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionCLRCatcherExecute@CProfiler@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?ExceptionCLRCatcherExecute@CProfiler@@UEAAJXZ PROC	; CProfiler::ExceptionCLRCatcherExecute, COMDAT

; 558  : 	DebugWriteLine(L"ExceptionCLRCatcherExecute");
; 559  :     return S_OK;

	xor	eax, eax

; 560  : }

	ret	0
?ExceptionCLRCatcherExecute@CProfiler@@UEAAJXZ ENDP	; CProfiler::ExceptionCLRCatcherExecute
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionCLRCatcherFound@CProfiler@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?ExceptionCLRCatcherFound@CProfiler@@UEAAJXZ PROC	; CProfiler::ExceptionCLRCatcherFound, COMDAT

; 552  : 	DebugWriteLine(L"ExceptionCLRCatcherFound");
; 553  :     return S_OK;

	xor	eax, eax

; 554  : }

	ret	0
?ExceptionCLRCatcherFound@CProfiler@@UEAAJXZ ENDP	; CProfiler::ExceptionCLRCatcherFound
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionSearchCatcherFound@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?ExceptionSearchCatcherFound@CProfiler@@UEAAJ_K@Z PROC	; CProfiler::ExceptionSearchCatcherFound, COMDAT

; 546  : 	DebugWriteLine(L"ExceptionSearchCatcherFound");
; 547  :     return S_OK;

	xor	eax, eax

; 548  : }

	ret	0
?ExceptionSearchCatcherFound@CProfiler@@UEAAJ_K@Z ENDP	; CProfiler::ExceptionSearchCatcherFound
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionSearchFilterLeave@CProfiler@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?ExceptionSearchFilterLeave@CProfiler@@UEAAJXZ PROC	; CProfiler::ExceptionSearchFilterLeave, COMDAT

; 540  : 	DebugWriteLine(L"ExceptionSearchFilterLeave");
; 541  :     return S_OK;

	xor	eax, eax

; 542  : }

	ret	0
?ExceptionSearchFilterLeave@CProfiler@@UEAAJXZ ENDP	; CProfiler::ExceptionSearchFilterLeave
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionSearchFilterEnter@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?ExceptionSearchFilterEnter@CProfiler@@UEAAJ_K@Z PROC	; CProfiler::ExceptionSearchFilterEnter, COMDAT

; 534  : 	DebugWriteLine(L"ExceptionSearchFilterEnter");
; 535  :     return S_OK;

	xor	eax, eax

; 536  : }

	ret	0
?ExceptionSearchFilterEnter@CProfiler@@UEAAJ_K@Z ENDP	; CProfiler::ExceptionSearchFilterEnter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionSearchFunctionLeave@CProfiler@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?ExceptionSearchFunctionLeave@CProfiler@@UEAAJXZ PROC	; CProfiler::ExceptionSearchFunctionLeave, COMDAT

; 528  : 	DebugWriteLine(L"ExceptionSearchFunctionLeave");
; 529  :     return S_OK;

	xor	eax, eax

; 530  : }

	ret	0
?ExceptionSearchFunctionLeave@CProfiler@@UEAAJXZ ENDP	; CProfiler::ExceptionSearchFunctionLeave
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionSearchFunctionEnter@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?ExceptionSearchFunctionEnter@CProfiler@@UEAAJ_K@Z PROC	; CProfiler::ExceptionSearchFunctionEnter, COMDAT

; 522  : 	DebugWriteLine(L"ExceptionSearchFunctionEnter");
; 523  :     return S_OK;

	xor	eax, eax

; 524  : }

	ret	0
?ExceptionSearchFunctionEnter@CProfiler@@UEAAJ_K@Z ENDP	; CProfiler::ExceptionSearchFunctionEnter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionUnwindFunctionEnter@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?ExceptionUnwindFunctionEnter@CProfiler@@UEAAJ_K@Z PROC	; CProfiler::ExceptionUnwindFunctionEnter, COMDAT

; 509  : 	DebugWriteLine(L"ExceptionUnwindFunctionEnter");
; 510  :     return S_OK;

	xor	eax, eax

; 511  : }

	ret	0
?ExceptionUnwindFunctionEnter@CProfiler@@UEAAJ_K@Z ENDP	; CProfiler::ExceptionUnwindFunctionEnter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ExceptionThrown@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
?ExceptionThrown@CProfiler@@UEAAJ_K@Z PROC		; CProfiler::ExceptionThrown, COMDAT

; 503  : 	DebugWriteLine(L"ExceptionThrown");
; 504  :     return S_OK;

	xor	eax, eax

; 505  : }

	ret	0
?ExceptionThrown@CProfiler@@UEAAJ_K@Z ENDP		; CProfiler::ExceptionThrown
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1ThreadInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ThreadInfo@@QEAA@XZ PROC				; ThreadInfo::~ThreadInfo, COMDAT
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
??1ThreadInfo@@QEAA@XZ ENDP				; ThreadInfo::~ThreadInfo
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GThreadInfo@@QEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+36
	DD	imagerel $unwind$??_GThreadInfo@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GThreadInfo@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GThreadInfo@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GThreadInfo@@QEAAPEAXI@Z PROC			; ThreadInfo::`scalar deleting destructor', COMDAT
$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 16
	call	QWORD PTR __imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	mov	rcx, rbx
	call	??3@YAXPEAX@Z				; operator delete
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GThreadInfo@@QEAAPEAXI@Z ENDP			; ThreadInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SetEventMask@CProfiler@@AEAAJXZ		; CProfiler::SetEventMask
; Function compile flags: /Ogtpy
;	COMDAT ?SetEventMask@CProfiler@@AEAAJXZ
_TEXT	SEGMENT
this$ = 8
?SetEventMask@CProfiler@@AEAAJXZ PROC			; CProfiler::SetEventMask, COMDAT

; 390  : 	DWORD eventMask = COR_PRF_MONITOR_ENTERLEAVE | COR_PRF_MONITOR_THREADS | COR_PRF_MONITOR_FUNCTION_UNLOADS | COR_PRF_MONITOR_CLR_EXCEPTIONS | COR_PRF_MONITOR_EXCEPTIONS;
; 391  : 	return pICorProfilerInfo->SetEventMask(eventMask);

	mov	rcx, QWORD PTR [rcx+8]
	mov	edx, 16781889				; 01001241H
	mov	rax, QWORD PTR [rcx]

; 392  : }

	rex_jmp	QWORD PTR [rax+128]
?SetEventMask@CProfiler@@AEAAJXZ ENDP			; CProfiler::SetEventMask
_TEXT	ENDS
PUBLIC	?getNewPosFunctionID@@YAHXZ			; getNewPosFunctionID
; Function compile flags: /Ogtpy
;	COMDAT ?getNewPosFunctionID@@YAHXZ
_TEXT	SEGMENT
?getNewPosFunctionID@@YAHXZ PROC			; getNewPosFunctionID, COMDAT

; 173  : }

	npad	2
$LL3@getNewPosF:

; 162  : 	const int step = 5;
; 163  : 	// Simple continuous assignment of IDs leads to problems with the
; 164  : 	// linear probing in FunctionInfo, so we use multiples of 'step' as IDs.
; 165  : 	// The step should not be a multiple of 2 (otherwise parts of the hash table could not be used)!
; 166  : 	LONG oldID;
; 167  : 	LONG newID;
; 168  : 	do {
; 169  : 		oldID = nextPosFunctionID;

	mov	eax, DWORD PTR ?nextPosFunctionID@@3JC	; nextPosFunctionID

; 170  : 		newID = ((oldID + step) & 0x7FFFFFFF); // x % 2^31

	lea	ecx, DWORD PTR [rax+5]
	btr	ecx, 31

; 171  : 	} while (InterlockedCompareExchange(&nextPosFunctionID, newID, oldID) != oldID);

	lock cmpxchg DWORD PTR ?nextPosFunctionID@@3JC, ecx ; nextPosFunctionID
	jne	SHORT $LL3@getNewPosF

; 172  : 	return newID;

	mov	eax, ecx

; 173  : }

	ret	0
?getNewPosFunctionID@@YAHXZ ENDP			; getNewPosFunctionID
_TEXT	ENDS
PUBLIC	?DetachFromThread@@YAXPEAUThreadLocalData@@@Z	; DetachFromThread
; Function compile flags: /Ogtpy
;	COMDAT ?DetachFromThread@@YAXPEAUThreadLocalData@@@Z
_TEXT	SEGMENT
data$ = 8
?DetachFromThread@@YAXPEAUThreadLocalData@@@Z PROC	; DetachFromThread, COMDAT

; 117  : {

	mov	r8, rcx

; 118  : 	if (data != nullptr) {

	test	rcx, rcx
	je	SHORT $LN1@DetachFrom

; 119  : 		DebugWriteLine(L"DetachFromThread %d", data->threadID);
; 120  : 		ULONGLONG tsc = __rdtsc();

	rdtsc
	shl	rdx, 32					; 00000020H
	or	rax, rdx

; 121  : 		while (!data->stack.empty()) {

	mov	rdx, QWORD PTR [rcx+24]
	mov	r9, rax
	cmp	QWORD PTR [rcx+32], rdx
	jb	SHORT $LN1@DetachFrom
	npad	2
$LL2@DetachFrom:

; 122  : 			StackEntry &stackTop = data->stack.top();

	mov	rcx, QWORD PTR [r8+32]

; 123  : 			stackTop.function->TimeSpent += (tsc - stackTop.startTime);

	mov	rax, r9
	sub	rax, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR [rcx]
	add	QWORD PTR [rdx+8], rax

; 124  : 			data->stack.pop();

	add	QWORD PTR [r8+32], -24
	mov	rax, QWORD PTR [r8+24]
	cmp	QWORD PTR [r8+32], rax
	jae	SHORT $LL2@DetachFrom
$LN1@DetachFrom:

; 125  : 		}
; 126  : 	}
; 127  : }

	fatret	0
?DetachFromThread@@YAXPEAUThreadLocalData@@@Z ENDP	; DetachFromThread
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Release@CProfiler@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?Release@CProfiler@@UEAAKXZ PROC			; CProfiler::Release, COMDAT

; 28   : 	return 1;

	mov	eax, 1

; 29   : }

	ret	0
?Release@CProfiler@@UEAAKXZ ENDP			; CProfiler::Release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CProfiler@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?AddRef@CProfiler@@UEAAKXZ PROC				; CProfiler::AddRef, COMDAT

; 23   : 	return 1;

	mov	eax, 1

; 24   : }

	ret	0
?AddRef@CProfiler@@UEAAKXZ ENDP				; CProfiler::AddRef
_TEXT	ENDS
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\global.h
pdata	SEGMENT
$pdata$??0ThreadInfo@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+38
	DD	imagerel $unwind$??0ThreadInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ThreadInfo@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0ThreadInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0ThreadInfo@@QEAA@XZ PROC				; ThreadInfo::ThreadInfo, COMDAT

; 56   : 		ThreadInfo()

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 16
	call	QWORD PTR __imp_??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ

; 57   : 		{
; 58   : 			this->unmanagedThreadId = 0;

	xor	r11d, r11d

; 59   : 			this->managedThreadId = nullptr;
; 60   : 		}

	mov	rax, rbx
	mov	DWORD PTR [rbx], r11d
	mov	QWORD PTR [rbx+8], r11
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0ThreadInfo@@QEAA@XZ ENDP				; ThreadInfo::ThreadInfo
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0StackEntry@@QEAA@PEAUFunctionInfo@@_K@Z
_TEXT	SEGMENT
this$ = 8
function$ = 16
startTime$ = 24
??0StackEntry@@QEAA@PEAUFunctionInfo@@_K@Z PROC		; StackEntry::StackEntry, COMDAT

; 29   : 	StackEntry(FunctionInfo * function, ULONGLONG startTime) : function(function), startTime(startTime), frameCount(1) {}

	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], r8
	mov	DWORD PTR [rcx+16], 1
	mov	rax, rcx
	ret	0
??0StackEntry@@QEAA@PEAUFunctionInfo@@_K@Z ENDP		; StackEntry::StackEntry
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
_TEXT	ENDS
;	COMDAT ?Leave@CriticalSection@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Leave@CriticalSection@@QEAAXXZ PROC			; CriticalSection::Leave, COMDAT

; 30   : 		LeaveCriticalSection(&criticalSection);
; 31   : 	}

	rex_jmp	QWORD PTR __imp_LeaveCriticalSection
?Leave@CriticalSection@@QEAAXXZ ENDP			; CriticalSection::Leave
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Enter@CriticalSection@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Enter@CriticalSection@@QEAAXXZ PROC			; CriticalSection::Enter, COMDAT

; 27   : 		EnterCriticalSection(&criticalSection);
; 28   : 	}

	rex_jmp	QWORD PTR __imp_EnterCriticalSection
?Enter@CriticalSection@@QEAAXXZ ENDP			; CriticalSection::Enter
_TEXT	ENDS
EXTRN	_CxxThrowException:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CriticalSection@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+63
	DD	imagerel $unwind$??0CriticalSection@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CriticalSection@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0CriticalSection@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
$T145039 = 56
??0CriticalSection@@QEAA@XZ PROC			; CriticalSection::CriticalSection, COMDAT

; 19   : 	CriticalSection() {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H

; 20   : 		if (!InitializeCriticalSectionAndSpinCount(&criticalSection, 0x80000400))

	mov	edx, -2147482624			; 80000400H
	mov	rbx, rcx
	call	QWORD PTR __imp_InitializeCriticalSectionAndSpinCount
	test	eax, eax
	jne	SHORT $LN1@CriticalSe

; 21   : 			throw "Couldn't initialize critical section";

	lea	rax, OFFSET FLAT:??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	lea	rdx, OFFSET FLAT:_TI2PEAD
	lea	rcx, QWORD PTR $T145039[rsp]
	mov	QWORD PTR $T145039[rsp], rax
	call	_CxxThrowException
	int	3
$LN1@CriticalSe:

; 22   : 	}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@CriticalSe:
??0CriticalSection@@QEAA@XZ ENDP			; CriticalSection::CriticalSection
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0_Container_base_aux@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Container_base_aux@std@@QEAA@XZ PROC		; std::_Container_base_aux::_Container_base_aux, COMDAT

; 380  : 		{
; 381  : 		// Do nothing: _Container_base_aux_alloc_real() will construct the aux object.
; 382  : 		}

	mov	rax, rcx
	ret	0
??0_Container_base_aux@std@@QEAA@XZ ENDP		; std::_Container_base_aux::_Container_base_aux
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Getcont@_Aux_cont@std@@QEBAPEBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getcont@_Aux_cont@std@@QEBAPEBV_Container_base_aux@2@XZ PROC ; std::_Aux_cont::_Getcont, COMDAT

; 369  : 		return _Mycontainer;

	mov	rax, QWORD PTR [rcx]

; 370  : 		}

	ret	0
?_Getcont@_Aux_cont@std@@QEBAPEBV_Container_base_aux@2@XZ ENDP ; std::_Aux_cont::_Getcont
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Aux_cont@std@@QEAA@QEBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
this$ = 8
_Pcont$ = 16
??0_Aux_cont@std@@QEAA@QEBV_Container_base_aux@1@@Z PROC ; std::_Aux_cont::_Aux_cont, COMDAT

; 364  : 	explicit _Aux_cont(const _Container_base_aux * const _Pcont)

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0_Aux_cont@std@@QEAA@QEBV_Container_base_aux@1@@Z ENDP ; std::_Aux_cont::_Aux_cont
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT

; 380  : 		{	// destroy the object

	lea	rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rcx], rax

; 381  : 		}

	rex_jmp	QWORD PTR __imp_??1exception@std@@UEAA@XZ
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@PEBD@Z DD 020a01H
	DD	03006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0bad_alloc@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@QEAA@PEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 371  : 		{	// construct from message string

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rdx, QWORD PTR _Message$[rsp]
	mov	rbx, rcx
	mov	QWORD PTR _Message$[rsp], 0
	call	QWORD PTR __imp_??0exception@std@@QEAA@AEBQEBD@Z
	lea	r11, OFFSET FLAT:??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	rax, rbx
	mov	QWORD PTR [rbx], r11
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_alloc@std@@QEAA@PEBD@Z ENDP			; std::bad_alloc::bad_alloc
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@V_Aux_cont@std@@@std@@YAPEAV_Aux_cont@0@_KPEAV10@@Z DD imagerel $LN13
	DD	imagerel $LN13+87
	DD	imagerel $unwind$??$_Allocate@V_Aux_cont@std@@@std@@YAPEAV_Aux_cont@0@_KPEAV10@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@V_Aux_cont@std@@@std@@YAPEAV_Aux_cont@0@_KPEAV10@@Z DD 010401H
	DD	08204H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Allocate@V_Aux_cont@std@@@std@@YAPEAV_Aux_cont@0@_KPEAV10@@Z
_TEXT	SEGMENT
$T147801 = 32
$T147809 = 80
_Count$ = 80
??$_Allocate@V_Aux_cont@std@@@std@@YAPEAV_Aux_cont@0@_KPEAV10@@Z PROC ; std::_Allocate<std::_Aux_cont>, COMDAT

; 36   : 	{	// check for integer overflow

$LN13:
	sub	rsp, 72					; 00000048H

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	xor	edx, edx
	or	rax, -1
	div	rcx
	cmp	rax, 8
	jae	SHORT $LN1@Allocate@4

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	rdx, QWORD PTR $T147809[rsp]
	lea	rcx, QWORD PTR $T147801[rsp]
	mov	QWORD PTR $T147809[rsp], 0
	call	QWORD PTR __imp_??0exception@std@@QEAA@AEBQEBD@Z
	lea	r11, OFFSET FLAT:??_7bad_alloc@std@@6B@
	lea	rdx, OFFSET FLAT:_TI2?AVbad_alloc@std@@
	lea	rcx, QWORD PTR $T147801[rsp]
	mov	QWORD PTR $T147801[rsp], r11
	call	_CxxThrowException
	int	3
$LN1@Allocate@4:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	shl	rcx, 3

; 44   : 	}

	add	rsp, 72					; 00000048H
	jmp	??2@YAPEAX_K@Z				; operator new
$LN12@Allocate@4:
??$_Allocate@V_Aux_cont@std@@@std@@YAPEAV_Aux_cont@0@_KPEAV10@@Z ENDP ; std::_Allocate<std::_Aux_cont>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@AEBQEAU120@@Z
_TEXT	SEGMENT
_Ptr$ = 8
_Val$ = 16
??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@AEBQEAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	rcx, rcx
	je	SHORT $LN3@Construct@2
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN3@Construct@2:

; 53   : 	}

	fatret	0
??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@AEBQEAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@AEBQEAU120@@Z
_TEXT	SEGMENT
_Ptr$ = 8
_Val$ = 16
??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@AEBQEAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	rcx, rcx
	je	SHORT $LN3@Construct@3
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN3@Construct@3:

; 53   : 	}

	fatret	0
??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@AEBQEAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@AEBQEAU120@@Z
_TEXT	SEGMENT
_Ptr$ = 8
_Val$ = 16
??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@AEBQEAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	test	rcx, rcx
	je	SHORT $LN3@Construct@4
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN3@Construct@4:

; 53   : 	}

	fatret	0
??$_Construct@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@PEAU123@@std@@YAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@AEBQEAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64,std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
pdata	SEGMENT
$pdata$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z DD imagerel $LN13
	DD	imagerel $LN13+91
	DD	imagerel $unwind$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z DD 010401H
	DD	08204H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z
_TEXT	SEGMENT
$T147858 = 32
$T147866 = 80
_Count$ = 80
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

$LN13:
	sub	rsp, 72					; 00000048H

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	xor	edx, edx
	or	rax, -1
	div	rcx
	cmp	rax, 48					; 00000030H
	jae	SHORT $LN1@Allocate@5

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	rdx, QWORD PTR $T147866[rsp]
	lea	rcx, QWORD PTR $T147858[rsp]
	mov	QWORD PTR $T147866[rsp], 0
	call	QWORD PTR __imp_??0exception@std@@QEAA@AEBQEBD@Z
	lea	r11, OFFSET FLAT:??_7bad_alloc@std@@6B@
	lea	rdx, OFFSET FLAT:_TI2?AVbad_alloc@std@@
	lea	rcx, QWORD PTR $T147858[rsp]
	mov	QWORD PTR $T147858[rsp], r11
	call	_CxxThrowException
	int	3
$LN1@Allocate@5:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	rcx, QWORD PTR [rcx+rcx*2]
	shl	rcx, 4

; 44   : 	}

	add	rsp, 72					; 00000048H
	jmp	??2@YAPEAX_K@Z				; operator new
$LN12@Allocate@5:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
pdata	SEGMENT
$pdata$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z DD imagerel $LN13
	DD	imagerel $LN13+91
	DD	imagerel $unwind$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z DD 010401H
	DD	08204H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z
_TEXT	SEGMENT
$T147879 = 32
$T147887 = 80
_Count$ = 80
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

$LN13:
	sub	rsp, 72					; 00000048H

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	xor	edx, edx
	or	rax, -1
	div	rcx
	cmp	rax, 48					; 00000030H
	jae	SHORT $LN1@Allocate@6

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	rdx, QWORD PTR $T147887[rsp]
	lea	rcx, QWORD PTR $T147879[rsp]
	mov	QWORD PTR $T147887[rsp], 0
	call	QWORD PTR __imp_??0exception@std@@QEAA@AEBQEBD@Z
	lea	r11, OFFSET FLAT:??_7bad_alloc@std@@6B@
	lea	rdx, OFFSET FLAT:_TI2?AVbad_alloc@std@@
	lea	rcx, QWORD PTR $T147879[rsp]
	mov	QWORD PTR $T147879[rsp], r11
	call	_CxxThrowException
	int	3
$LN1@Allocate@6:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	rcx, QWORD PTR [rcx+rcx*2]
	shl	rcx, 4

; 44   : 	}

	add	rsp, 72					; 00000048H
	jmp	??2@YAPEAX_K@Z				; operator new
$LN12@Allocate@6:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@_KPEAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
pdata	SEGMENT
$pdata$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@_KPEAU120@@Z DD imagerel $LN13
	DD	imagerel $LN13+91
	DD	imagerel $unwind$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@_KPEAU120@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@_KPEAU120@@Z DD 010401H
	DD	08204H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@_KPEAU120@@Z
_TEXT	SEGMENT
$T147900 = 32
$T147908 = 80
_Count$ = 80
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@_KPEAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

$LN13:
	sub	rsp, 72					; 00000048H

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	xor	edx, edx
	or	rax, -1
	div	rcx
	cmp	rax, 48					; 00000030H
	jae	SHORT $LN1@Allocate@7

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	rdx, QWORD PTR $T147908[rsp]
	lea	rcx, QWORD PTR $T147900[rsp]
	mov	QWORD PTR $T147908[rsp], 0
	call	QWORD PTR __imp_??0exception@std@@QEAA@AEBQEBD@Z
	lea	r11, OFFSET FLAT:??_7bad_alloc@std@@6B@
	lea	rdx, OFFSET FLAT:_TI2?AVbad_alloc@std@@
	lea	rcx, QWORD PTR $T147900[rsp]
	mov	QWORD PTR $T147900[rsp], r11
	call	_CxxThrowException
	int	3
$LN1@Allocate@7:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	rcx, QWORD PTR [rcx+rcx*2]
	shl	rcx, 4

; 44   : 	}

	add	rsp, 72					; 00000048H
	jmp	??2@YAPEAX_K@Z				; operator new
$LN12@Allocate@7:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@YAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@_KPEAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
pdata	SEGMENT
$pdata$?allocate@?$allocator@V_Aux_cont@std@@@std@@QEAAPEAV_Aux_cont@2@_K@Z DD imagerel $LN11
	DD	imagerel $LN11+19
	DD	imagerel $unwind$?allocate@?$allocator@V_Aux_cont@std@@@std@@QEAAPEAV_Aux_cont@2@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@V_Aux_cont@std@@@std@@QEAAPEAV_Aux_cont@2@_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ?allocate@?$allocator@V_Aux_cont@std@@@std@@QEAAPEAV_Aux_cont@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@V_Aux_cont@std@@@std@@QEAAPEAV_Aux_cont@2@_K@Z PROC ; std::allocator<std::_Aux_cont>::allocate, COMDAT

; 144  : 		{	// allocate array of _Count elements

$LN11:
	sub	rsp, 40					; 00000028H

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new

; 146  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@V_Aux_cont@std@@@std@@QEAAPEAV_Aux_cont@2@_K@Z ENDP ; std::allocator<std::_Aux_cont>::allocate
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN24
	DD	imagerel $LN24+55
	DD	imagerel $unwind$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >, COMDAT

; 419  : 		{

$LN24:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN3@Container_
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 421  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN3@Container_:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	mov	QWORD PTR [rbx], 0

; 421  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN24
	DD	imagerel $LN24+55
	DD	imagerel $unwind$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >, COMDAT

; 419  : 		{

$LN24:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN3@Container_@2
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 421  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN3@Container_@2:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	mov	QWORD PTR [rbx], 0

; 421  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KH@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD imagerel $LN24
	DD	imagerel $LN24+55
	DD	imagerel $unwind$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KH@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KH@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KH@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KH@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,int> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,int> > >, COMDAT

; 419  : 		{

$LN24:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN3@Container_@3
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 421  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN3@Container_@3:

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

	mov	QWORD PTR [rbx], 0

; 421  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CB_KH@std@@@std@@@std@@IEAA@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,int> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned __int64 const ,int> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBQEAU342@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Val$ = 24
?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBQEAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::construct, COMDAT

; 155  : 		_Construct(_Ptr, _Val);

	test	rdx, rdx
	je	SHORT $LN5@construct@2
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax
$LN5@construct@2:

; 156  : 		}

	fatret	0
?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBQEAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBQEAU342@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Val$ = 24
?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBQEAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::construct, COMDAT

; 155  : 		_Construct(_Ptr, _Val);

	test	rdx, rdx
	je	SHORT $LN5@construct@3
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax
$LN5@construct@3:

; 156  : 		}

	fatret	0
?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBQEAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node * __ptr64>::construct
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBQEAU342@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Val$ = 24
?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBQEAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>::construct, COMDAT

; 155  : 		_Construct(_Ptr, _Val);

	test	rdx, rdx
	je	SHORT $LN5@construct@4
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax
$LN5@construct@4:

; 156  : 		}

	fatret	0
?construct@?$allocator@PEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAXPEAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBQEAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node * __ptr64>::construct
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z DD imagerel $LN11
	DD	imagerel $LN11+19
	DD	imagerel $unwind$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocate, COMDAT

; 144  : 		{	// allocate array of _Count elements

$LN11:
	sub	rsp, 40					; 00000028H

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new

; 146  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocate
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
pdata	SEGMENT
$pdata$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD imagerel $LN63
	DD	imagerel $LN63+79
	DD	imagerel $unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA DD imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA+39
	DD	imagerel $unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
	DD	0ffffffffH
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ+28
	DD	00H
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ+66
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA+32
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
	DD	01H
	DD	imagerel $tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
	DD	06H
	DD	imagerel $ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T148359 = 32
this$ = 64
_Wherenode$ = 72
?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode, COMDAT

; 1383 : 		{	// allocate a head/nil node

$LN63:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T148359[rsp], -2

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR _Wherenode$[rsp], rax

; 1385 : 		int _Linkcnt = 0;
; 1386 : 
; 1387 : 		_TRY_BEGIN
; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	test	rax, rax
	je	SHORT $LN61@Buynode
	xor	ecx, ecx
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN27@Buynode
$LN61@Buynode:
	xor	ecx, ecx
$LN27@Buynode:

; 1389 : 		++_Linkcnt;
; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	lea	rdx, QWORD PTR [rax+8]
	test	rdx, rdx
	je	SHORT $LN37@Buynode
	mov	QWORD PTR [rdx], rcx
$LN37@Buynode:

; 1391 : 		++_Linkcnt;
; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	lea	rdx, QWORD PTR [rax+16]
	test	rdx, rdx
	je	SHORT $LN47@Buynode
	mov	QWORD PTR [rdx], rcx
$LN47@Buynode:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1399 : 		_RERAISE;
; 1400 : 		_CATCH_END
; 1401 : 		_Color(_Wherenode) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	BYTE PTR [rax+41], 0

; 1403 : 		return (_Wherenode);
; 1404 : 		}

	add	rsp, 56					; 00000038H
	ret	0
$LN62@Buynode:
?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T148359 = 32
this$ = 64
_Wherenode$ = 72
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode'::`1'::catch$0

; 1393 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ$0:

; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	rcx, QWORD PTR _Wherenode$[rbp]
	call	??3@YAXPEAX@Z				; operator delete

; 1399 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z DD imagerel $LN11
	DD	imagerel $LN11+19
	DD	imagerel $unwind$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocate, COMDAT

; 144  : 		{	// allocate array of _Count elements

$LN11:
	sub	rsp, 40					; 00000028H

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new

; 146  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@_K@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Node>::allocate
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
pdata	SEGMENT
$pdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD imagerel $LN63
	DD	imagerel $LN63+79
	DD	imagerel $unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA DD imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA+39
	DD	imagerel $unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
	DD	0ffffffffH
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ+28
	DD	00H
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ+66
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA+32
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
	DD	01H
	DD	imagerel $tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
	DD	06H
	DD	imagerel $ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T148557 = 32
this$ = 64
_Wherenode$ = 72
?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode, COMDAT

; 1383 : 		{	// allocate a head/nil node

$LN63:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T148557[rsp], -2

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR _Wherenode$[rsp], rax

; 1385 : 		int _Linkcnt = 0;
; 1386 : 
; 1387 : 		_TRY_BEGIN
; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	test	rax, rax
	je	SHORT $LN61@Buynode@2
	xor	ecx, ecx
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN27@Buynode@2
$LN61@Buynode@2:
	xor	ecx, ecx
$LN27@Buynode@2:

; 1389 : 		++_Linkcnt;
; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	lea	rdx, QWORD PTR [rax+8]
	test	rdx, rdx
	je	SHORT $LN37@Buynode@2
	mov	QWORD PTR [rdx], rcx
$LN37@Buynode@2:

; 1391 : 		++_Linkcnt;
; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	lea	rdx, QWORD PTR [rax+16]
	test	rdx, rdx
	je	SHORT $LN47@Buynode@2
	mov	QWORD PTR [rdx], rcx
$LN47@Buynode@2:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1399 : 		_RERAISE;
; 1400 : 		_CATCH_END
; 1401 : 		_Color(_Wherenode) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	BYTE PTR [rax+41], 0

; 1403 : 		return (_Wherenode);
; 1404 : 		}

	add	rsp, 56					; 00000038H
	ret	0
$LN62@Buynode@2:
?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T148557 = 32
this$ = 64
_Wherenode$ = 72
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode'::`1'::catch$0

; 1393 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ$0:

; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	rcx, QWORD PTR _Wherenode$[rbp]
	call	??3@YAXPEAX@Z				; operator delete

; 1399 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\exception
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@_K@Z DD imagerel $LN11
	DD	imagerel $LN11+19
	DD	imagerel $unwind$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@_K@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@_K@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>::allocate, COMDAT

; 144  : 		{	// allocate array of _Count elements

$LN11:
	sub	rsp, 40					; 00000028H

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new

; 146  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@@std@@QEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@_K@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Node>::allocate
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
pdata	SEGMENT
$pdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ DD imagerel $LN63
	DD	imagerel $LN63+79
	DD	imagerel $unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA DD imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA+39
	DD	imagerel $unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ DD imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
	DD	0ffffffffH
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ+28
	DD	00H
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ+66
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA+32
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
	DD	01H
	DD	imagerel $tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
	DD	06H
	DD	imagerel $ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T148755 = 32
this$ = 64
_Wherenode$ = 72
?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode, COMDAT

; 1383 : 		{	// allocate a head/nil node

$LN63:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T148755[rsp], -2

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR _Wherenode$[rsp], rax

; 1385 : 		int _Linkcnt = 0;
; 1386 : 
; 1387 : 		_TRY_BEGIN
; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	test	rax, rax
	je	SHORT $LN61@Buynode@3
	xor	ecx, ecx
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN27@Buynode@3
$LN61@Buynode@3:
	xor	ecx, ecx
$LN27@Buynode@3:

; 1389 : 		++_Linkcnt;
; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	lea	rdx, QWORD PTR [rax+8]
	test	rdx, rdx
	je	SHORT $LN37@Buynode@3
	mov	QWORD PTR [rdx], rcx
$LN37@Buynode@3:

; 1391 : 		++_Linkcnt;
; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	lea	rdx, QWORD PTR [rax+16]
	test	rdx, rdx
	je	SHORT $LN47@Buynode@3
	mov	QWORD PTR [rdx], rcx
$LN47@Buynode@3:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1399 : 		_RERAISE;
; 1400 : 		_CATCH_END
; 1401 : 		_Color(_Wherenode) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	BYTE PTR [rax+41], 0

; 1403 : 		return (_Wherenode);
; 1404 : 		}

	add	rsp, 56					; 00000038H
	ret	0
$LN62@Buynode@3:
?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T148755 = 32
this$ = 64
_Wherenode$ = 72
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode'::`1'::catch$0

; 1393 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ$0:

; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	rcx, QWORD PTR _Wherenode$[rbp]
	call	??3@YAXPEAX@Z				; operator delete

; 1399 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z DD imagerel $LN29
	DD	imagerel $LN29+117
	DD	imagerel $unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA DD imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA+39
	DD	imagerel $unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z DD imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
	DD	0ffffffffH
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z+52
	DD	00H
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z+98
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA+32
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z DD 061919H
	DD	096419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
	DD	01H
	DD	imagerel $tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
	DD	06H
	DD	imagerel $ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z
_TEXT	SEGMENT
_Wherenode$ = 32
$T148839 = 40
this$ = 64
_Larg$ = 72
_Parg$ = 80
_Rarg$ = 88
_Val$ = 96
_Carg$ = 104
?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode, COMDAT

; 1408 : 		{	// allocate a node with pointers, value, and color

$LN29:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T148839[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	r11, rax
	mov	QWORD PTR _Wherenode$[rsp], rax

; 1410 : 		_TRY_BEGIN
; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	test	rax, rax
	je	SHORT $LN4@Buynode@4
	mov	QWORD PTR [rax], rsi
	mov	QWORD PTR [rax+8], rdi
	mov	QWORD PTR [rax+16], rbx
	mov	rax, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r11+24], rcx
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [r11+32], rax
	mov	BYTE PTR [r11+40], 0
	mov	BYTE PTR [r11+41], 0
$LN4@Buynode@4:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1414 : 		_RERAISE;
; 1415 : 		_CATCH_END
; 1416 : 		return (_Wherenode);

	mov	rax, r11

; 1417 : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN28@Buynode@4:
?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Wherenode$ = 32
$T148839 = 40
this$ = 64
_Larg$ = 72
_Parg$ = 80
_Rarg$ = 88
_Val$ = 96
_Carg$ = 104
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode'::`1'::catch$0

; 1412 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z$0:

; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	rcx, QWORD PTR _Wherenode$[rbp]
	call	??3@YAXPEAX@Z				; operator delete

; 1414 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z DD imagerel $LN29
	DD	imagerel $LN29+117
	DD	imagerel $unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA DD imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA+39
	DD	imagerel $unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z DD imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
	DD	0ffffffffH
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z+52
	DD	00H
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z+98
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA+32
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z DD 061919H
	DD	096419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
	DD	01H
	DD	imagerel $tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
	DD	06H
	DD	imagerel $ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z
_TEXT	SEGMENT
_Wherenode$ = 32
$T148918 = 40
this$ = 64
_Larg$ = 72
_Parg$ = 80
_Rarg$ = 88
_Val$ = 96
_Carg$ = 104
?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode, COMDAT

; 1408 : 		{	// allocate a node with pointers, value, and color

$LN29:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T148918[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	r11, rax
	mov	QWORD PTR _Wherenode$[rsp], rax

; 1410 : 		_TRY_BEGIN
; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	test	rax, rax
	je	SHORT $LN4@Buynode@5
	mov	QWORD PTR [rax], rsi
	mov	QWORD PTR [rax+8], rdi
	mov	QWORD PTR [rax+16], rbx
	mov	rax, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r11+24], rcx
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [r11+32], rax
	mov	BYTE PTR [r11+40], 0
	mov	BYTE PTR [r11+41], 0
$LN4@Buynode@5:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1414 : 		_RERAISE;
; 1415 : 		_CATCH_END
; 1416 : 		return (_Wherenode);

	mov	rax, r11

; 1417 : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN28@Buynode@5:
?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Wherenode$ = 32
$T148918 = 40
this$ = 64
_Larg$ = 72
_Parg$ = 80
_Rarg$ = 88
_Val$ = 96
_Carg$ = 104
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode'::`1'::catch$0

; 1412 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z$0:

; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	rcx, QWORD PTR _Wherenode$[rbp]
	call	??3@YAXPEAX@Z				; operator delete

; 1414 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z DD imagerel $LN29
	DD	imagerel $LN29+117
	DD	imagerel $unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA DD imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA+39
	DD	imagerel $unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z DD imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
	DD	0ffffffffH
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z+52
	DD	00H
	DD	imagerel ?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z+98
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA+32
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z DD 061919H
	DD	096419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
	DD	01H
	DD	imagerel $tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
	DD	06H
	DD	imagerel $ip2state$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z
_TEXT	SEGMENT
_Wherenode$ = 32
$T148997 = 40
this$ = 64
_Larg$ = 72
_Parg$ = 80
_Rarg$ = 88
_Val$ = 96
_Carg$ = 104
?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode, COMDAT

; 1408 : 		{	// allocate a node with pointers, value, and color

$LN29:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T148997[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	r11, rax
	mov	QWORD PTR _Wherenode$[rsp], rax

; 1410 : 		_TRY_BEGIN
; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	test	rax, rax
	je	SHORT $LN4@Buynode@6
	mov	QWORD PTR [rax], rsi
	mov	QWORD PTR [rax+8], rdi
	mov	QWORD PTR [rax+16], rbx
	mov	rax, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r11+24], rcx
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [r11+32], rax
	mov	BYTE PTR [r11+40], 0
	mov	BYTE PTR [r11+41], 0
$LN4@Buynode@6:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1414 : 		_RERAISE;
; 1415 : 		_CATCH_END
; 1416 : 		return (_Wherenode);

	mov	rax, r11

; 1417 : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN28@Buynode@6:
?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Wherenode$ = 32
$T148997 = 40
this$ = 64
_Larg$ = 72
_Parg$ = 80
_Rarg$ = 88
_Val$ = 96
_Carg$ = 104
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode'::`1'::catch$0

; 1412 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z$0:

; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);

	mov	rcx, QWORD PTR _Wherenode$[rbp]
	call	??3@YAXPEAX@Z				; operator delete

; 1414 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0length_error@std@@QEAA@AEBV01@@Z DD imagerel $LN8
	DD	imagerel $LN8+86
	DD	imagerel $unwind$??0length_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0length_error@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0length_error@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0length_error@std@@QEAA@AEBV01@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0???0length_error@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0length_error@std@@QEAA@AEBV01@@Z DD imagerel ??0length_error@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0length_error@std@@QEAA@AEBV01@@Z+37
	DD	00H
	DD	imagerel ??0length_error@std@@QEAA@AEBV01@@Z+62
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0length_error@std@@QEAA@AEBV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0length_error@std@@QEAA@AEBV01@@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0length_error@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0length_error@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0length_error@std@@QEAA@AEBV01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0length_error@std@@QEAA@AEBV01@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0length_error@std@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0length_error@std@@QEAA@AEBV01@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0length_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T149035 = 32
this$ = 64
__that$ = 72
??0length_error@std@@QEAA@AEBV01@@Z PROC		; std::length_error::length_error, COMDAT
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T149035[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	rbx, rdx
	mov	rdi, rcx
	call	QWORD PTR __imp_??0exception@std@@QEAA@AEBV01@@Z
	npad	1
	lea	rax, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	lea	rdx, QWORD PTR [rbx+24]
	lea	rcx, QWORD PTR [rdi+24]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	npad	1
	lea	rax, OFFSET FLAT:??_7length_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0length_error@std@@QEAA@AEBV01@@Z ENDP		; std::length_error::length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T149035 = 32
this$ = 64
__that$ = 72
?dtor$1@?0???0length_error@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::length_error::length_error'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1exception@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0length_error@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::length_error::length_error'::`1'::dtor$1
text$x	ENDS
EXTRN	memcpy:PROC
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\allocator.cpp
pdata	SEGMENT
$pdata$?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+208
	DD	imagerel $unwind$?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\lightweightstack.h
xdata	ENDS
;	COMDAT ?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ PROC	; LightweightStack<StackEntry>::Enlarge, COMDAT

; 24   : 	__declspec(noinline) void Enlarge() {

$LN9:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 25   : 		ptrdiff_t capacity = (arrayEnd - array);

	mov	r9, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rcx+16]
	mov	rbp, rcx

; 26   : 		ptrdiff_t newCapacity = 2 * capacity;
; 27   : 		ptrdiff_t topIndex = topPointer - array;

	mov	rcx, QWORD PTR [rcx+8]
	sub	rdx, r9
	mov	r11, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rcx, r9
	mov	rax, r11
	imul	rdx
	mov	rax, r11
	mov	r10, rdx
	imul	rcx
	sar	r10, 2
	mov	r8, r10
	shr	r8, 63					; 0000003fH
	mov	rsi, rdx
	add	r10, r8
	sar	rsi, 2
	mov	rax, rsi
	lea	r8, QWORD PTR [r10+r10]
	shr	rax, 63					; 0000003fH
	add	rsi, rax

; 28   : 		T *newArray = (T *)stackAllocator.malloc(newCapacity * sizeof(T));

	lea	rax, QWORD PTR [r8+r8*2]
	lea	rdi, QWORD PTR [rax*8]
	mov	rcx, rdi
	lock xadd QWORD PTR ?stackAllocator@@3UfastAllocator@@A+8, rcx
	mov	rax, QWORD PTR ?stackAllocator@@3UfastAllocator@@A+16

; 29   : 		memcpy(newArray, array, capacity * sizeof(T));

	mov	rdx, QWORD PTR [rbp]
	xor	ebx, ebx
	sub	rax, rcx
	lea	r8, QWORD PTR [r10+r10*2]
	cmp	rax, rdi
	cmovg	rbx, rcx
	shl	r8, 3
	mov	rcx, rbx
	call	memcpy

; 30   : 		stackAllocator.free(array, capacity * sizeof(T));
; 31   : 		array = newArray;
; 32   : 		arrayEnd = newArray + newCapacity;

	lea	rax, QWORD PTR [rdi+rbx]
	mov	QWORD PTR [rbp], rbx
	mov	QWORD PTR [rbp+16], rax

; 33   : 		topPointer = newArray + topIndex;

	lea	rax, QWORD PTR [rsi+rsi*2]

; 34   : 	}

	mov	rsi, QWORD PTR [rsp+64]
	lea	rcx, QWORD PTR [rbx+rax*8]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rbp+8], rcx
	mov	rbp, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ ENDP	; LightweightStack<StackEntry>::Enlarge
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push@?$LightweightStack@UStackEntry@@@@QEAAXAEBUStackEntry@@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$?push@?$LightweightStack@UStackEntry@@@@QEAAXAEBUStackEntry@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push@?$LightweightStack@UStackEntry@@@@QEAAXAEBUStackEntry@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?push@?$LightweightStack@UStackEntry@@@@QEAAXAEBUStackEntry@@@Z
_TEXT	SEGMENT
this$ = 48
value$ = 56
?push@?$LightweightStack@UStackEntry@@@@QEAAXAEBUStackEntry@@@Z PROC ; LightweightStack<StackEntry>::push, COMDAT

; 68   : 	void push(const T& value) {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 69   : 		++topPointer;

	add	QWORD PTR [rcx+8], 24
	mov	rax, QWORD PTR [rcx+8]
	mov	rdi, rdx
	mov	rbx, rcx

; 70   : 		if (topPointer == arrayEnd)

	cmp	rax, QWORD PTR [rcx+16]
	jne	SHORT $LN1@push

; 71   : 			Enlarge();

	call	?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ ; LightweightStack<StackEntry>::Enlarge
$LN1@push:

; 72   : 		assert(topPointer < arrayEnd);
; 73   : 		*topPointer = value;

	mov	rcx, QWORD PTR [rbx+8]
	mov	rax, QWORD PTR [rdi]

; 74   : 	}

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdi+16]
	mov	QWORD PTR [rcx+16], rax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push@?$LightweightStack@UStackEntry@@@@QEAAXAEBUStackEntry@@@Z ENDP ; LightweightStack<StackEntry>::push
_TEXT	ENDS
PUBLIC	?MovedRootChild@CProfiler@@QEAAXPEAUFunctionInfo@@@Z ; CProfiler::MovedRootChild
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
pdata	SEGMENT
$pdata$?MovedRootChild@CProfiler@@QEAAXPEAUFunctionInfo@@@Z DD imagerel $LN17
	DD	imagerel $LN17+115
	DD	imagerel $unwind$?MovedRootChild@CProfiler@@QEAAXPEAUFunctionInfo@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MovedRootChild@CProfiler@@QEAAXPEAUFunctionInfo@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?MovedRootChild@CProfiler@@QEAAXPEAUFunctionInfo@@@Z
_TEXT	SEGMENT
this$ = 48
newRootChild$ = 56
?MovedRootChild@CProfiler@@QEAAXPEAUFunctionInfo@@@Z PROC ; CProfiler::MovedRootChild, COMDAT

; 228  : {

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H

; 229  : 	rootElementCriticalSection.Enter();

	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+80
	mov	rbx, rdx
	call	QWORD PTR __imp_EnterCriticalSection

; 230  : 	sharedMemoryHeader->RootFuncInfo->AddOrUpdateChild(newRootChild);

	mov	r11, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	r9d, DWORD PTR [rbx]
	mov	r10, QWORD PTR [r11+40]
	mov	r8d, r9d
	mov	r11d, DWORD PTR [r10+20]
	and	r8d, r11d
	movsxd	rax, r8d
	mov	rcx, QWORD PTR [r10+rax*8+24]
	test	rcx, rcx
	je	SHORT $LN16@MovedRootC
	npad	5
$LL8@MovedRootC:
	cmp	DWORD PTR [rcx], r9d
	je	SHORT $LN16@MovedRootC
	inc	r8d
	and	r8d, r11d
	movsxd	rax, r8d
	mov	rcx, QWORD PTR [r10+rax*8+24]
	test	rcx, rcx
	jne	SHORT $LL8@MovedRootC
$LN16@MovedRootC:
	movsxd	rax, r8d

; 231  : 	rootElementCriticalSection.Leave();

	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+80
	mov	QWORD PTR [r10+rax*8+24], rbx

; 232  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_LeaveCriticalSection
?MovedRootChild@CProfiler@@QEAAXPEAUFunctionInfo@@@Z ENDP ; CProfiler::MovedRootChild
_TEXT	ENDS
EXTRN	__ImageBase:BYTE
;	COMDAT pdata
; File c:\program files\microsoft sdks\windows\v7.0\include\guiddef.h
pdata	SEGMENT
$pdata$?QueryInterface@CProfiler@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN17
	DD	imagerel $LN17+192
	DD	imagerel $unwind$?QueryInterface@CProfiler@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CProfiler@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 060f01H
	DD	03740fH
	DD	02640aH
	DD	013405H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?QueryInterface@CProfiler@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 8
riid$ = 16
ppv$ = 24
?QueryInterface@CProfiler@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CProfiler::QueryInterface, COMDAT

; 32   : {

$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi

; 33   :   *ppv = nullptr;

	xor	r9d, r9d

; 34   :   if(IsEqualIID(riid, IID_IUnknown) ||
; 35   : 	 IsEqualIID(riid, IID_ICorProfilerCallback) ||
; 36   : 	 IsEqualIID(riid, IID_ICorProfilerCallback2)) {

	lea	rsi, OFFSET FLAT:__ImageBase
	mov	rbx, r8
	mov	QWORD PTR [r8], r9
	mov	r11, QWORD PTR [rdx]
	mov	rdi, rcx
	cmp	r11, QWORD PTR IID_IUnknown[rsi]
	jne	SHORT $LN15@QueryInter
	mov	r11, QWORD PTR [rdx+8]
	cmp	r11, QWORD PTR IID_IUnknown[rsi+8]
	jne	SHORT $LN15@QueryInter
	mov	eax, r9d
	jmp	SHORT $LN16@QueryInter
$LN15@QueryInter:
	sbb	eax, eax
	sbb	eax, -1
$LN16@QueryInter:
	test	eax, eax
	je	SHORT $LN1@QueryInter
	mov	r8, QWORD PTR [rdx]
	cmp	r8, QWORD PTR IID_ICorProfilerCallback[rsi]
	jne	SHORT $LN13@QueryInter
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR IID_ICorProfilerCallback[rsi+8]
	jne	SHORT $LN13@QueryInter
	mov	eax, r9d
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	sbb	eax, eax
	sbb	eax, -1
$LN14@QueryInter:
	test	eax, eax
	je	SHORT $LN1@QueryInter
	mov	rcx, QWORD PTR [rdx]
	cmp	rcx, QWORD PTR IID_ICorProfilerCallback2[rsi]
	jne	SHORT $LN11@QueryInter
	mov	rcx, QWORD PTR [rdx+8]
	cmp	rcx, QWORD PTR IID_ICorProfilerCallback2[rsi+8]
	je	SHORT $LN12@QueryInter
$LN11@QueryInter:
	sbb	eax, eax
	sbb	eax, -1
	mov	r9d, eax
$LN12@QueryInter:
	test	r9d, r9d
	je	SHORT $LN1@QueryInter

; 37   : 
; 38   :     *ppv = this;  
; 39   : 
; 40   :     return S_OK;
; 41   :   }
; 42   :   return E_NOINTERFACE;

	mov	eax, -2147467262			; ffffffff80004002H

; 43   : }

	mov	rbx, QWORD PTR [rsp+8]
	mov	rsi, QWORD PTR [rsp+16]
	mov	rdi, QWORD PTR [rsp+24]
	ret	0
$LN1@QueryInter:
	mov	rsi, QWORD PTR [rsp+16]
	mov	QWORD PTR [rbx], rdi
	mov	rbx, QWORD PTR [rsp+8]
	mov	rdi, QWORD PTR [rsp+24]
	xor	eax, eax
	ret	0
?QueryInterface@CProfiler@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CProfiler::QueryInterface
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
pdata	SEGMENT
$pdata$??1length_error@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+45
	DD	imagerel $unwind$??1length_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1length_error@std@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1length_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1length_error@std@@UEAA@XZ PROC			; std::length_error::~length_error, COMDAT

; 109  : 		{	// destroy the object

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H

; 110  : 		}

	lea	rax, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	rbx, rcx
	add	rcx, 24
	mov	QWORD PTR [rcx-24], rax
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_??1exception@std@@UEAA@XZ
??1length_error@std@@UEAA@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN8
	DD	imagerel $LN8+85
	DD	imagerel $unwind$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD imagerel ?dtor$1@?0???0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0???0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel ??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	0ffffffffH
	DD	imagerel ??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z+37
	DD	00H
	DD	imagerel ??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z+61
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T149182 = 32
this$ = 64
_Message$ = 72
??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT

; 105  : 		{	// construct from message string

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T149182[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	rbx, rdx
	mov	rdi, rcx
	call	QWORD PTR __imp_??0exception@std@@QEAA@XZ
	npad	1
	lea	rax, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	lea	rcx, QWORD PTR [rdi+24]
	mov	rdx, rbx
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	npad	1
	lea	rax, OFFSET FLAT:??_7length_error@std@@6B@
	mov	QWORD PTR [rdi], rax

; 106  : 		}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T149182 = 32
this$ = 64
_Message$ = 72
?dtor$1@?0???0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::length_error::length_error'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1exception@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0length_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::length_error::length_error'::`1'::dtor$1
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
text$x	ENDS
;	COMDAT ?_Getmycont@_Iterator_base_aux@std@@QEBAPEBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getmycont@_Iterator_base_aux@std@@QEBAPEBV_Container_base_aux@2@XZ PROC ; std::_Iterator_base_aux::_Getmycont, COMDAT

; 458  : 		return _Myaux ? _Myaux->_Getcont() : 0;

	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	je	SHORT $LN3@Getmycont
	mov	rax, QWORD PTR [rax]

; 459  : 		}

	ret	0
$LN3@Getmycont:

; 458  : 		return _Myaux ? _Myaux->_Getcont() : 0;

	xor	eax, eax

; 459  : 		}

	ret	0
?_Getmycont@_Iterator_base_aux@std@@QEBAPEBV_Container_base_aux@2@XZ ENDP ; std::_Iterator_base_aux::_Getmycont
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+58
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	ebx, edx
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	call	QWORD PTR __imp_??1exception@std@@UEAA@XZ
	test	bl, 1
	je	SHORT $LN6@scalar
	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
$LN6@scalar:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN30
	DD	imagerel $LN30+55
	DD	imagerel $unwind$??0?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
xdata	ENDS
;	COMDAT ??0?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>, COMDAT

; 39   : 		{	// construct with specified comparator

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN8@Tmap_trait
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 40   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 39   : 		{	// construct with specified comparator

$LN8@Tmap_trait:
	mov	QWORD PTR [rbx], 0

; 40   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$??0?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN30
	DD	imagerel $LN30+55
	DD	imagerel $unwind$??0?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
xdata	ENDS
;	COMDAT ??0?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>, COMDAT

; 39   : 		{	// construct with specified comparator

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN8@Tmap_trait@2
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 40   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 39   : 		{	// construct with specified comparator

$LN8@Tmap_trait@2:
	mov	QWORD PTR [rbx], 0

; 40   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$??0?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD imagerel $LN30
	DD	imagerel $LN30+55
	DD	imagerel $unwind$??0?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
xdata	ENDS
;	COMDAT ??0?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>, COMDAT

; 39   : 		{	// construct with specified comparator

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN8@Tmap_trait@3
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 40   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 39   : 		{	// construct with specified comparator

$LN8@Tmap_trait@3:
	mov	QWORD PTR [rbx], 0

; 40   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@QEAA@U?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0>
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN38
	DD	imagerel $LN38+55
	DD	imagerel $unwind$??0?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >, COMDAT

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN38:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN13@Tree_nod
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 53   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN13@Tree_nod:
	mov	QWORD PTR [rbx], 0

; 53   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN38
	DD	imagerel $LN38+55
	DD	imagerel $unwind$??0?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >, COMDAT

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN38:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN13@Tree_nod@2
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 53   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN13@Tree_nod@2:
	mov	QWORD PTR [rbx], 0

; 53   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD imagerel $LN38
	DD	imagerel $LN38+55
	DD	imagerel $unwind$??0?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >, COMDAT

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN38:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN13@Tree_nod@3
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 53   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 52   : 		{	// construct traits from _Parg and allocator from _Al

$LN13@Tree_nod@3:
	mov	QWORD PTR [rbx], 0

; 53   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN54
	DD	imagerel $LN54+156
	DD	imagerel $unwind$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec, COMDAT

; 320  : 			{	// move to node with next smaller value

$LN54:
	push	rbx
	sub	rsp, 32					; 00000020H

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	cmp	QWORD PTR [rcx], 0
	mov	rbx, rcx
	jne	SHORT $LN12@Dec
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN12@Dec:

; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	rcx, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LN9@Dec

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rbx+8], rax

; 336  :    				if (_Isnil(_Ptr))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LN1@Dec
$LN53@Dec:

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp__invalid_parameter_noinfo
$LN9@Dec:

; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;
; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move
; 348  : #endif
; 349  : 			}
; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	rax, QWORD PTR [rcx]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN49@Dec

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	rcx, QWORD PTR [rax+16]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN30@Dec
	npad	4
$LL31@Dec:
	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL31@Dec
$LN30@Dec:
	mov	QWORD PTR [rbx+8], rax

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN49@Dec:

; 352  : 			else
; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN52@Dec
$LL4@Dec:
	mov	rax, QWORD PTR [rcx]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN52@Dec

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	QWORD PTR [rbx+8], rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL4@Dec
$LN52@Dec:

; 358  : 				if (_Isnil(_Ptr))

	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move
; 370  :  #endif
; 371  : 				else

	jne	SHORT $LN53@Dec

; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	QWORD PTR [rbx+8], rcx
$LN1@Dec:

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN54
	DD	imagerel $LN54+156
	DD	imagerel $unwind$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec, COMDAT

; 320  : 			{	// move to node with next smaller value

$LN54:
	push	rbx
	sub	rsp, 32					; 00000020H

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	cmp	QWORD PTR [rcx], 0
	mov	rbx, rcx
	jne	SHORT $LN12@Dec@2
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN12@Dec@2:

; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	rcx, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LN9@Dec@2

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rbx+8], rax

; 336  :    				if (_Isnil(_Ptr))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LN1@Dec@2
$LN53@Dec@2:

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp__invalid_parameter_noinfo
$LN9@Dec@2:

; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;
; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move
; 348  : #endif
; 349  : 			}
; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	rax, QWORD PTR [rcx]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN49@Dec@2

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	rcx, QWORD PTR [rax+16]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN30@Dec@2
	npad	4
$LL31@Dec@2:
	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL31@Dec@2
$LN30@Dec@2:
	mov	QWORD PTR [rbx+8], rax

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN49@Dec@2:

; 352  : 			else
; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN52@Dec@2
$LL4@Dec@2:
	mov	rax, QWORD PTR [rcx]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN52@Dec@2

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	QWORD PTR [rbx+8], rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL4@Dec@2
$LN52@Dec@2:

; 358  : 				if (_Isnil(_Ptr))

	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move
; 370  :  #endif
; 371  : 				else

	jne	SHORT $LN53@Dec@2

; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	QWORD PTR [rbx+8], rcx
$LN1@Dec@2:

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN54
	DD	imagerel $LN54+156
	DD	imagerel $unwind$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::_Dec, COMDAT

; 320  : 			{	// move to node with next smaller value

$LN54:
	push	rbx
	sub	rsp, 32					; 00000020H

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	cmp	QWORD PTR [rcx], 0
	mov	rbx, rcx
	jne	SHORT $LN12@Dec@3
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN12@Dec@3:

; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	rcx, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LN9@Dec@3

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rbx+8], rax

; 336  :    				if (_Isnil(_Ptr))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LN1@Dec@3
$LN53@Dec@3:

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp__invalid_parameter_noinfo
$LN9@Dec@3:

; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;
; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move
; 348  : #endif
; 349  : 			}
; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	rax, QWORD PTR [rcx]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN49@Dec@3

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	rcx, QWORD PTR [rax+16]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN30@Dec@3
	npad	4
$LL31@Dec@3:
	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL31@Dec@3
$LN30@Dec@3:
	mov	QWORD PTR [rbx+8], rax

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN49@Dec@3:

; 352  : 			else
; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN52@Dec@3
$LL4@Dec@3:
	mov	rax, QWORD PTR [rcx]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN52@Dec@3

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	QWORD PTR [rbx+8], rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL4@Dec@3
$LN52@Dec@3:

; 358  : 				if (_Isnil(_Ptr))

	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move
; 370  :  #endif
; 371  : 				else

	jne	SHORT $LN53@Dec@3

; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	QWORD PTR [rbx+8], rcx
$LN1@Dec@3:

; 373  : 				}
; 374  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::_Dec
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_ptr@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN46
	DD	imagerel $LN46+55
	DD	imagerel $unwind$??0?$_Tree_ptr@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_ptr@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_ptr@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >, COMDAT

; 78   : 		{	// construct base, and allocator from _Al

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN18@Tree_ptr
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 79   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 78   : 		{	// construct base, and allocator from _Al

$LN18@Tree_ptr:
	mov	QWORD PTR [rbx], 0

; 79   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_ptr@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_ptr@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN46
	DD	imagerel $LN46+55
	DD	imagerel $unwind$??0?$_Tree_ptr@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_ptr@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_ptr@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >, COMDAT

; 78   : 		{	// construct base, and allocator from _Al

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN18@Tree_ptr@2
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 79   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 78   : 		{	// construct base, and allocator from _Al

$LN18@Tree_ptr@2:
	mov	QWORD PTR [rbx], 0

; 79   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_ptr@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_ptr@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD imagerel $LN46
	DD	imagerel $LN46+55
	DD	imagerel $unwind$??0?$_Tree_ptr@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_ptr@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_ptr@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >, COMDAT

; 78   : 		{	// construct base, and allocator from _Al

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN18@Tree_ptr@3
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 79   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 78   : 		{	// construct base, and allocator from _Al

$LN18@Tree_ptr@3:
	mov	QWORD PTR [rbx], 0

; 79   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_ptr@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator--, COMDAT

; 286  : 			{	// predecrement

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 287  : 			_Dec();

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec

; 288  : 			return (*this);

	mov	rax, rbx

; 289  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator--
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CBKPEAVThreadInfo@@@2@XZ DD imagerel $LN22
	DD	imagerel $LN22+64
	DD	imagerel $unwind$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CBKPEAVThreadInfo@@@2@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CBKPEAVThreadInfo@@@2@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CBKPEAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
this$ = 48
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CBKPEAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator*, COMDAT

; 249  : 			{	// return designated value

$LN22:
	push	rbx
	sub	rsp, 32					; 00000020H

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rax, rax
	jne	SHORT $LN21@operator@18
	call	QWORD PTR __imp__invalid_parameter_noinfo

; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN16@operator@18
$LN21@operator@18:
	mov	rax, QWORD PTR [rax]
$LN16@operator@18:
	mov	rax, QWORD PTR [rax+48]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN3@operator@18
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN3@operator@18:

; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	rax, QWORD PTR [rbx+8]
	add	rax, 24

; 265  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CBKPEAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::const_iterator, COMDAT

; 217  : 			{	// construct with null node pointer

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 218  : 			}

	mov	rax, rcx
	ret	0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator--, COMDAT

; 286  : 			{	// predecrement

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 287  : 			_Dec();

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec

; 288  : 			return (*this);

	mov	rax, rbx

; 289  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator--
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ DD imagerel $LN22
	DD	imagerel $LN22+64
	DD	imagerel $unwind$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
this$ = 48
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator*, COMDAT

; 249  : 			{	// return designated value

$LN22:
	push	rbx
	sub	rsp, 32					; 00000020H

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rax, rax
	jne	SHORT $LN21@operator@19
	call	QWORD PTR __imp__invalid_parameter_noinfo

; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN16@operator@19
$LN21@operator@19:
	mov	rax, QWORD PTR [rax]
$LN16@operator@19:
	mov	rax, QWORD PTR [rax+48]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN3@operator@19
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN3@operator@19:

; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	rax, QWORD PTR [rbx+8]
	add	rax, 24

; 265  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::operator*
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::operator--, COMDAT

; 286  : 			{	// predecrement

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 287  : 			_Dec();

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::_Dec

; 288  : 			return (*this);

	mov	rax, rbx

; 289  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::operator--
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KH@2@XZ DD imagerel $LN22
	DD	imagerel $LN22+64
	DD	imagerel $unwind$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KH@2@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KH@2@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KH@2@XZ
_TEXT	SEGMENT
this$ = 48
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::operator*, COMDAT

; 249  : 			{	// return designated value

$LN22:
	push	rbx
	sub	rsp, 32					; 00000020H

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rax, rax
	jne	SHORT $LN21@operator@20
	call	QWORD PTR __imp__invalid_parameter_noinfo

; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);

	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN16@operator@20
$LN21@operator@20:
	mov	rax, QWORD PTR [rax]
$LN16@operator@20:
	mov	rax, QWORD PTR [rax+48]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN3@operator@20
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN3@operator@20:

; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	rax, QWORD PTR [rbx+8]
	add	rax, 24

; 265  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEBU?$pair@$$CB_KH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::operator*
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN54
	DD	imagerel $LN54+55
	DD	imagerel $unwind$??0?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >, COMDAT

; 97   : 		{	// construct base, and allocator from _Al

$LN54:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN23@Tree_val
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 98   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 97   : 		{	// construct base, and allocator from _Al

$LN23@Tree_val:
	mov	QWORD PTR [rbx], 0

; 98   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@K@1@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBK@Z
_TEXT	SEGMENT
this$ = 8
_Keyval$ = 16
?_Lbound@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Lbound, COMDAT

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	r8, QWORD PTR [rcx+48]
	mov	rax, QWORD PTR [r8+8]

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN26@Lbound
	mov	ecx, DWORD PTR [rdx]
$LL4@Lbound:

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	cmp	DWORD PTR [rax+24], ecx
	jae	SHORT $LN2@Lbound

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rax, QWORD PTR [rax+16]

; 1270 : 			else

	jmp	SHORT $LN1@Lbound
$LN2@Lbound:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	r8, rax

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rax, QWORD PTR [rax]
$LN1@Lbound:

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL4@Lbound
$LN26@Lbound:

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate

	mov	rax, r8

; 1277 : 		}

	ret	0
?_Lbound@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Lbound
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN17
	DD	imagerel $LN17+59
	DD	imagerel $unwind$?_Init@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Init@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Init, COMDAT

; 1177 : 		{	// create head/nil node and make tree empty

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1178 : 		_Myhead = _Buynode();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	BYTE PTR [rax+41], 1

; 1180 : 		_Root() = _Myhead;

	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax

; 1182 : 		_Mysize = 0;

	mov	QWORD PTR [rbx+56], 0

; 1183 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Init
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
pdata	SEGMENT
$pdata$?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z DD imagerel $LN100
	DD	imagerel $LN100+209
	DD	imagerel $unwind$?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z
_TEXT	SEGMENT
_First$ = 0
_Last$ = 16
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Eqrange, COMDAT

; 1132 : 		{	// find leftmost node not less than _Keyval

$LN100:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1133 : 		_Nodeptr _Pnode = _Root();

	mov	r11, QWORD PTR [rcx+48]
	mov	rdi, rdx
	mov	rbx, rcx
	mov	rax, QWORD PTR [r11+8]

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails

	mov	r9, r11

; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN8@Eqrange
	mov	r10d, DWORD PTR [r8]
$LL9@Eqrange:

; 1138 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	mov	edx, DWORD PTR [rax+24]
	cmp	edx, r10d
	jae	SHORT $LN7@Eqrange

; 1139 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rax, QWORD PTR [rax+16]

; 1140 : 			else

	jmp	SHORT $LN6@Eqrange
$LN7@Eqrange:

; 1141 : 				{	// _Pnode not less than _Keyval, remember it
; 1142 : 				if (_Isnil(_Hinode)
; 1143 : 						&& _DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	BYTE PTR [r9+41], 0
	je	SHORT $LN5@Eqrange
	cmp	r10d, edx
	cmovb	r9, rax
$LN5@Eqrange:

; 1144 : 					_Hinode = _Pnode;	// _Pnode greater, remember it
; 1145 : 				_Lonode = _Pnode;

	mov	r11, rax

; 1146 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rax, QWORD PTR [rax]
$LN6@Eqrange:

; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL9@Eqrange
$LN8@Eqrange:

; 1147 : 				}
; 1148 : 
; 1149 : 		_Pnode = _Isnil(_Hinode) ? _Root()
; 1150 : 			: _Left(_Hinode);	// continue scan for upper bound

	cmp	BYTE PTR [r9+41], 0
	je	SHORT $LN12@Eqrange
	mov	rax, QWORD PTR [rcx+48]
	mov	rcx, QWORD PTR [rax+8]
	jmp	SHORT $LN13@Eqrange
$LN12@Eqrange:
	mov	rcx, QWORD PTR [r9]
$LN13@Eqrange:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN3@Eqrange
	mov	eax, DWORD PTR [r8]
	npad	7
$LL4@Eqrange:

; 1152 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	eax, DWORD PTR [rcx+24]
	jae	SHORT $LN2@Eqrange

; 1153 : 				{	// _Pnode greater than _Keyval, remember it
; 1154 : 				_Hinode = _Pnode;

	mov	r9, rcx

; 1155 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rcx, QWORD PTR [rcx]

; 1156 : 				}
; 1157 : 			else

	jmp	SHORT $LN1@Eqrange
$LN2@Eqrange:

; 1158 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rcx, QWORD PTR [rcx+16]
$LN1@Eqrange:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL4@Eqrange
$LN3@Eqrange:

; 1159 : 
; 1160 : 		iterator _First = _TREE_ITERATOR(_Lonode);

	mov	rax, QWORD PTR [rbx]

; 1161 : 		iterator _Last = _TREE_ITERATOR(_Hinode);
; 1162 : 		return (_Pairii(_First, _Last));
; 1163 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	lea	rcx, QWORD PTR _First$[rsp]
	mov	QWORD PTR _First$[rsp], rax
	mov	QWORD PTR _Last$[rsp], rax
	mov	QWORD PTR _First$[rsp+8], r11
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Last$[rsp+8], r9
	mov	QWORD PTR [rdi], rax
	mov	rax, QWORD PTR [rcx+8]
	lea	rcx, QWORD PTR _Last$[rsp]
	mov	QWORD PTR [rdi+8], rax
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdi+16], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdi+24], rax
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Eqrange
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN54
	DD	imagerel $LN54+55
	DD	imagerel $unwind$??0?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >, COMDAT

; 97   : 		{	// construct base, and allocator from _Al

$LN54:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN23@Tree_val@2
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 98   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 97   : 		{	// construct base, and allocator from _Al

$LN23@Tree_val@2:
	mov	QWORD PTR [rbx], 0

; 98   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEB_K@Z
_TEXT	SEGMENT
this$ = 8
_Keyval$ = 16
?_Lbound@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Lbound, COMDAT

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	r8, QWORD PTR [rcx+48]
	mov	rax, QWORD PTR [r8+8]

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN26@Lbound@2
	mov	rcx, QWORD PTR [rdx]
$LL4@Lbound@2:

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	cmp	QWORD PTR [rax+24], rcx
	jae	SHORT $LN2@Lbound@2

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rax, QWORD PTR [rax+16]

; 1270 : 			else

	jmp	SHORT $LN1@Lbound@2
$LN2@Lbound@2:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	r8, rax

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rax, QWORD PTR [rax]
$LN1@Lbound@2:

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL4@Lbound@2
$LN26@Lbound@2:

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate

	mov	rax, r8

; 1277 : 		}

	ret	0
?_Lbound@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Lbound
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN17
	DD	imagerel $LN17+59
	DD	imagerel $unwind$?_Init@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Init@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Init, COMDAT

; 1177 : 		{	// create head/nil node and make tree empty

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1178 : 		_Myhead = _Buynode();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	BYTE PTR [rax+41], 1

; 1180 : 		_Root() = _Myhead;

	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax

; 1182 : 		_Mysize = 0;

	mov	QWORD PTR [rbx+56], 0

; 1183 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Init
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
pdata	SEGMENT
$pdata$?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z DD imagerel $LN100
	DD	imagerel $LN100+210
	DD	imagerel $unwind$?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z
_TEXT	SEGMENT
_First$ = 0
_Last$ = 16
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Eqrange, COMDAT

; 1132 : 		{	// find leftmost node not less than _Keyval

$LN100:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1133 : 		_Nodeptr _Pnode = _Root();

	mov	r11, QWORD PTR [rcx+48]
	mov	rdi, rdx
	mov	rbx, rcx
	mov	rax, QWORD PTR [r11+8]

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails

	mov	r9, r11

; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN8@Eqrange@2
	mov	r10, QWORD PTR [r8]
$LL9@Eqrange@2:

; 1138 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	mov	rdx, QWORD PTR [rax+24]
	cmp	rdx, r10
	jae	SHORT $LN7@Eqrange@2

; 1139 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rax, QWORD PTR [rax+16]

; 1140 : 			else

	jmp	SHORT $LN6@Eqrange@2
$LN7@Eqrange@2:

; 1141 : 				{	// _Pnode not less than _Keyval, remember it
; 1142 : 				if (_Isnil(_Hinode)
; 1143 : 						&& _DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	BYTE PTR [r9+41], 0
	je	SHORT $LN5@Eqrange@2
	cmp	r10, rdx
	cmovb	r9, rax
$LN5@Eqrange@2:

; 1144 : 					_Hinode = _Pnode;	// _Pnode greater, remember it
; 1145 : 				_Lonode = _Pnode;

	mov	r11, rax

; 1146 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rax, QWORD PTR [rax]
$LN6@Eqrange@2:

; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL9@Eqrange@2
$LN8@Eqrange@2:

; 1147 : 				}
; 1148 : 
; 1149 : 		_Pnode = _Isnil(_Hinode) ? _Root()
; 1150 : 			: _Left(_Hinode);	// continue scan for upper bound

	cmp	BYTE PTR [r9+41], 0
	je	SHORT $LN12@Eqrange@2
	mov	rax, QWORD PTR [rcx+48]
	mov	rcx, QWORD PTR [rax+8]
	jmp	SHORT $LN13@Eqrange@2
$LN12@Eqrange@2:
	mov	rcx, QWORD PTR [r9]
$LN13@Eqrange@2:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN3@Eqrange@2
	mov	rax, QWORD PTR [r8]
	npad	6
$LL4@Eqrange@2:

; 1152 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	rax, QWORD PTR [rcx+24]
	jae	SHORT $LN2@Eqrange@2

; 1153 : 				{	// _Pnode greater than _Keyval, remember it
; 1154 : 				_Hinode = _Pnode;

	mov	r9, rcx

; 1155 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rcx, QWORD PTR [rcx]

; 1156 : 				}
; 1157 : 			else

	jmp	SHORT $LN1@Eqrange@2
$LN2@Eqrange@2:

; 1158 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rcx, QWORD PTR [rcx+16]
$LN1@Eqrange@2:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL4@Eqrange@2
$LN3@Eqrange@2:

; 1159 : 
; 1160 : 		iterator _First = _TREE_ITERATOR(_Lonode);

	mov	rax, QWORD PTR [rbx]

; 1161 : 		iterator _Last = _TREE_ITERATOR(_Hinode);
; 1162 : 		return (_Pairii(_First, _Last));
; 1163 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	lea	rcx, QWORD PTR _First$[rsp]
	mov	QWORD PTR _First$[rsp], rax
	mov	QWORD PTR _Last$[rsp], rax
	mov	QWORD PTR _First$[rsp+8], r11
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Last$[rsp+8], r9
	mov	QWORD PTR [rdi], rax
	mov	rax, QWORD PTR [rcx+8]
	lea	rcx, QWORD PTR _Last$[rsp]
	mov	QWORD PTR [rdi+8], rax
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdi+16], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdi+24], rax
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Eqrange
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
pdata	SEGMENT
$pdata$??0?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD imagerel $LN54
	DD	imagerel $LN54+55
	DD	imagerel $unwind$??0?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$ = 64
??0?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_val<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >, COMDAT

; 97   : 		{	// construct base, and allocator from _Al

$LN54:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN23@Tree_val@3
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rbx], rax

; 98   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0

; 97   : 		{	// construct base, and allocator from _Al

$LN23@Tree_val@3:
	mov	QWORD PTR [rbx], 0

; 98   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA@AEBU?$less@_K@1@V?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree_val<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEB_K@Z
_TEXT	SEGMENT
this$ = 8
_Keyval$ = 16
?_Lbound@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Lbound, COMDAT

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	r8, QWORD PTR [rcx+48]
	mov	rax, QWORD PTR [r8+8]

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN26@Lbound@3
	mov	rcx, QWORD PTR [rdx]
$LL4@Lbound@3:

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	cmp	QWORD PTR [rax+24], rcx
	jae	SHORT $LN2@Lbound@3

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rax, QWORD PTR [rax+16]

; 1270 : 			else

	jmp	SHORT $LN1@Lbound@3
$LN2@Lbound@3:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	r8, rax

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rax, QWORD PTR [rax]
$LN1@Lbound@3:

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL4@Lbound@3
$LN26@Lbound@3:

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate

	mov	rax, r8

; 1277 : 		}

	ret	0
?_Lbound@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEBAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Lbound
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN17
	DD	imagerel $LN17+59
	DD	imagerel $unwind$?_Init@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Init@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Init, COMDAT

; 1177 : 		{	// create head/nil node and make tree empty

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1178 : 		_Myhead = _Buynode();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	BYTE PTR [rax+41], 1

; 1180 : 		_Root() = _Myhead;

	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax

; 1182 : 		_Mysize = 0;

	mov	QWORD PTR [rbx+56], 0

; 1183 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Init
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
pdata	SEGMENT
$pdata$?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z DD imagerel $LN100
	DD	imagerel $LN100+210
	DD	imagerel $unwind$?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z
_TEXT	SEGMENT
_First$ = 0
_Last$ = 16
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Eqrange, COMDAT

; 1132 : 		{	// find leftmost node not less than _Keyval

$LN100:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1133 : 		_Nodeptr _Pnode = _Root();

	mov	r11, QWORD PTR [rcx+48]
	mov	rdi, rdx
	mov	rbx, rcx
	mov	rax, QWORD PTR [r11+8]

; 1134 : 		_Nodeptr _Lonode = _Myhead;	// end() if search fails
; 1135 : 		_Nodeptr _Hinode = _Myhead;	// end() if search fails

	mov	r9, r11

; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN8@Eqrange@3
	mov	r10, QWORD PTR [r8]
$LL9@Eqrange@3:

; 1138 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	mov	rdx, QWORD PTR [rax+24]
	cmp	rdx, r10
	jae	SHORT $LN7@Eqrange@3

; 1139 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rax, QWORD PTR [rax+16]

; 1140 : 			else

	jmp	SHORT $LN6@Eqrange@3
$LN7@Eqrange@3:

; 1141 : 				{	// _Pnode not less than _Keyval, remember it
; 1142 : 				if (_Isnil(_Hinode)
; 1143 : 						&& _DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	BYTE PTR [r9+41], 0
	je	SHORT $LN5@Eqrange@3
	cmp	r10, rdx
	cmovb	r9, rax
$LN5@Eqrange@3:

; 1144 : 					_Hinode = _Pnode;	// _Pnode greater, remember it
; 1145 : 				_Lonode = _Pnode;

	mov	r11, rax

; 1146 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rax, QWORD PTR [rax]
$LN6@Eqrange@3:

; 1136 : 
; 1137 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL9@Eqrange@3
$LN8@Eqrange@3:

; 1147 : 				}
; 1148 : 
; 1149 : 		_Pnode = _Isnil(_Hinode) ? _Root()
; 1150 : 			: _Left(_Hinode);	// continue scan for upper bound

	cmp	BYTE PTR [r9+41], 0
	je	SHORT $LN12@Eqrange@3
	mov	rax, QWORD PTR [rcx+48]
	mov	rcx, QWORD PTR [rax+8]
	jmp	SHORT $LN13@Eqrange@3
$LN12@Eqrange@3:
	mov	rcx, QWORD PTR [r9]
$LN13@Eqrange@3:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN3@Eqrange@3
	mov	rax, QWORD PTR [r8]
	npad	6
$LL4@Eqrange@3:

; 1152 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	rax, QWORD PTR [rcx+24]
	jae	SHORT $LN2@Eqrange@3

; 1153 : 				{	// _Pnode greater than _Keyval, remember it
; 1154 : 				_Hinode = _Pnode;

	mov	r9, rcx

; 1155 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	rcx, QWORD PTR [rcx]

; 1156 : 				}
; 1157 : 			else

	jmp	SHORT $LN1@Eqrange@3
$LN2@Eqrange@3:

; 1158 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	rcx, QWORD PTR [rcx+16]
$LN1@Eqrange@3:

; 1151 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL4@Eqrange@3
$LN3@Eqrange@3:

; 1159 : 
; 1160 : 		iterator _First = _TREE_ITERATOR(_Lonode);

	mov	rax, QWORD PTR [rbx]

; 1161 : 		iterator _Last = _TREE_ITERATOR(_Hinode);
; 1162 : 		return (_Pairii(_First, _Last));
; 1163 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	lea	rcx, QWORD PTR _First$[rsp]
	mov	QWORD PTR _First$[rsp], rax
	mov	QWORD PTR _Last$[rsp], rax
	mov	QWORD PTR _First$[rsp+8], r11
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Last$[rsp+8], r9
	mov	QWORD PTR [rdi], rax
	mov	rax, QWORD PTR [rcx+8]
	lea	rcx, QWORD PTR _Last$[rsp]
	mov	QWORD PTR [rdi+8], rax
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdi+16], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdi+24], rax
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Eqrange
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Fiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$??Fiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Fiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Fiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator--, COMDAT

; 487  : 			{	// predecrement

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 488  : 			--(*(const_iterator *)this);

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec

; 489  : 			return (*this);

	mov	rax, rbx

; 490  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator--
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Diterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@XZ DD imagerel $LN24
	DD	imagerel $LN24+64
	DD	imagerel $unwind$??Diterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Diterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
this$ = 48
??Diterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator*, COMDAT

; 464  : 			{	// return designated value

$LN24:
	push	rbx
	sub	rsp, 32					; 00000020H

; 465  : 			return ((reference)**(const_iterator *)this);

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rax, rax
	jne	SHORT $LN23@operator@21
	call	QWORD PTR __imp__invalid_parameter_noinfo
	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN18@operator@21
$LN23@operator@21:
	mov	rax, QWORD PTR [rax]
$LN18@operator@21:
	mov	rax, QWORD PTR [rax+48]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN5@operator@21
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN5@operator@21:
	mov	rax, QWORD PTR [rbx+8]
	add	rax, 24

; 466  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CBKPEAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator*
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Fiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$??Fiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Fiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Fiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator--, COMDAT

; 487  : 			{	// predecrement

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 488  : 			--(*(const_iterator *)this);

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Dec

; 489  : 			return (*this);

	mov	rax, rbx

; 490  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator--
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Diterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ DD imagerel $LN24
	DD	imagerel $LN24+64
	DD	imagerel $unwind$??Diterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Diterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
this$ = 48
??Diterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator*, COMDAT

; 464  : 			{	// return designated value

$LN24:
	push	rbx
	sub	rsp, 32					; 00000020H

; 465  : 			return ((reference)**(const_iterator *)this);

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rax, rax
	jne	SHORT $LN23@operator@22
	call	QWORD PTR __imp__invalid_parameter_noinfo
	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN18@operator@22
$LN23@operator@22:
	mov	rax, QWORD PTR [rax]
$LN18@operator@22:
	mov	rax, QWORD PTR [rax+48]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN5@operator@22
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN5@operator@22:
	mov	rax, QWORD PTR [rbx+8]
	add	rax, 24

; 466  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator*
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Fiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$??Fiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Fiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Fiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator--, COMDAT

; 487  : 			{	// predecrement

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 488  : 			--(*(const_iterator *)this);

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::_Dec

; 489  : 			return (*this);

	mov	rax, rbx

; 490  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator--
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Diterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KH@2@XZ DD imagerel $LN24
	DD	imagerel $LN24+64
	DD	imagerel $unwind$??Diterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KH@2@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Diterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KH@2@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KH@2@XZ
_TEXT	SEGMENT
this$ = 48
??Diterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator*, COMDAT

; 464  : 			{	// return designated value

$LN24:
	push	rbx
	sub	rsp, 32					; 00000020H

; 465  : 			return ((reference)**(const_iterator *)this);

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rax, rax
	jne	SHORT $LN23@operator@23
	call	QWORD PTR __imp__invalid_parameter_noinfo
	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN18@operator@23
$LN23@operator@23:
	mov	rax, QWORD PTR [rax]
$LN18@operator@23:
	mov	rax, QWORD PTR [rax+48]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN5@operator@23
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN5@operator@23:
	mov	rax, QWORD PTR [rbx+8]
	add	rax, 24

; 466  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAAEAU?$pair@$$CB_KH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator*
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equal_range@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$?equal_range@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equal_range@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?equal_range@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::equal_range, COMDAT

; 1023 : 		{	// find range equivalent to _Keyval in mutable tree

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 1024 : 		return (_Eqrange(_Keyval));

	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Eqrange
	mov	rax, rbx

; 1025 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?equal_range@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::equal_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Keyval$ = 24
?lower_bound@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::lower_bound, COMDAT

; 1004 : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

	mov	r9, QWORD PTR [rcx+48]
	mov	rax, QWORD PTR [r9+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN5@lower_boun
	mov	r8d, DWORD PTR [r8]
$LL6@lower_boun:
	cmp	DWORD PTR [rax+24], r8d
	jae	SHORT $LN4@lower_boun
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN3@lower_boun
$LN4@lower_boun:
	mov	r9, rax
	mov	rax, QWORD PTR [rax]
$LN3@lower_boun:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL6@lower_boun
$LN5@lower_boun:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx+8], r9
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 1005 : 		}

	ret	0
?lower_bound@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::lower_bound
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN75
	DD	imagerel $LN75+103
	DD	imagerel $unwind$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD imagerel ??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z+47
	DD	00H
	DD	imagerel ??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
$T162217 = 32
this$ = 64
_Parg$ = 72
_Al$ = 80
??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >, COMDAT

; 509  : 		{	// construct empty tree

$LN75:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T162217[rsp], -2
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN28@Tree
	mov	QWORD PTR [rax], rbx
	jmp	SHORT $LN29@Tree
$LN28@Tree:
	xor	eax, eax
$LN29@Tree:
	mov	QWORD PTR [rbx], rax

; 510  : 		_Init();

	mov	rcx, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax
	mov	BYTE PTR [rax+41], 1
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax
	mov	QWORD PTR [rbx+56], 0

; 511  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T162217 = 32
this$ = 64
_Parg$ = 72
_Al$ = 80
?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@K@1@AEBV?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equal_range@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$?equal_range@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equal_range@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?equal_range@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::equal_range, COMDAT

; 1023 : 		{	// find range equivalent to _Keyval in mutable tree

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 1024 : 		return (_Eqrange(_Keyval));

	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Eqrange
	mov	rax, rbx

; 1025 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?equal_range@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::equal_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Keyval$ = 24
?lower_bound@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::lower_bound, COMDAT

; 1004 : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

	mov	r9, QWORD PTR [rcx+48]
	mov	rax, QWORD PTR [r9+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN5@lower_boun@2
	mov	r8, QWORD PTR [r8]
$LL6@lower_boun@2:
	cmp	QWORD PTR [rax+24], r8
	jae	SHORT $LN4@lower_boun@2
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN3@lower_boun@2
$LN4@lower_boun@2:
	mov	r9, rax
	mov	rax, QWORD PTR [rax]
$LN3@lower_boun@2:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL6@lower_boun@2
$LN5@lower_boun@2:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx+8], r9
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 1005 : 		}

	ret	0
?lower_bound@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::lower_bound
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD imagerel $LN75
	DD	imagerel $LN75+103
	DD	imagerel $unwind$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD imagerel ??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z+47
	DD	00H
	DD	imagerel ??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z
_TEXT	SEGMENT
$T162705 = 32
this$ = 64
_Parg$ = 72
_Al$ = 80
??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >, COMDAT

; 509  : 		{	// construct empty tree

$LN75:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T162705[rsp], -2
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN28@Tree@2
	mov	QWORD PTR [rax], rbx
	jmp	SHORT $LN29@Tree@2
$LN28@Tree@2:
	xor	eax, eax
$LN29@Tree@2:
	mov	QWORD PTR [rbx], rax

; 510  : 		_Init();

	mov	rcx, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax
	mov	BYTE PTR [rax+41], 1
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax
	mov	QWORD PTR [rbx+56], 0

; 511  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T162705 = 32
this$ = 64
_Parg$ = 72
_Al$ = 80
?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equal_range@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$?equal_range@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equal_range@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?equal_range@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::equal_range, COMDAT

; 1023 : 		{	// find range equivalent to _Keyval in mutable tree

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 1024 : 		return (_Eqrange(_Keyval));

	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Eqrange
	mov	rax, rbx

; 1025 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?equal_range@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::equal_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Keyval$ = 24
?lower_bound@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::lower_bound, COMDAT

; 1004 : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

	mov	r9, QWORD PTR [rcx+48]
	mov	rax, QWORD PTR [r9+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN5@lower_boun@3
	mov	r8, QWORD PTR [r8]
$LL6@lower_boun@3:
	cmp	QWORD PTR [rax+24], r8
	jae	SHORT $LN4@lower_boun@3
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN3@lower_boun@3
$LN4@lower_boun@3:
	mov	r9, rax
	mov	rax, QWORD PTR [rax]
$LN3@lower_boun@3:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL6@lower_boun@3
$LN5@lower_boun@3:
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx+8], r9
	mov	QWORD PTR [rdx], rax
	mov	rax, rdx

; 1005 : 		}

	ret	0
?lower_bound@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::lower_bound
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD imagerel $LN75
	DD	imagerel $LN75+103
	DD	imagerel $unwind$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD imagerel ??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z+47
	DD	00H
	DD	imagerel ??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z
_TEXT	SEGMENT
$T163193 = 32
this$ = 64
_Parg$ = 72
_Al$ = 80
??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >, COMDAT

; 509  : 		{	// construct empty tree

$LN75:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T163193[rsp], -2
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN28@Tree@3
	mov	QWORD PTR [rax], rbx
	jmp	SHORT $LN29@Tree@3
$LN28@Tree@3:
	xor	eax, eax
$LN29@Tree@3:
	mov	QWORD PTR [rbx], rax

; 510  : 		_Init();

	mov	rcx, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax
	mov	BYTE PTR [rax+41], 1
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax
	mov	QWORD PTR [rbx+56], 0

; 511  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T163193 = 32
this$ = 64
_Parg$ = 72
_Al$ = 80
?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@_K@1@AEBV?$allocator@U?$pair@$$CB_KH@std@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Citerator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ DD imagerel $LN26
	DD	imagerel $LN26+64
	DD	imagerel $unwind$??Citerator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Citerator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ
_TEXT	SEGMENT
this$ = 48
??Citerator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator->, COMDAT

; 469  : 			{	// return pointer to class object

$LN26:
	push	rbx
	sub	rsp, 32					; 00000020H

; 470  : 			return (&**this);

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rax, rax
	jne	SHORT $LN25@operator@24
	call	QWORD PTR __imp__invalid_parameter_noinfo
	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN20@operator@24
$LN25@operator@24:
	mov	rax, QWORD PTR [rax]
$LN20@operator@24:
	mov	rax, QWORD PTR [rax+48]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN7@operator@24
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN7@operator@24:
	mov	rax, QWORD PTR [rbx+8]
	add	rax, 24

; 471  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Citerator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KPEAVThreadInfo@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator->
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Citerator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KH@2@XZ DD imagerel $LN26
	DD	imagerel $LN26+64
	DD	imagerel $unwind$??Citerator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KH@2@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Citerator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KH@2@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KH@2@XZ
_TEXT	SEGMENT
this$ = 48
??Citerator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator->, COMDAT

; 469  : 			{	// return pointer to class object

$LN26:
	push	rbx
	sub	rsp, 32					; 00000020H

; 470  : 			return (&**this);

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rax, rax
	jne	SHORT $LN25@operator@25
	call	QWORD PTR __imp__invalid_parameter_noinfo
	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN20@operator@25
$LN25@operator@25:
	mov	rax, QWORD PTR [rax]
$LN20@operator@25:
	mov	rax, QWORD PTR [rax+48]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN7@operator@25
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN7@operator@25:
	mov	rax, QWORD PTR [rbx+8]
	add	rax, 24

; 471  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Citerator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEBAPEAU?$pair@$$CB_KH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator->
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$?find@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z DD imagerel $LN105
	DD	imagerel $LN105+197
	DD	imagerel $unwind$?find@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z DD 0a1a01H
	DD	0d741aH
	DD	0c641aH
	DD	0b541aH
	DD	0a341aH
	DD	0c016721aH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z
_TEXT	SEGMENT
_Where$ = 32
$T163367 = 48
this$ = 80
__$ReturnUdt$ = 88
_Keyval$ = 96
?find@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::find, COMDAT

; 977  : 		{	// find an element in mutable sequence that matches _Keyval

$LN105:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 64					; 00000040H

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	rbx, QWORD PTR [rcx+48]
	mov	r12, r8
	mov	rbp, rdx
	mov	rax, QWORD PTR [rbx+8]
	mov	rsi, rcx
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN9@find
	mov	r9d, DWORD PTR [r8]
$LL10@find:
	cmp	DWORD PTR [rax+24], r9d
	jae	SHORT $LN8@find
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN7@find
$LN8@find:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN7@find:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL10@find
$LN9@find:
	mov	rax, QWORD PTR [rcx]

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	rdi, QWORD PTR [rcx+48]
	mov	QWORD PTR _Where$[rsp+8], rbx
	mov	QWORD PTR _Where$[rsp], rax
	test	rax, rax
	je	SHORT $LN68@find
	cmp	rax, rax
	je	SHORT $LN67@find
$LN68@find:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN67@find:
	cmp	rbx, rdi
	je	SHORT $LN3@find
	mov	eax, DWORD PTR [rbx+24]
	cmp	DWORD PTR [r12], eax
	jb	SHORT $LN3@find
	lea	rcx, QWORD PTR _Where$[rsp]
	jmp	SHORT $LN4@find
$LN3@find:
	mov	rax, QWORD PTR [rsi+48]
	lea	rcx, QWORD PTR $T163367[rsp]
	mov	QWORD PTR $T163367[rsp+8], rax
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR $T163367[rsp], rax
$LN4@find:
	mov	rax, QWORD PTR [rcx]

; 983  : 		}

	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	mov	QWORD PTR [rbp], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rbp+8], rax
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	r12
	ret	0
?find@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEBK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::find
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$?find@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z DD imagerel $LN105
	DD	imagerel $LN105+198
	DD	imagerel $unwind$?find@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z DD 0a1a01H
	DD	0d741aH
	DD	0c641aH
	DD	0b541aH
	DD	0a341aH
	DD	0c016721aH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z
_TEXT	SEGMENT
_Where$ = 32
$T163723 = 48
this$ = 80
__$ReturnUdt$ = 88
_Keyval$ = 96
?find@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::find, COMDAT

; 977  : 		{	// find an element in mutable sequence that matches _Keyval

$LN105:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 64					; 00000040H

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	rbx, QWORD PTR [rcx+48]
	mov	r12, r8
	mov	rbp, rdx
	mov	rax, QWORD PTR [rbx+8]
	mov	rsi, rcx
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN9@find@2
	mov	r9, QWORD PTR [r8]
$LL10@find@2:
	cmp	QWORD PTR [rax+24], r9
	jae	SHORT $LN8@find@2
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN7@find@2
$LN8@find@2:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN7@find@2:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL10@find@2
$LN9@find@2:
	mov	rax, QWORD PTR [rcx]

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	rdi, QWORD PTR [rcx+48]
	mov	QWORD PTR _Where$[rsp+8], rbx
	mov	QWORD PTR _Where$[rsp], rax
	test	rax, rax
	je	SHORT $LN68@find@2
	cmp	rax, rax
	je	SHORT $LN67@find@2
$LN68@find@2:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN67@find@2:
	cmp	rbx, rdi
	je	SHORT $LN3@find@2
	mov	rax, QWORD PTR [rbx+24]
	cmp	QWORD PTR [r12], rax
	jb	SHORT $LN3@find@2
	lea	rcx, QWORD PTR _Where$[rsp]
	jmp	SHORT $LN4@find@2
$LN3@find@2:
	mov	rax, QWORD PTR [rsi+48]
	lea	rcx, QWORD PTR $T163723[rsp]
	mov	QWORD PTR $T163723[rsp+8], rax
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR $T163723[rsp], rax
$LN4@find@2:
	mov	rax, QWORD PTR [rcx]

; 983  : 		}

	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	mov	QWORD PTR [rbp], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rbp+8], rax
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	r12
	ret	0
?find@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::find
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$?find@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z DD imagerel $LN105
	DD	imagerel $LN105+198
	DD	imagerel $unwind$?find@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z DD 0a1a01H
	DD	0d741aH
	DD	0c641aH
	DD	0b541aH
	DD	0a341aH
	DD	0c016721aH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z
_TEXT	SEGMENT
_Where$ = 32
$T164079 = 48
this$ = 80
__$ReturnUdt$ = 88
_Keyval$ = 96
?find@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::find, COMDAT

; 977  : 		{	// find an element in mutable sequence that matches _Keyval

$LN105:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 64					; 00000040H

; 978  : 		iterator _Where = lower_bound(_Keyval);

	mov	rbx, QWORD PTR [rcx+48]
	mov	r12, r8
	mov	rbp, rdx
	mov	rax, QWORD PTR [rbx+8]
	mov	rsi, rcx
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN9@find@3
	mov	r9, QWORD PTR [r8]
$LL10@find@3:
	cmp	QWORD PTR [rax+24], r9
	jae	SHORT $LN8@find@3
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN7@find@3
$LN8@find@3:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN7@find@3:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL10@find@3
$LN9@find@3:
	mov	rax, QWORD PTR [rcx]

; 979  : 		return (_Where == end()
; 980  : 			|| _DEBUG_LT_PRED(this->comp,
; 981  : 				_Keyval, _Key(_Where._Mynode()))
; 982  : 					? end() : _Where);

	mov	rdi, QWORD PTR [rcx+48]
	mov	QWORD PTR _Where$[rsp+8], rbx
	mov	QWORD PTR _Where$[rsp], rax
	test	rax, rax
	je	SHORT $LN68@find@3
	cmp	rax, rax
	je	SHORT $LN67@find@3
$LN68@find@3:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN67@find@3:
	cmp	rbx, rdi
	je	SHORT $LN3@find@3
	mov	rax, QWORD PTR [rbx+24]
	cmp	QWORD PTR [r12], rax
	jb	SHORT $LN3@find@3
	lea	rcx, QWORD PTR _Where$[rsp]
	jmp	SHORT $LN4@find@3
$LN3@find@3:
	mov	rax, QWORD PTR [rsi+48]
	lea	rcx, QWORD PTR $T164079[rsp]
	mov	QWORD PTR $T164079[rsp+8], rax
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR $T164079[rsp], rax
$LN4@find@3:
	mov	rax, QWORD PTR [rcx]

; 983  : 		}

	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	mov	QWORD PTR [rbp], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rbp+8], rax
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	r12
	ret	0
?find@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@AEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::find
_TEXT	ENDS
PUBLIC	?InitializeCommunication@CProfiler@@AEAAHXZ	; CProfiler::InitializeCommunication
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\eventwaithandle.cpp
pdata	SEGMENT
$pdata$?InitializeCommunication@CProfiler@@AEAAHXZ DD imagerel $LN35
	DD	imagerel $LN35+752
	DD	imagerel $unwind$?InitializeCommunication@CProfiler@@AEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??InitializeCommunication@CProfiler@@AEAAHXZ@4HA DD imagerel ?dtor$1@?0??InitializeCommunication@CProfiler@@AEAAHXZ@4HA
	DD	imagerel ?dtor$1@?0??InitializeCommunication@CProfiler@@AEAAHXZ@4HA+27
	DD	imagerel $unwind$?dtor$1@?0??InitializeCommunication@CProfiler@@AEAAHXZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InitializeCommunication@CProfiler@@AEAAHXZ DD imagerel ?InitializeCommunication@CProfiler@@AEAAHXZ
	DD	0ffffffffH
	DD	imagerel ?InitializeCommunication@CProfiler@@AEAAHXZ+236
	DD	00H
	DD	imagerel ?InitializeCommunication@CProfiler@@AEAAHXZ+275
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??InitializeCommunication@CProfiler@@AEAAHXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitializeCommunication@CProfiler@@AEAAHXZ DD 051b11H
	DD	022341bH
	DD	020010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?InitializeCommunication@CProfiler@@AEAAHXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?InitializeCommunication@CProfiler@@AEAAHXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?InitializeCommunication@CProfiler@@AEAAHXZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?InitializeCommunication@CProfiler@@AEAAHXZ
	DD	0f0H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?InitializeCommunication@CProfiler@@AEAAHXZ DD 0ffffffffH
	DD	imagerel ?dtor$1@?0??InitializeCommunication@CProfiler@@AEAAHXZ@4HA
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?InitializeCommunication@CProfiler@@AEAAHXZ
_TEXT	SEGMENT
accessEventName$ = 32
mutexName$ = 96
sharedMemName$ = 160
$T164488 = 240
this$ = 272
$T164437 = 280
?InitializeCommunication@CProfiler@@AEAAHXZ PROC	; CProfiler::InitializeCommunication, COMDAT

; 307  : {	

$LN35:
	mov	r11, rsp
	push	rdi
	sub	rsp, 256				; 00000100H
	mov	QWORD PTR $T164488[rsp], -2
	mov	QWORD PTR [r11+8], rbx
	mov	rdi, rcx

; 308  : 	DebugWriteLine(L"Looking for Shared Memory...");
; 309  : 	TCHAR sharedMemName[68];
; 310  : 	memset(sharedMemName, 0, sizeof(sharedMemName));

	xor	eax, eax
	mov	QWORD PTR [r11-104], rax
	mov	QWORD PTR [r11-96], rax
	mov	QWORD PTR [r11-88], rax
	mov	QWORD PTR [r11-80], rax
	mov	QWORD PTR [r11-72], rax
	mov	QWORD PTR [r11-64], rax
	mov	QWORD PTR [r11-56], rax
	mov	QWORD PTR [r11-48], rax
	mov	DWORD PTR [r11-40], eax

; 311  : 	if (GetEnvironmentVariable("SharedMemoryName", sharedMemName, 68) == 0) {

	lea	r8d, QWORD PTR [rax+68]
	lea	rdx, QWORD PTR [r11-104]
	lea	rcx, OFFSET FLAT:??_C@_0BB@EIHAAPLC@SharedMemoryName?$AA@
	call	QWORD PTR __imp_GetEnvironmentVariableA
	test	eax, eax
	jne	SHORT $LN10@Initialize

; 312  : 		DebugWriteLine(L"Getting environment variable failed");
; 313  : 		if (GetLastError() == ERROR_ENVVAR_NOT_FOUND)

	call	QWORD PTR __imp_GetLastError
	cmp	eax, 203				; 000000cbH
	jne	SHORT $LN9@Initialize

; 314  : 			MessageBox(nullptr, TEXT("Could not find environment variable 'SharedMemoryName', please restart the profiler!"), TEXT("Profiler Error"), MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0FF@CHALMHHG@Could?5not?5find?5environment?5varia@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA

; 315  : 		else

	jmp	SHORT $LN8@Initialize
$LN9@Initialize:

; 316  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN8@Initialize:

; 317  : 
; 318  : 		return 1;

	mov	eax, 1
	jmp	$LN11@Initialize
$LN10@Initialize:

; 319  : 	}
; 320  : 
; 321  : 	DebugWriteLine(L"Got Shared Memory...");
; 322  : 	this->sharedMemory = new CSharedMemory(sharedMemName);

	mov	ecx, 32					; 00000020H
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN13@Initialize
	lea	rdx, QWORD PTR sharedMemName$[rsp]
	mov	rcx, rax
	call	??0CSharedMemory@@QEAA@PEAD@Z		; CSharedMemory::CSharedMemory
	jmp	SHORT $LN14@Initialize
$LN13@Initialize:
	xor	eax, eax
$LN14@Initialize:
	mov	QWORD PTR [rdi+24], rax

; 323  : 	sharedMemoryHeader = (SharedMemoryHeader*)sharedMemory->GetStartPtr();

	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA, rax ; sharedMemoryHeader

; 324  : 	
; 325  : 	this->nativeToManagedBuffer = new CCircularBuffer((byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->NativeToManagedBufferOffset);

	mov	ecx, 40					; 00000028H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T164437[rsp], rax
	test	rax, rax
	je	SHORT $LN15@Initialize
	mov	rcx, QWORD PTR [rdi+24]
	mov	r8, QWORD PTR [rcx+16]
	mov	rcx, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	movsxd	rdx, DWORD PTR [rcx+12]
	add	rdx, r8
	mov	rcx, rax
	call	??0CCircularBuffer@@QEAA@PEAX@Z		; CCircularBuffer::CCircularBuffer
	jmp	SHORT $LN16@Initialize
$LN15@Initialize:
	xor	eax, eax
$LN16@Initialize:
	mov	QWORD PTR [rdi+32], rax

; 326  : 	
; 327  : 	sharedMemoryHeader->TargetPointer = this->sharedMemory->GetStartPtr();

	mov	rax, QWORD PTR [rdi+24]
	mov	rcx, QWORD PTR [rax+16]
	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	QWORD PTR [rax+32], rcx

; 328  : 	
; 329  : 	TCHAR mutexName[61];
; 330  : 	memset(mutexName, 0, sizeof(mutexName));

	xor	eax, eax
	mov	QWORD PTR mutexName$[rsp], rax
	mov	QWORD PTR mutexName$[rsp+8], rax
	mov	QWORD PTR mutexName$[rsp+16], rax
	mov	QWORD PTR mutexName$[rsp+24], rax
	mov	QWORD PTR mutexName$[rsp+32], rax
	mov	QWORD PTR mutexName$[rsp+40], rax
	mov	QWORD PTR mutexName$[rsp+48], rax
	mov	DWORD PTR mutexName$[rsp+56], eax
	mov	BYTE PTR mutexName$[rsp+60], al

; 331  : 	
; 332  : 	if (GetEnvironmentVariable("MutexName", mutexName, 61) == 0) {

	lea	r8d, QWORD PTR [rax+61]
	lea	rdx, QWORD PTR mutexName$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_09OHDMFPFI@MutexName?$AA@
	call	QWORD PTR __imp_GetEnvironmentVariableA
	test	eax, eax
	jne	SHORT $LN7@Initialize

; 333  : 		DebugWriteLine(L"Getting environment variable failed");
; 334  : 		if (GetLastError() == ERROR_ENVVAR_NOT_FOUND)

	call	QWORD PTR __imp_GetLastError
	cmp	eax, 203				; 000000cbH
	jne	SHORT $LN6@Initialize

; 335  : 			MessageBox(nullptr, TEXT("Could not find environment variable 'MutexName', please restart the profiler!"), TEXT("Profiler Error"), MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0EO@MELDENFF@Could?5not?5find?5environment?5varia@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA

; 336  : 		else

	jmp	SHORT $LN5@Initialize
$LN6@Initialize:

; 337  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN5@Initialize:

; 338  : 
; 339  : 		return 1;

	mov	eax, 1
	jmp	$LN11@Initialize
$LN7@Initialize:

; 340  : 	}
; 341  : 
; 342  : 	HANDLE mutex = OpenMutex(MUTEX_ALL_ACCESS, false, mutexName);

	lea	r8, QWORD PTR mutexName$[rsp]
	xor	edx, edx
	mov	ecx, 2031617				; 001f0001H
	call	QWORD PTR __imp_OpenMutexA
	mov	rbx, rax

; 343  : 
; 344  : 	if (mutex == nullptr) {

	test	rax, rax
	jne	SHORT $LN4@Initialize

; 345  : 		DebugWriteLine(L"Failed to access mutex: %d!", GetLastError());
; 346  : 
; 347  : 		return 1;

	lea	eax, QWORD PTR [rbx+1]
	jmp	$LN11@Initialize
$LN4@Initialize:

; 348  : 	}
; 349  : 	
; 350  : 	DebugWriteLine(L"Mutex opened successfully!");
; 351  : 
; 352  : 	allThreadLocalDatas = new LightweightList(mutex);

	mov	ecx, 16
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN17@Initialize
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR [rax+8], rbx
	jmp	SHORT $LN18@Initialize
$LN17@Initialize:
	xor	eax, eax
$LN18@Initialize:
	mov	QWORD PTR ?allThreadLocalDatas@@3PEAVLightweightList@@EA, rax ; allThreadLocalDatas

; 353  : 
; 354  : 	TCHAR accessEventName[62];
; 355  : 	memset(accessEventName, 0, sizeof(accessEventName));

	xor	eax, eax
	mov	QWORD PTR accessEventName$[rsp], rax
	mov	QWORD PTR accessEventName$[rsp+8], rax
	mov	QWORD PTR accessEventName$[rsp+16], rax
	mov	QWORD PTR accessEventName$[rsp+24], rax
	mov	QWORD PTR accessEventName$[rsp+32], rax
	mov	QWORD PTR accessEventName$[rsp+40], rax
	mov	QWORD PTR accessEventName$[rsp+48], rax
	mov	DWORD PTR accessEventName$[rsp+56], eax
	mov	WORD PTR accessEventName$[rsp+60], ax

; 356  : 
; 357  : 	if (GetEnvironmentVariable("AccessEventName", accessEventName, 62) == 0) {

	lea	r8d, QWORD PTR [rax+62]
	lea	rdx, QWORD PTR accessEventName$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BA@DKCEJMG@AccessEventName?$AA@
	call	QWORD PTR __imp_GetEnvironmentVariableA
	test	eax, eax
	jne	SHORT $LN3@Initialize

; 358  : 		DebugWriteLine(L"Getting environment variable failed");
; 359  : 		if (GetLastError() == ERROR_ENVVAR_NOT_FOUND)

	call	QWORD PTR __imp_GetLastError
	cmp	eax, 203				; 000000cbH
	jne	SHORT $LN2@Initialize

; 360  : 			MessageBox(nullptr, TEXT("Could not find environment variable 'AccessEventName', please restart the profiler!"), TEXT("Profiler Error"), MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0FE@HNFKMMLK@Could?5not?5find?5environment?5varia@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA

; 361  : 		else

	jmp	SHORT $LN1@Initialize
$LN2@Initialize:

; 362  : 			MessageBox(nullptr, TEXT("Unknown error!"), TEXT("Profiler Error"), MB_OK);

	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_0P@NHBFFJJG@Profiler?5Error?$AA@
	lea	rdx, OFFSET FLAT:??_C@_0P@OEJKFADD@Unknown?5error?$CB?$AA@
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN1@Initialize:

; 363  : 
; 364  : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN11@Initialize
$LN3@Initialize:

; 365  : 	}
; 366  : 
; 367  : 	this->accessEventHandle = new CEventWaitHandle(accessEventName);

	mov	ecx, 16
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN19@Initialize
	lea	rax, QWORD PTR accessEventName$[rsp]
	mov	QWORD PTR [rbx], rax
	lea	r8, QWORD PTR accessEventName$[rsp]
	xor	edx, edx
	mov	ecx, 1048578				; 00100002H
	call	QWORD PTR __imp_OpenEventA
	mov	QWORD PTR [rbx+8], rax
	jmp	SHORT $LN20@Initialize
$LN19@Initialize:
	xor	ebx, ebx
$LN20@Initialize:
	mov	QWORD PTR [rdi+200], rbx

; 368  : 
; 369  : 	return 0;

	xor	eax, eax
$LN11@Initialize:

; 370  : }

	mov	rbx, QWORD PTR [rsp+272]
	add	rsp, 256				; 00000100H
	pop	rdi
	ret	0
?InitializeCommunication@CProfiler@@AEAAHXZ ENDP	; CProfiler::InitializeCommunication
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
accessEventName$ = 32
mutexName$ = 96
sharedMemName$ = 160
$T164488 = 240
this$ = 272
$T164437 = 280
?dtor$1@?0??InitializeCommunication@CProfiler@@AEAAHXZ@4HA PROC ; `CProfiler::InitializeCommunication'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T164437[rbp]
	call	??3@YAXPEAX@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??InitializeCommunication@CProfiler@@AEAAHXZ@4HA ENDP ; `CProfiler::InitializeCommunication'::`1'::dtor$1
text$x	ENDS
PUBLIC	?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z ; CProfiler::EnterLock
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\eventwaithandle.cpp
pdata	SEGMENT
$pdata$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z DD imagerel $LN11
	DD	imagerel $LN11+34
	DD	imagerel $unwind$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z DD imagerel $LN11+34
	DD	imagerel $LN11+101
	DD	imagerel $chain$0$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z DD imagerel $LN11+101
	DD	imagerel $LN11+107
	DD	imagerel $chain$1$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z DD 021H
	DD	imagerel $LN11
	DD	imagerel $LN11+34
	DD	imagerel $unwind$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z DD 020521H
	DD	067405H
	DD	imagerel $LN11
	DD	imagerel $LN11+34
	DD	imagerel $unwind$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z
_TEXT	SEGMENT
this$ = 48
data$ = 56
?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z PROC	; CProfiler::EnterLock, COMDAT

; 57   : {

$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 58   : 	data->inLock = 1;

	mov	DWORD PTR [rdx+4], 1

; 59   : 	_ReadWriteBarrier(); _mm_mfence();

	mfence

; 60   : 
; 61   : 	while (sharedMemoryHeader->ExclusiveAccess == 1)

	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	ecx, DWORD PTR [rax+4]
	cmp	ecx, 1
	jne	SHORT $LN1@EnterLock
	mov	QWORD PTR [rsp+48], rdi
	xor	edi, edi
	npad	7
$LL2@EnterLock:

; 62   : 	{
; 63   : 		data->inLock = 0;

	mov	DWORD PTR [rbx+4], edi

; 64   : 		this->accessEventHandle->Wait();

	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+200
	or	edx, -1					; ffffffffH
	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_WaitForSingleObject

; 65   : 		data->inLock = 1;

	mov	DWORD PTR [rbx+4], 1

; 66   : 		_ReadWriteBarrier(); _mm_mfence();

	mfence
	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	ecx, DWORD PTR [rax+4]
	cmp	ecx, 1
	je	SHORT $LL2@EnterLock
	mov	rdi, QWORD PTR [rsp+48]
$LN1@EnterLock:

; 67   : 	}
; 68   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?EnterLock@CProfiler@@QEAAXPEAUThreadLocalData@@@Z ENDP	; CProfiler::EnterLock
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Glength_error@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+72
	DD	imagerel $unwind$??_Glength_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Glength_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_Glength_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Glength_error@std@@UEAAPEAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
$LN9:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	rdi, rcx
	add	rcx, 24
	mov	QWORD PTR [rcx-24], rax
	mov	ebx, edx
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	mov	rcx, rdi
	call	QWORD PTR __imp_??1exception@std@@UEAA@XZ
	test	bl, 1
	je	SHORT $LN8@scalar@3
	mov	rcx, rdi
	call	??3@YAXPEAX@Z				; operator delete
$LN8@scalar@3:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Glength_error@std@@UEAAPEAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
pdata	SEGMENT
$pdata$??Eiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$??Eiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Eiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Eiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator++, COMDAT

; 474  : 			{	// preincrement

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 475  : 			++(*(const_iterator *)this);

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Inc

; 476  : 			return (*this);

	mov	rax, rbx

; 477  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator::operator++
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Eiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$??Eiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Eiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Eiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator++, COMDAT

; 474  : 			{	// preincrement

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 475  : 			++(*(const_iterator *)this);

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::const_iterator::_Inc

; 476  : 			return (*this);

	mov	rax, rbx

; 477  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator::operator++
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Eiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ DD imagerel $LN5
	DD	imagerel $LN5+23
	DD	imagerel $unwind$??Eiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Eiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ
_TEXT	SEGMENT
this$ = 48
??Eiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator++, COMDAT

; 474  : 			{	// preincrement

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 475  : 			++(*(const_iterator *)this);

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::const_iterator::_Inc

; 476  : 			return (*this);

	mov	rax, rbx

; 477  : 			}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAAAEAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator::operator++
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z DD imagerel $LN67
	DD	imagerel $LN67+193
	DD	imagerel $unwind$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Off$ = 64
__formal$ = 72
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>, COMDAT

; 1857 : 	{	// add to _Off distance between bidirectional iterators (redundant)

$LN67:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx

; 1858 : 	for (; _First != _Last; ++_First)

$LL12@Distance2:
	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN53@Distance2
	cmp	rax, QWORD PTR [rsi]
	je	SHORT $LN52@Distance2
$LN53@Distance2:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN52@Distance2:
	mov	rax, QWORD PTR [rsi+8]
	cmp	QWORD PTR [rbx+8], rax
	je	SHORT $LN1@Distance2

; 1859 : 		++_Off;

	inc	QWORD PTR [rdi]
	cmp	QWORD PTR [rbx], 0
	jne	SHORT $LN18@Distance2

; 1858 : 	for (; _First != _Last; ++_First)

	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN18@Distance2:
	mov	rcx, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LN15@Distance2
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL12@Distance2
$LN15@Distance2:
	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN63@Distance2
	mov	rcx, QWORD PTR [rax]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN32@Distance2
	npad	7
$LL33@Distance2:
	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL33@Distance2
$LN32@Distance2:
	mov	QWORD PTR [rbx+8], rax
	jmp	SHORT $LL12@Distance2
$LN63@Distance2:
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN66@Distance2
	npad	4
$LL11@Distance2:
	mov	rax, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN66@Distance2
	mov	QWORD PTR [rbx+8], rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL11@Distance2
$LN66@Distance2:
	mov	QWORD PTR [rbx+8], rcx
	jmp	$LL12@Distance2
$LN1@Distance2:

; 1860 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z DD imagerel $LN67
	DD	imagerel $LN67+193
	DD	imagerel $unwind$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Off$ = 64
__formal$ = 72
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>, COMDAT

; 1857 : 	{	// add to _Off distance between bidirectional iterators (redundant)

$LN67:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx

; 1858 : 	for (; _First != _Last; ++_First)

$LL12@Distance2@2:
	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN53@Distance2@2
	cmp	rax, QWORD PTR [rsi]
	je	SHORT $LN52@Distance2@2
$LN53@Distance2@2:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN52@Distance2@2:
	mov	rax, QWORD PTR [rsi+8]
	cmp	QWORD PTR [rbx+8], rax
	je	SHORT $LN1@Distance2@2

; 1859 : 		++_Off;

	inc	QWORD PTR [rdi]
	cmp	QWORD PTR [rbx], 0
	jne	SHORT $LN18@Distance2@2

; 1858 : 	for (; _First != _Last; ++_First)

	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN18@Distance2@2:
	mov	rcx, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LN15@Distance2@2
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL12@Distance2@2
$LN15@Distance2@2:
	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN63@Distance2@2
	mov	rcx, QWORD PTR [rax]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN32@Distance2@2
	npad	7
$LL33@Distance2@2:
	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL33@Distance2@2
$LN32@Distance2@2:
	mov	QWORD PTR [rbx+8], rax
	jmp	SHORT $LL12@Distance2@2
$LN63@Distance2@2:
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN66@Distance2@2
	npad	4
$LL11@Distance2@2:
	mov	rax, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN66@Distance2@2
	mov	QWORD PTR [rbx+8], rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL11@Distance2@2
$LN66@Distance2@2:
	mov	QWORD PTR [rbx+8], rcx
	jmp	$LL12@Distance2@2
$LN1@Distance2@2:

; 1860 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z DD imagerel $LN67
	DD	imagerel $LN67+193
	DD	imagerel $unwind$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Off$ = 64
__formal$ = 72
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,unsigned __int64>, COMDAT

; 1857 : 	{	// add to _Off distance between bidirectional iterators (redundant)

$LN67:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx

; 1858 : 	for (; _First != _Last; ++_First)

$LL12@Distance2@3:
	mov	rax, QWORD PTR [rbx]
	test	rax, rax
	je	SHORT $LN53@Distance2@3
	cmp	rax, QWORD PTR [rsi]
	je	SHORT $LN52@Distance2@3
$LN53@Distance2@3:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN52@Distance2@3:
	mov	rax, QWORD PTR [rsi+8]
	cmp	QWORD PTR [rbx+8], rax
	je	SHORT $LN1@Distance2@3

; 1859 : 		++_Off;

	inc	QWORD PTR [rdi]
	cmp	QWORD PTR [rbx], 0
	jne	SHORT $LN18@Distance2@3

; 1858 : 	for (; _First != _Last; ++_First)

	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN18@Distance2@3:
	mov	rcx, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LN15@Distance2@3
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL12@Distance2@3
$LN15@Distance2@3:
	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN63@Distance2@3
	mov	rcx, QWORD PTR [rax]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN32@Distance2@3
	npad	7
$LL33@Distance2@3:
	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL33@Distance2@3
$LN32@Distance2@3:
	mov	QWORD PTR [rbx+8], rax
	jmp	SHORT $LL12@Distance2@3
$LN63@Distance2@3:
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	jne	SHORT $LN66@Distance2@3
	npad	4
$LL11@Distance2@3:
	mov	rax, QWORD PTR [rcx+16]
	cmp	QWORD PTR [rbx+8], rax
	jne	SHORT $LN66@Distance2@3
	mov	QWORD PTR [rbx+8], rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+41], 0
	je	SHORT $LL11@Distance2@3
$LN66@Distance2@3:
	mov	QWORD PTR [rbx+8], rcx
	jmp	$LL12@Distance2@3
$LN1@Distance2@3:

; 1860 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_KUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,unsigned __int64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z DD imagerel $LN71
	DD	imagerel $LN71+235
	DD	imagerel $unwind$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z DD 0a1901H
	DD	0d7419H
	DD	0c6419H
	DD	0b5419H
	DD	0a3419H
	DD	0c0157219H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Off$ = 96
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z PROC ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>, COMDAT

; 1892 : 	{	// add to _Off distance between iterators

$LN71:
	mov	r11, rsp
	mov	QWORD PTR [r11+8], rbx
	mov	QWORD PTR [r11+16], rbp
	mov	QWORD PTR [r11+24], rsi
	mov	QWORD PTR [r11+32], rdi
	push	r12
	sub	rsp, 64					; 00000040H

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	rax, QWORD PTR [rdx]
	mov	rsi, r8
	lea	r8, QWORD PTR [r11-40]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rdx+8]
	lea	rdx, QWORD PTR [r11-24]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rcx]
	mov	rbp, QWORD PTR [r11-32]
	mov	r12, QWORD PTR [r11-40]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rdi, QWORD PTR [r11-24]
	mov	rbx, QWORD PTR [r11-16]
$LL16@Distance:
	test	rdi, rdi
	je	SHORT $LN57@Distance
	cmp	rdi, r12
	je	SHORT $LN56@Distance
$LN57@Distance:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN56@Distance:
	cmp	rbx, rbp
	je	SHORT $LN5@Distance
	inc	QWORD PTR [rsi]
	test	rdi, rdi
	jne	SHORT $LN22@Distance
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN22@Distance:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN19@Distance
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL16@Distance
$LN19@Distance:
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN67@Distance
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LL16@Distance
	npad	9
$LL37@Distance:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL37@Distance
	jmp	SHORT $LL16@Distance
$LN67@Distance:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN70@Distance
$LL15@Distance:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN70@Distance
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL15@Distance
$LN70@Distance:
	mov	rbx, rax
	jmp	SHORT $LL16@Distance
$LN5@Distance:

; 1894 : 	}

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	r12
	ret	0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z DD imagerel $LN71
	DD	imagerel $LN71+235
	DD	imagerel $unwind$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z DD 0a1901H
	DD	0d7419H
	DD	0c6419H
	DD	0b5419H
	DD	0a3419H
	DD	0c0157219H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Off$ = 96
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z PROC ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>, COMDAT

; 1892 : 	{	// add to _Off distance between iterators

$LN71:
	mov	r11, rsp
	mov	QWORD PTR [r11+8], rbx
	mov	QWORD PTR [r11+16], rbp
	mov	QWORD PTR [r11+24], rsi
	mov	QWORD PTR [r11+32], rdi
	push	r12
	sub	rsp, 64					; 00000040H

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	rax, QWORD PTR [rdx]
	mov	rsi, r8
	lea	r8, QWORD PTR [r11-40]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rdx+8]
	lea	rdx, QWORD PTR [r11-24]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rcx]
	mov	rbp, QWORD PTR [r11-32]
	mov	r12, QWORD PTR [r11-40]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rdi, QWORD PTR [r11-24]
	mov	rbx, QWORD PTR [r11-16]
$LL16@Distance@2:
	test	rdi, rdi
	je	SHORT $LN57@Distance@2
	cmp	rdi, r12
	je	SHORT $LN56@Distance@2
$LN57@Distance@2:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN56@Distance@2:
	cmp	rbx, rbp
	je	SHORT $LN5@Distance@2
	inc	QWORD PTR [rsi]
	test	rdi, rdi
	jne	SHORT $LN22@Distance@2
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN22@Distance@2:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN19@Distance@2
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL16@Distance@2
$LN19@Distance@2:
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN67@Distance@2
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LL16@Distance@2
	npad	9
$LL37@Distance@2:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL37@Distance@2
	jmp	SHORT $LL16@Distance@2
$LN67@Distance@2:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN70@Distance@2
$LL15@Distance@2:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN70@Distance@2
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL15@Distance@2
$LN70@Distance@2:
	mov	rbx, rax
	jmp	SHORT $LL16@Distance@2
$LN5@Distance@2:

; 1894 : 	}

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	r12
	ret	0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@0@0AEA_K@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::iterator,unsigned __int64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_K@Z DD imagerel $LN71
	DD	imagerel $LN71+235
	DD	imagerel $unwind$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_K@Z DD 0a1901H
	DD	0d7419H
	DD	0c6419H
	DD	0b5419H
	DD	0a3419H
	DD	0c0157219H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_K@Z
_TEXT	SEGMENT
_First$ = 80
_Last$ = 88
_Off$ = 96
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_K@Z PROC ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,unsigned __int64>, COMDAT

; 1892 : 	{	// add to _Off distance between iterators

$LN71:
	mov	r11, rsp
	mov	QWORD PTR [r11+8], rbx
	mov	QWORD PTR [r11+16], rbp
	mov	QWORD PTR [r11+24], rsi
	mov	QWORD PTR [r11+32], rdi
	push	r12
	sub	rsp, 64					; 00000040H

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	rax, QWORD PTR [rdx]
	mov	rsi, r8
	lea	r8, QWORD PTR [r11-40]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rdx+8]
	lea	rdx, QWORD PTR [r11-24]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rcx]
	mov	rbp, QWORD PTR [r11-32]
	mov	r12, QWORD PTR [r11-40]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rdi, QWORD PTR [r11-24]
	mov	rbx, QWORD PTR [r11-16]
$LL16@Distance@3:
	test	rdi, rdi
	je	SHORT $LN57@Distance@3
	cmp	rdi, r12
	je	SHORT $LN56@Distance@3
$LN57@Distance@3:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN56@Distance@3:
	cmp	rbx, rbp
	je	SHORT $LN5@Distance@3
	inc	QWORD PTR [rsi]
	test	rdi, rdi
	jne	SHORT $LN22@Distance@3
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN22@Distance@3:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN19@Distance@3
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL16@Distance@3
$LN19@Distance@3:
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN67@Distance@3
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LL16@Distance@3
	npad	9
$LL37@Distance@3:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL37@Distance@3
	jmp	SHORT $LL16@Distance@3
$LN67@Distance@3:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN70@Distance@3
$LL15@Distance@3:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN70@Distance@3
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL15@Distance@3
$LN70@Distance@3:
	mov	rbx, rax
	jmp	SHORT $LL16@Distance@3
$LN5@Distance@3:

; 1894 : 	}

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	r12
	ret	0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_K@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@0@0AEA_K@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::iterator,unsigned __int64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN384
	DD	imagerel $LN384+827
	DD	imagerel $unwind$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA DD imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA DD imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
	DD	0ffffffffH
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z+79
	DD	00H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z+91
	DD	01H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z+120
	DD	00H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z+150
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 092011H
	DD	0186420H
	DD	017541cH
	DD	0163418H
	DD	014010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T174569 = 48
$T173765 = 56
$T173764 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert, COMDAT

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

$LN384:
	mov	r11, rsp
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	QWORD PTR $T174569[rsp], -2
	mov	QWORD PTR [r11+8], rbx
	mov	QWORD PTR [r11+16], rbp
	mov	QWORD PTR [r11+24], rsi
	mov	rbx, r9
	movzx	edi, r8b
	mov	rbp, rdx
	mov	rsi, rcx

; 1188 : 		if (max_size() - 1 <= _Mysize)

	mov	rax, 1152921504606846974		; 0ffffffffffffffeH
	cmp	QWORD PTR [rcx+56], rax
	jb	SHORT $LN17@Insert

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	lea	rdx, OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	rcx, QWORD PTR [r11-112]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rcx, QWORD PTR $T173764[rsp]
	call	QWORD PTR __imp_??0exception@std@@QEAA@XZ
	npad	1
	lea	rax, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	QWORD PTR $T173764[rsp], rax
	lea	rdx, QWORD PTR $T173765[rsp]
	lea	rcx, QWORD PTR $T173764[rsp+24]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	npad	1
	lea	rax, OFFSET FLAT:??_7length_error@std@@6B@
	mov	QWORD PTR $T173764[rsp], rax
	lea	rdx, OFFSET FLAT:_TI3?AVlength_error@std@@
	lea	rcx, QWORD PTR $T173764[rsp]
	call	_CxxThrowException
	npad	1
$LN17@Insert:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	mov	rdx, QWORD PTR [rcx+48]
	mov	BYTE PTR [rsp+40], 0
	mov	rax, QWORD PTR _Val$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rdx
	mov	r8, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CBKPEAVThreadInfo@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	r11, rax

; 1192 : 
; 1193 : 		++_Mysize;

	inc	QWORD PTR [rsi+56]

; 1194 : 		if (_Wherenode == _Myhead)

	mov	rcx, QWORD PTR [rsi+48]
	cmp	rbx, rcx
	jne	SHORT $LN16@Insert

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	QWORD PTR [rcx+8], rax

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	rcx, QWORD PTR [rsi+48]
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rsi+48]
	mov	QWORD PTR [rcx+16], rax
	jmp	SHORT $LN11@Insert
$LN16@Insert:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	test	dil, dil
	je	SHORT $LN14@Insert

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	QWORD PTR [rbx], rax

; 1202 : 			if (_Wherenode == _Lmost())

	mov	rax, QWORD PTR [rsi+48]
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN11@Insert

; 1203 : 				_Lmost() = _Newnode;

	mov	QWORD PTR [rax], r11

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN11@Insert
$LN14@Insert:

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

	mov	QWORD PTR [rbx+16], rax

; 1208 : 			if (_Wherenode == _Rmost())

	mov	rax, QWORD PTR [rsi+48]
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN11@Insert

; 1209 : 				_Rmost() = _Newnode;

	mov	QWORD PTR [rax+16], r11
$LN11@Insert:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	rdx, r11
	lea	r8, QWORD PTR [r11+8]
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+40], 0
	jne	$LN9@Insert
	npad	8
$LL10@Insert:

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	cmp	rax, QWORD PTR [rcx]
	jne	$LN8@Insert

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	r9, QWORD PTR [rcx+16]

; 1216 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [r9+40], 0
	jne	SHORT $LN7@Insert

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [r9+40], 1

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	rax, QWORD PTR [r8]
	mov	rdx, QWORD PTR [rax+8]

; 1222 : 					}
; 1223 : 				else

	jmp	$LN316@Insert
$LN7@Insert:

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN111@Insert

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	rdx, rax

; 1228 : 						_Lrotate(_Pnode);

	mov	rcx, QWORD PTR [rax+16]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx+16], rax
	mov	rax, QWORD PTR [rcx]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN110@Insert
	mov	QWORD PTR [rax+8], rdx
$LN110@Insert:
	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN109@Insert
	mov	QWORD PTR [rax+8], rcx
	jmp	SHORT $LN106@Insert
$LN109@Insert:
	mov	rax, QWORD PTR [r8]
	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN107@Insert
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN106@Insert
$LN107@Insert:
	mov	QWORD PTR [rax+16], rcx
$LN106@Insert:
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [r8], rcx
$LN111@Insert:

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	rax, QWORD PTR [r8]
	mov	BYTE PTR [rax+40], 1

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rcx]
	mov	rax, QWORD PTR [r8+16]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r8+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN173@Insert
	mov	QWORD PTR [rax+8], rcx
$LN173@Insert:
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rcx, QWORD PTR [rax+8]
	jne	SHORT $LN172@Insert
	mov	QWORD PTR [rax+8], r8
	jmp	SHORT $LN169@Insert
$LN172@Insert:
	mov	rax, QWORD PTR [rcx+8]
	cmp	rcx, QWORD PTR [rax+16]
	jne	SHORT $LN170@Insert
	mov	QWORD PTR [rax+16], r8
	jmp	SHORT $LN169@Insert
$LN170@Insert:
	mov	QWORD PTR [rax], r8
$LN169@Insert:
	mov	QWORD PTR [r8+16], rcx
	mov	QWORD PTR [rcx+8], r8

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN316@Insert
$LN8@Insert:

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

	mov	r9, QWORD PTR [rcx]

; 1238 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [r9+40], 0
	jne	SHORT $LN3@Insert

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [r9+40], 1

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	rax, QWORD PTR [r8]
	mov	rdx, QWORD PTR [rax+8]

; 1244 : 					}
; 1245 : 				else

	jmp	$LN316@Insert
$LN3@Insert:

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN253@Insert

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	rdx, rax

; 1250 : 						_Rrotate(_Pnode);

	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN252@Insert
	mov	QWORD PTR [rax+8], rdx
$LN252@Insert:
	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN251@Insert
	mov	QWORD PTR [rax+8], rcx
	jmp	SHORT $LN248@Insert
$LN251@Insert:
	mov	rax, QWORD PTR [r8]
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN249@Insert
	mov	QWORD PTR [rax+16], rcx
	jmp	SHORT $LN248@Insert
$LN249@Insert:
	mov	QWORD PTR [rax], rcx
$LN248@Insert:
	mov	QWORD PTR [rcx+16], rdx
	mov	QWORD PTR [r8], rcx
$LN253@Insert:

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	rax, QWORD PTR [r8]
	mov	BYTE PTR [rax+40], 1

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN315@Insert
	mov	QWORD PTR [rax+8], rcx
$LN315@Insert:
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rcx, QWORD PTR [rax+8]
	jne	SHORT $LN314@Insert
	mov	QWORD PTR [rax+8], r8
	jmp	SHORT $LN311@Insert
$LN314@Insert:
	mov	rax, QWORD PTR [rcx+8]
	cmp	rcx, QWORD PTR [rax]
	jne	SHORT $LN312@Insert
	mov	QWORD PTR [rax], r8
	jmp	SHORT $LN311@Insert
$LN312@Insert:
	mov	QWORD PTR [rax+16], r8
$LN311@Insert:
	mov	QWORD PTR [r8], rcx
	mov	QWORD PTR [rcx+8], r8
$LN316@Insert:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+40], 0
	je	$LL10@Insert
$LN9@Insert:

; 1255 : 					}
; 1256 : 				}
; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

	mov	rax, QWORD PTR [rsi+48]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 1

; 1259 : 		return (_TREE_ITERATOR(_Newnode));

	mov	QWORD PTR [rbp+8], r11
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR [rbp], rax
	mov	rax, rbp

; 1260 : 		}

	lea	r11, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN383@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T174569 = 48
$T173765 = 56
$T173764 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T173765[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert'::`1'::dtor$0
; Function compile flags: /Ogtpy
$T174569 = 48
$T173765 = 56
$T173764 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T173764[rbp]
	call	QWORD PTR __imp_??1exception@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert'::`1'::dtor$2
text$x	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD imagerel $LN384
	DD	imagerel $LN384+827
	DD	imagerel $unwind$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA DD imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA DD imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
	DD	0ffffffffH
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z+79
	DD	00H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z+91
	DD	01H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z+120
	DD	00H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z+150
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD 092011H
	DD	0186420H
	DD	017541cH
	DD	0163418H
	DD	014010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T175397 = 48
$T174593 = 56
$T174592 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Insert, COMDAT

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

$LN384:
	mov	r11, rsp
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	QWORD PTR $T175397[rsp], -2
	mov	QWORD PTR [r11+8], rbx
	mov	QWORD PTR [r11+16], rbp
	mov	QWORD PTR [r11+24], rsi
	mov	rbx, r9
	movzx	edi, r8b
	mov	rbp, rdx
	mov	rsi, rcx

; 1188 : 		if (max_size() - 1 <= _Mysize)

	mov	rax, 1152921504606846974		; 0ffffffffffffffeH
	cmp	QWORD PTR [rcx+56], rax
	jb	SHORT $LN17@Insert@2

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	lea	rdx, OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	rcx, QWORD PTR [r11-112]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rcx, QWORD PTR $T174592[rsp]
	call	QWORD PTR __imp_??0exception@std@@QEAA@XZ
	npad	1
	lea	rax, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	QWORD PTR $T174592[rsp], rax
	lea	rdx, QWORD PTR $T174593[rsp]
	lea	rcx, QWORD PTR $T174592[rsp+24]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	npad	1
	lea	rax, OFFSET FLAT:??_7length_error@std@@6B@
	mov	QWORD PTR $T174592[rsp], rax
	lea	rdx, OFFSET FLAT:_TI3?AVlength_error@std@@
	lea	rcx, QWORD PTR $T174592[rsp]
	call	_CxxThrowException
	npad	1
$LN17@Insert@2:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	mov	rdx, QWORD PTR [rcx+48]
	mov	BYTE PTR [rsp+40], 0
	mov	rax, QWORD PTR _Val$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rdx
	mov	r8, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	r11, rax

; 1192 : 
; 1193 : 		++_Mysize;

	inc	QWORD PTR [rsi+56]

; 1194 : 		if (_Wherenode == _Myhead)

	mov	rcx, QWORD PTR [rsi+48]
	cmp	rbx, rcx
	jne	SHORT $LN16@Insert@2

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	QWORD PTR [rcx+8], rax

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	rcx, QWORD PTR [rsi+48]
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rsi+48]
	mov	QWORD PTR [rcx+16], rax
	jmp	SHORT $LN11@Insert@2
$LN16@Insert@2:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	test	dil, dil
	je	SHORT $LN14@Insert@2

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	QWORD PTR [rbx], rax

; 1202 : 			if (_Wherenode == _Lmost())

	mov	rax, QWORD PTR [rsi+48]
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN11@Insert@2

; 1203 : 				_Lmost() = _Newnode;

	mov	QWORD PTR [rax], r11

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN11@Insert@2
$LN14@Insert@2:

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

	mov	QWORD PTR [rbx+16], rax

; 1208 : 			if (_Wherenode == _Rmost())

	mov	rax, QWORD PTR [rsi+48]
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN11@Insert@2

; 1209 : 				_Rmost() = _Newnode;

	mov	QWORD PTR [rax+16], r11
$LN11@Insert@2:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	rdx, r11
	lea	r8, QWORD PTR [r11+8]
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+40], 0
	jne	$LN9@Insert@2
	npad	8
$LL10@Insert@2:

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	cmp	rax, QWORD PTR [rcx]
	jne	$LN8@Insert@2

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	r9, QWORD PTR [rcx+16]

; 1216 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [r9+40], 0
	jne	SHORT $LN7@Insert@2

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [r9+40], 1

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	rax, QWORD PTR [r8]
	mov	rdx, QWORD PTR [rax+8]

; 1222 : 					}
; 1223 : 				else

	jmp	$LN316@Insert@2
$LN7@Insert@2:

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN111@Insert@2

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	rdx, rax

; 1228 : 						_Lrotate(_Pnode);

	mov	rcx, QWORD PTR [rax+16]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx+16], rax
	mov	rax, QWORD PTR [rcx]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN110@Insert@2
	mov	QWORD PTR [rax+8], rdx
$LN110@Insert@2:
	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN109@Insert@2
	mov	QWORD PTR [rax+8], rcx
	jmp	SHORT $LN106@Insert@2
$LN109@Insert@2:
	mov	rax, QWORD PTR [r8]
	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN107@Insert@2
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN106@Insert@2
$LN107@Insert@2:
	mov	QWORD PTR [rax+16], rcx
$LN106@Insert@2:
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [r8], rcx
$LN111@Insert@2:

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	rax, QWORD PTR [r8]
	mov	BYTE PTR [rax+40], 1

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rcx]
	mov	rax, QWORD PTR [r8+16]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r8+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN173@Insert@2
	mov	QWORD PTR [rax+8], rcx
$LN173@Insert@2:
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rcx, QWORD PTR [rax+8]
	jne	SHORT $LN172@Insert@2
	mov	QWORD PTR [rax+8], r8
	jmp	SHORT $LN169@Insert@2
$LN172@Insert@2:
	mov	rax, QWORD PTR [rcx+8]
	cmp	rcx, QWORD PTR [rax+16]
	jne	SHORT $LN170@Insert@2
	mov	QWORD PTR [rax+16], r8
	jmp	SHORT $LN169@Insert@2
$LN170@Insert@2:
	mov	QWORD PTR [rax], r8
$LN169@Insert@2:
	mov	QWORD PTR [r8+16], rcx
	mov	QWORD PTR [rcx+8], r8

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN316@Insert@2
$LN8@Insert@2:

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

	mov	r9, QWORD PTR [rcx]

; 1238 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [r9+40], 0
	jne	SHORT $LN3@Insert@2

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [r9+40], 1

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	rax, QWORD PTR [r8]
	mov	rdx, QWORD PTR [rax+8]

; 1244 : 					}
; 1245 : 				else

	jmp	$LN316@Insert@2
$LN3@Insert@2:

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN253@Insert@2

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	rdx, rax

; 1250 : 						_Rrotate(_Pnode);

	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN252@Insert@2
	mov	QWORD PTR [rax+8], rdx
$LN252@Insert@2:
	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN251@Insert@2
	mov	QWORD PTR [rax+8], rcx
	jmp	SHORT $LN248@Insert@2
$LN251@Insert@2:
	mov	rax, QWORD PTR [r8]
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN249@Insert@2
	mov	QWORD PTR [rax+16], rcx
	jmp	SHORT $LN248@Insert@2
$LN249@Insert@2:
	mov	QWORD PTR [rax], rcx
$LN248@Insert@2:
	mov	QWORD PTR [rcx+16], rdx
	mov	QWORD PTR [r8], rcx
$LN253@Insert@2:

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	rax, QWORD PTR [r8]
	mov	BYTE PTR [rax+40], 1

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN315@Insert@2
	mov	QWORD PTR [rax+8], rcx
$LN315@Insert@2:
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rcx, QWORD PTR [rax+8]
	jne	SHORT $LN314@Insert@2
	mov	QWORD PTR [rax+8], r8
	jmp	SHORT $LN311@Insert@2
$LN314@Insert@2:
	mov	rax, QWORD PTR [rcx+8]
	cmp	rcx, QWORD PTR [rax]
	jne	SHORT $LN312@Insert@2
	mov	QWORD PTR [rax], r8
	jmp	SHORT $LN311@Insert@2
$LN312@Insert@2:
	mov	QWORD PTR [rax+16], r8
$LN311@Insert@2:
	mov	QWORD PTR [r8], rcx
	mov	QWORD PTR [rcx+8], r8
$LN316@Insert@2:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+40], 0
	je	$LL10@Insert@2
$LN9@Insert@2:

; 1255 : 					}
; 1256 : 				}
; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

	mov	rax, QWORD PTR [rsi+48]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 1

; 1259 : 		return (_TREE_ITERATOR(_Newnode));

	mov	QWORD PTR [rbp+8], r11
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR [rbp], rax
	mov	rax, rbp

; 1260 : 		}

	lea	r11, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN383@Insert@2:
?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T175397 = 48
$T174593 = 56
$T174592 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Insert'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T174593[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Insert'::`1'::dtor$0
; Function compile flags: /Ogtpy
$T175397 = 48
$T174593 = 56
$T174592 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Insert'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T174592[rbp]
	call	QWORD PTR __imp_??1exception@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Insert'::`1'::dtor$2
text$x	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z DD imagerel $LN384
	DD	imagerel $LN384+827
	DD	imagerel $unwind$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA DD imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA DD imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z DD imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z
	DD	0ffffffffH
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z+79
	DD	00H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z+91
	DD	01H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z+120
	DD	00H
	DD	imagerel ?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z+150
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z DD 092011H
	DD	0186420H
	DD	017541cH
	DD	0163418H
	DD	014010bH
	DD	07004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z
_TEXT	SEGMENT
$T176225 = 48
$T175421 = 56
$T175420 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Insert, COMDAT

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

$LN384:
	mov	r11, rsp
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	QWORD PTR $T176225[rsp], -2
	mov	QWORD PTR [r11+8], rbx
	mov	QWORD PTR [r11+16], rbp
	mov	QWORD PTR [r11+24], rsi
	mov	rbx, r9
	movzx	edi, r8b
	mov	rbp, rdx
	mov	rsi, rcx

; 1188 : 		if (max_size() - 1 <= _Mysize)

	mov	rax, 1152921504606846974		; 0ffffffffffffffeH
	cmp	QWORD PTR [rcx+56], rax
	jb	SHORT $LN17@Insert@3

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	lea	rdx, OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	rcx, QWORD PTR [r11-112]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rcx, QWORD PTR $T175420[rsp]
	call	QWORD PTR __imp_??0exception@std@@QEAA@XZ
	npad	1
	lea	rax, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	QWORD PTR $T175420[rsp], rax
	lea	rdx, QWORD PTR $T175421[rsp]
	lea	rcx, QWORD PTR $T175420[rsp+24]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	npad	1
	lea	rax, OFFSET FLAT:??_7length_error@std@@6B@
	mov	QWORD PTR $T175420[rsp], rax
	lea	rdx, OFFSET FLAT:_TI3?AVlength_error@std@@
	lea	rcx, QWORD PTR $T175420[rsp]
	call	_CxxThrowException
	npad	1
$LN17@Insert@3:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	mov	rdx, QWORD PTR [rcx+48]
	mov	BYTE PTR [rsp+40], 0
	mov	rax, QWORD PTR _Val$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rdx
	mov	r8, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@PEAU342@00AEBU?$pair@$$CB_KH@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
	mov	r11, rax

; 1192 : 
; 1193 : 		++_Mysize;

	inc	QWORD PTR [rsi+56]

; 1194 : 		if (_Wherenode == _Myhead)

	mov	rcx, QWORD PTR [rsi+48]
	cmp	rbx, rcx
	jne	SHORT $LN16@Insert@3

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	QWORD PTR [rcx+8], rax

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	rcx, QWORD PTR [rsi+48]
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rsi+48]
	mov	QWORD PTR [rcx+16], rax
	jmp	SHORT $LN11@Insert@3
$LN16@Insert@3:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	test	dil, dil
	je	SHORT $LN14@Insert@3

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	QWORD PTR [rbx], rax

; 1202 : 			if (_Wherenode == _Lmost())

	mov	rax, QWORD PTR [rsi+48]
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN11@Insert@3

; 1203 : 				_Lmost() = _Newnode;

	mov	QWORD PTR [rax], r11

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN11@Insert@3
$LN14@Insert@3:

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

	mov	QWORD PTR [rbx+16], rax

; 1208 : 			if (_Wherenode == _Rmost())

	mov	rax, QWORD PTR [rsi+48]
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN11@Insert@3

; 1209 : 				_Rmost() = _Newnode;

	mov	QWORD PTR [rax+16], r11
$LN11@Insert@3:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	rdx, r11
	lea	r8, QWORD PTR [r11+8]
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+40], 0
	jne	$LN9@Insert@3
	npad	8
$LL10@Insert@3:

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	cmp	rax, QWORD PTR [rcx]
	jne	$LN8@Insert@3

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	r9, QWORD PTR [rcx+16]

; 1216 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [r9+40], 0
	jne	SHORT $LN7@Insert@3

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [r9+40], 1

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	rax, QWORD PTR [r8]
	mov	rdx, QWORD PTR [rax+8]

; 1222 : 					}
; 1223 : 				else

	jmp	$LN316@Insert@3
$LN7@Insert@3:

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN111@Insert@3

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	rdx, rax

; 1228 : 						_Lrotate(_Pnode);

	mov	rcx, QWORD PTR [rax+16]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx+16], rax
	mov	rax, QWORD PTR [rcx]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN110@Insert@3
	mov	QWORD PTR [rax+8], rdx
$LN110@Insert@3:
	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN109@Insert@3
	mov	QWORD PTR [rax+8], rcx
	jmp	SHORT $LN106@Insert@3
$LN109@Insert@3:
	mov	rax, QWORD PTR [r8]
	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN107@Insert@3
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN106@Insert@3
$LN107@Insert@3:
	mov	QWORD PTR [rax+16], rcx
$LN106@Insert@3:
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [r8], rcx
$LN111@Insert@3:

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	rax, QWORD PTR [r8]
	mov	BYTE PTR [rax+40], 1

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rcx]
	mov	rax, QWORD PTR [r8+16]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r8+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN173@Insert@3
	mov	QWORD PTR [rax+8], rcx
$LN173@Insert@3:
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rcx, QWORD PTR [rax+8]
	jne	SHORT $LN172@Insert@3
	mov	QWORD PTR [rax+8], r8
	jmp	SHORT $LN169@Insert@3
$LN172@Insert@3:
	mov	rax, QWORD PTR [rcx+8]
	cmp	rcx, QWORD PTR [rax+16]
	jne	SHORT $LN170@Insert@3
	mov	QWORD PTR [rax+16], r8
	jmp	SHORT $LN169@Insert@3
$LN170@Insert@3:
	mov	QWORD PTR [rax], r8
$LN169@Insert@3:
	mov	QWORD PTR [r8+16], rcx
	mov	QWORD PTR [rcx+8], r8

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	$LN316@Insert@3
$LN8@Insert@3:

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

	mov	r9, QWORD PTR [rcx]

; 1238 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [r9+40], 0
	jne	SHORT $LN3@Insert@3

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	BYTE PTR [rax+40], 1

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [r9+40], 1

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	rax, QWORD PTR [r8]
	mov	rdx, QWORD PTR [rax+8]

; 1244 : 					}
; 1245 : 				else

	jmp	$LN316@Insert@3
$LN3@Insert@3:

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN253@Insert@3

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	rdx, rax

; 1250 : 						_Rrotate(_Pnode);

	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN252@Insert@3
	mov	QWORD PTR [rax+8], rdx
$LN252@Insert@3:
	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN251@Insert@3
	mov	QWORD PTR [rax+8], rcx
	jmp	SHORT $LN248@Insert@3
$LN251@Insert@3:
	mov	rax, QWORD PTR [r8]
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN249@Insert@3
	mov	QWORD PTR [rax+16], rcx
	jmp	SHORT $LN248@Insert@3
$LN249@Insert@3:
	mov	QWORD PTR [rax], rcx
$LN248@Insert@3:
	mov	QWORD PTR [rcx+16], rdx
	mov	QWORD PTR [r8], rcx
$LN253@Insert@3:

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	rax, QWORD PTR [r8]
	mov	BYTE PTR [rax+40], 1

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 0

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	rax, QWORD PTR [r8]
	mov	rcx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN315@Insert@3
	mov	QWORD PTR [rax+8], rcx
$LN315@Insert@3:
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8+8], rax
	mov	rax, QWORD PTR [rsi+48]
	cmp	rcx, QWORD PTR [rax+8]
	jne	SHORT $LN314@Insert@3
	mov	QWORD PTR [rax+8], r8
	jmp	SHORT $LN311@Insert@3
$LN314@Insert@3:
	mov	rax, QWORD PTR [rcx+8]
	cmp	rcx, QWORD PTR [rax]
	jne	SHORT $LN312@Insert@3
	mov	QWORD PTR [rax], r8
	jmp	SHORT $LN311@Insert@3
$LN312@Insert@3:
	mov	QWORD PTR [rax+16], r8
$LN311@Insert@3:
	mov	QWORD PTR [r8], rcx
	mov	QWORD PTR [rcx+8], r8
$LN316@Insert@3:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	lea	r8, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+40], 0
	je	$LL10@Insert@3
$LN9@Insert@3:

; 1255 : 					}
; 1256 : 				}
; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

	mov	rax, QWORD PTR [rsi+48]
	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+40], 1

; 1259 : 		return (_TREE_ITERATOR(_Newnode));

	mov	QWORD PTR [rbp+8], r11
	mov	rax, QWORD PTR [rsi]
	mov	QWORD PTR [rbp], rax
	mov	rax, rbp

; 1260 : 		}

	lea	r11, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN383@Insert@3:
?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T176225 = 48
$T175421 = 56
$T175420 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Insert'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T175421[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Insert'::`1'::dtor$0
; Function compile flags: /Ogtpy
$T176225 = 48
$T175421 = 56
$T175420 = 96
this$ = 176
__$ReturnUdt$ = 184
_Addleft$ = 192
_Wherenode$ = 200
_Val$ = 208
?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Insert'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T175420[rbp]
	call	QWORD PTR __imp_??1exception@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Insert'::`1'::dtor$2
text$x	ENDS
PUBLIC	$T176253
PUBLIC	$T176254
PUBLIC	$T176534
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEBK@Z DD imagerel $LN75
	DD	imagerel $LN75+308
	DD	imagerel $unwind$?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEBK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEBK@Z DD 0a1801H
	DD	0126418H
	DD	0115418H
	DD	0103418H
	DD	0d014b218H
	DD	07010c012H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEBK@Z
_TEXT	SEGMENT
$T176534 = 32
$T176254 = 32
$T176253 = 48
$T176250 = 64
_Where$ = 64
this$ = 128
_Keyval$ = 136
?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEBK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::erase, COMDAT

; 949  : 		{	// erase and count all that match _Keyval

$LN75:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 96					; 00000060H

; 950  : 		_Pairii _Where = equal_range(_Keyval);

	mov	r8, rdx
	lea	rdx, QWORD PTR _Where$[rsp]
	mov	r13, rcx
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Eqrange

; 951  : 		size_type _Num = 0;
; 952  : 		_Distance(_Where.first, _Where.second, _Num);

	mov	rbp, QWORD PTR _Where$[rsp+24]
	mov	r12, QWORD PTR _Where$[rsp+16]
	lea	rcx, QWORD PTR _Where$[rsp]
	lea	rdx, QWORD PTR $T176534[rsp]
	xor	esi, esi
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rdi, QWORD PTR $T176534[rsp]
	mov	rbx, QWORD PTR $T176534[rsp+8]
$LL20@erase@7:
	test	rdi, rdi
	je	SHORT $LN61@erase@7
	cmp	rdi, r12
	je	SHORT $LN60@erase@7
$LN61@erase@7:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN60@erase@7:
	cmp	rbx, rbp
	je	SHORT $LN9@erase@7
	inc	rsi
	test	rdi, rdi
	jne	SHORT $LN26@erase@7
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN26@erase@7:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN23@erase@7
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL20@erase@7
$LN23@erase@7:
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN71@erase@7
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LL20@erase@7
	npad	3
$LL41@erase@7:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL41@erase@7
	jmp	SHORT $LL20@erase@7
$LN71@erase@7:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN74@erase@7
$LL19@erase@7:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN74@erase@7
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL19@erase@7
$LN74@erase@7:
	mov	rbx, rax
	jmp	SHORT $LL20@erase@7
$LN9@erase@7:

; 953  : 		erase(_Where.first, _Where.second);

	lea	rax, QWORD PTR _Where$[rsp+16]
	lea	rdx, QWORD PTR $T176254[rsp]
	lea	r9, QWORD PTR $T176254[rsp]
	mov	rcx, QWORD PTR [rax]
	lea	r8, QWORD PTR $T176253[rsp]
	mov	QWORD PTR [rdx], rcx
	mov	rcx, QWORD PTR [rax+8]
	lea	rax, QWORD PTR _Where$[rsp]
	mov	QWORD PTR [rdx+8], rcx
	mov	rcx, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T176253[rsp]
	mov	QWORD PTR [rdx], rcx
	mov	rcx, QWORD PTR [rax+8]
	mov	QWORD PTR [rdx+8], rcx
	lea	rdx, QWORD PTR $T176250[rsp]
	mov	rcx, r13
	call	?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::erase

; 954  : 		return (_Num);
; 955  : 		}

	lea	r11, QWORD PTR [rsp+96]
	mov	rax, rsi
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEBK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::erase
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
pdata	SEGMENT
$pdata$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN164+124
	DD	imagerel $LN164+158
	DD	imagerel $chain$0$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN164+158
	DD	imagerel $LN164+430
	DD	imagerel $chain$1$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 021H
	DD	imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 020521H
	DD	0ed405H
	DD	imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 0a1601H
	DD	0105416H
	DD	0f3416H
	DD	0f0127216H
	DD	0c00ee010H
	DD	0600b700cH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T176631 = 48
_Where$121990 = 48
this$ = 112
__$ReturnUdt$ = 120
_Val$ = 128
?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert, COMDAT

; 630  : 		{	// try to insert node with value _Val

$LN164:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	rdi, QWORD PTR [rcx+48]
	mov	r14, r8
	mov	r12, rdx
	mov	rax, QWORD PTR [rdi+8]
	mov	r15, rcx

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	bpl, 1

; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN9@insert
	mov	r9d, DWORD PTR [r8]
	npad	13
$LL10@insert:

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;
; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,

	cmp	r9d, DWORD PTR [rax+24]
	mov	rdi, rax
	setb	bpl

; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	test	bpl, bpl
	je	SHORT $LN13@insert
	mov	rax, QWORD PTR [rax]
	jmp	SHORT $LN14@insert
$LN13@insert:
	mov	rax, QWORD PTR [rax+16]
$LN14@insert:

; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL10@insert
$LN9@insert:

; 640  : 			}
; 641  : 
; 642  : 		if (this->_Multi)
; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 644  : 		else
; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

	mov	rsi, QWORD PTR [rcx]
	mov	rbx, rdi
	mov	QWORD PTR _Where$121990[rsp], rsi
	mov	QWORD PTR _Where$121990[rsp+8], rbx

; 647  : 			if (!_Addleft)

	test	bpl, bpl
	je	$LN92@insert

; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())

	mov	rax, QWORD PTR [rcx+48]
	mov	QWORD PTR [rsp+112], r13
	mov	r13, QWORD PTR [rax]
	test	rsi, rsi
	je	SHORT $LN78@insert
	cmp	rsi, rsi
	je	SHORT $LN77@insert
$LN78@insert:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN77@insert:
	cmp	rdi, r13
	mov	r13, QWORD PTR [rsp+112]
	jne	SHORT $LN4@insert

; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

	mov	QWORD PTR [rsp+32], r14
	mov	r9, rdi
	mov	r8b, 1
$LN162@insert:
	lea	rdx, QWORD PTR $T176631[rsp]
	mov	rcx, r15
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
	mov	BYTE PTR [r12+16], 1
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [r12], rcx
	jmp	$LN163@insert
$LN4@insert:

; 651  : 			else
; 652  : 				--_Where;	// need to test if insert before is okay

	test	rsi, rsi
	jne	SHORT $LN103@insert
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN103@insert:
	cmp	BYTE PTR [rdi+41], 0
	je	SHORT $LN100@insert
	mov	rbx, QWORD PTR [rdi+16]
	mov	QWORD PTR _Where$121990[rsp+8], rbx
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN92@insert
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN92@insert
$LN100@insert:
	mov	rax, QWORD PTR [rdi]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN157@insert
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN121@insert
	npad	6
$LL122@insert:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL122@insert
$LN121@insert:
	mov	QWORD PTR _Where$121990[rsp+8], rbx
	jmp	SHORT $LN92@insert
$LN157@insert:
	mov	rax, QWORD PTR [rdi+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN161@insert
	npad	2
$LL95@insert:
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN161@insert
	mov	rbx, rax
	mov	QWORD PTR _Where$121990[rsp+8], rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL95@insert
$LN161@insert:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN93@insert
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN92@insert
$LN93@insert:
	mov	rbx, rax
	mov	QWORD PTR _Where$121990[rsp+8], rax
$LN92@insert:

; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,

	mov	eax, DWORD PTR [r14]
	cmp	DWORD PTR [rbx+24], eax
	jae	SHORT $LN2@insert

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	QWORD PTR [rsp+32], r14
	mov	r9, rdi
	movzx	r8d, bpl
	jmp	$LN162@insert
$LN2@insert:

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	lea	rcx, QWORD PTR _Where$121990[rsp]
	mov	BYTE PTR [r12+16], 0
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r12], rax
	mov	rax, QWORD PTR [rcx+8]
$LN163@insert:

; 659  : 			}
; 660  : 		}

	mov	rbx, QWORD PTR [rsp+120]
	mov	rbp, QWORD PTR [rsp+128]
	mov	QWORD PTR [r12+8], rax
	mov	rax, r12
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD imagerel $LN81
	DD	imagerel $LN81+103
	DD	imagerel $unwind$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$1@?0???0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD imagerel ??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ+47
	DD	00H
	DD	imagerel ??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
xdata	ENDS
;	COMDAT ??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
_TEXT	SEGMENT
$T177531 = 32
this$ = 64
??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ PROC ; std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >, COMDAT

; 103  : 		{	// construct empty map from defaults

$LN81:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T177531[rsp], -2
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN33@map
	mov	QWORD PTR [rax], rbx
	jmp	SHORT $LN34@map
$LN33@map:
	xor	eax, eax
$LN34@map:
	mov	QWORD PTR [rbx], rax
	mov	rcx, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax
	mov	BYTE PTR [rax+41], 1
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax
	mov	QWORD PTR [rbx+56], 0

; 104  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ ENDP ; std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T177531 = 32
this$ = 64
?dtor$1@?0???0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA PROC ; `std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA ENDP ; `std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >'::`1'::dtor$1
text$x	ENDS
PUBLIC	$T177557
PUBLIC	$T177558
PUBLIC	$T177839
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEB_K@Z DD imagerel $LN75
	DD	imagerel $LN75+308
	DD	imagerel $unwind$?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEB_K@Z DD 0a1801H
	DD	0126418H
	DD	0115418H
	DD	0103418H
	DD	0d014b218H
	DD	07010c012H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEB_K@Z
_TEXT	SEGMENT
$T177839 = 32
$T177558 = 32
$T177557 = 48
$T177554 = 64
_Where$ = 64
this$ = 128
_Keyval$ = 136
?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::erase, COMDAT

; 949  : 		{	// erase and count all that match _Keyval

$LN75:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 96					; 00000060H

; 950  : 		_Pairii _Where = equal_range(_Keyval);

	mov	r8, rdx
	lea	rdx, QWORD PTR _Where$[rsp]
	mov	r13, rcx
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@V123@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Eqrange

; 951  : 		size_type _Num = 0;
; 952  : 		_Distance(_Where.first, _Where.second, _Num);

	mov	rbp, QWORD PTR _Where$[rsp+24]
	mov	r12, QWORD PTR _Where$[rsp+16]
	lea	rcx, QWORD PTR _Where$[rsp]
	lea	rdx, QWORD PTR $T177839[rsp]
	xor	esi, esi
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rdi, QWORD PTR $T177839[rsp]
	mov	rbx, QWORD PTR $T177839[rsp+8]
$LL20@erase@8:
	test	rdi, rdi
	je	SHORT $LN61@erase@8
	cmp	rdi, r12
	je	SHORT $LN60@erase@8
$LN61@erase@8:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN60@erase@8:
	cmp	rbx, rbp
	je	SHORT $LN9@erase@8
	inc	rsi
	test	rdi, rdi
	jne	SHORT $LN26@erase@8
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN26@erase@8:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN23@erase@8
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL20@erase@8
$LN23@erase@8:
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN71@erase@8
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LL20@erase@8
	npad	3
$LL41@erase@8:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL41@erase@8
	jmp	SHORT $LL20@erase@8
$LN71@erase@8:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN74@erase@8
$LL19@erase@8:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN74@erase@8
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL19@erase@8
$LN74@erase@8:
	mov	rbx, rax
	jmp	SHORT $LL20@erase@8
$LN9@erase@8:

; 953  : 		erase(_Where.first, _Where.second);

	lea	rax, QWORD PTR _Where$[rsp+16]
	lea	rdx, QWORD PTR $T177558[rsp]
	lea	r9, QWORD PTR $T177558[rsp]
	mov	rcx, QWORD PTR [rax]
	lea	r8, QWORD PTR $T177557[rsp]
	mov	QWORD PTR [rdx], rcx
	mov	rcx, QWORD PTR [rax+8]
	lea	rax, QWORD PTR _Where$[rsp]
	mov	QWORD PTR [rdx+8], rcx
	mov	rcx, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T177557[rsp]
	mov	QWORD PTR [rdx], rcx
	mov	rcx, QWORD PTR [rax+8]
	mov	QWORD PTR [rdx+8], rcx
	lea	rdx, QWORD PTR $T177554[rsp]
	mov	rcx, r13
	call	?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::erase

; 954  : 		return (_Num);
; 955  : 		}

	lea	r11, QWORD PTR [rsp+96]
	mov	rax, rsi
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::erase
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
pdata	SEGMENT
$pdata$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD imagerel $LN164+124
	DD	imagerel $LN164+158
	DD	imagerel $chain$0$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD imagerel $LN164+158
	DD	imagerel $LN164+431
	DD	imagerel $chain$1$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD 021H
	DD	imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD 020521H
	DD	0ed405H
	DD	imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z DD 0a1601H
	DD	0105416H
	DD	0f3416H
	DD	0f0127216H
	DD	0c00ee010H
	DD	0600b700cH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T177935 = 48
_Where$121873 = 48
this$ = 112
__$ReturnUdt$ = 120
_Val$ = 128
?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::insert, COMDAT

; 630  : 		{	// try to insert node with value _Val

$LN164:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	rdi, QWORD PTR [rcx+48]
	mov	r14, r8
	mov	r12, rdx
	mov	rax, QWORD PTR [rdi+8]
	mov	r15, rcx

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	bpl, 1

; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN9@insert@2
	mov	r9, QWORD PTR [r8]
	npad	13
$LL10@insert@2:

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;
; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,

	cmp	r9, QWORD PTR [rax+24]
	mov	rdi, rax
	setb	bpl

; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	test	bpl, bpl
	je	SHORT $LN13@insert@2
	mov	rax, QWORD PTR [rax]
	jmp	SHORT $LN14@insert@2
$LN13@insert@2:
	mov	rax, QWORD PTR [rax+16]
$LN14@insert@2:

; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL10@insert@2
$LN9@insert@2:

; 640  : 			}
; 641  : 
; 642  : 		if (this->_Multi)
; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 644  : 		else
; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

	mov	rsi, QWORD PTR [rcx]
	mov	rbx, rdi
	mov	QWORD PTR _Where$121873[rsp], rsi
	mov	QWORD PTR _Where$121873[rsp+8], rbx

; 647  : 			if (!_Addleft)

	test	bpl, bpl
	je	$LN92@insert@2

; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())

	mov	rax, QWORD PTR [rcx+48]
	mov	QWORD PTR [rsp+112], r13
	mov	r13, QWORD PTR [rax]
	test	rsi, rsi
	je	SHORT $LN78@insert@2
	cmp	rsi, rsi
	je	SHORT $LN77@insert@2
$LN78@insert@2:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN77@insert@2:
	cmp	rdi, r13
	mov	r13, QWORD PTR [rsp+112]
	jne	SHORT $LN4@insert@2

; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

	mov	QWORD PTR [rsp+32], r14
	mov	r9, rdi
	mov	r8b, 1
$LN162@insert@2:
	lea	rdx, QWORD PTR $T177935[rsp]
	mov	rcx, r15
	call	?_Insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Insert
	mov	BYTE PTR [r12+16], 1
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [r12], rcx
	jmp	$LN163@insert@2
$LN4@insert@2:

; 651  : 			else
; 652  : 				--_Where;	// need to test if insert before is okay

	test	rsi, rsi
	jne	SHORT $LN103@insert@2
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN103@insert@2:
	cmp	BYTE PTR [rdi+41], 0
	je	SHORT $LN100@insert@2
	mov	rbx, QWORD PTR [rdi+16]
	mov	QWORD PTR _Where$121873[rsp+8], rbx
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN92@insert@2
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN92@insert@2
$LN100@insert@2:
	mov	rax, QWORD PTR [rdi]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN157@insert@2
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN121@insert@2
	npad	6
$LL122@insert@2:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL122@insert@2
$LN121@insert@2:
	mov	QWORD PTR _Where$121873[rsp+8], rbx
	jmp	SHORT $LN92@insert@2
$LN157@insert@2:
	mov	rax, QWORD PTR [rdi+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN161@insert@2
	npad	2
$LL95@insert@2:
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN161@insert@2
	mov	rbx, rax
	mov	QWORD PTR _Where$121873[rsp+8], rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL95@insert@2
$LN161@insert@2:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN93@insert@2
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN92@insert@2
$LN93@insert@2:
	mov	rbx, rax
	mov	QWORD PTR _Where$121873[rsp+8], rax
$LN92@insert@2:

; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,

	mov	rax, QWORD PTR [r14]
	cmp	QWORD PTR [rbx+24], rax
	jae	SHORT $LN2@insert@2

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	QWORD PTR [rsp+32], r14
	mov	r9, rdi
	movzx	r8d, bpl
	jmp	$LN162@insert@2
$LN2@insert@2:

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	lea	rcx, QWORD PTR _Where$121873[rsp]
	mov	BYTE PTR [r12+16], 0
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r12], rax
	mov	rax, QWORD PTR [rcx+8]
$LN163@insert@2:

; 659  : 			}
; 660  : 		}

	mov	rbx, QWORD PTR [rsp+120]
	mov	rbp, QWORD PTR [rsp+128]
	mov	QWORD PTR [r12+8], rax
	mov	rax, r12
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::insert
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD imagerel $LN81
	DD	imagerel $LN81+103
	DD	imagerel $unwind$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$1@?0???0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD imagerel ??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ+47
	DD	00H
	DD	imagerel ??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
xdata	ENDS
;	COMDAT ??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
_TEXT	SEGMENT
$T178835 = 32
this$ = 64
??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ PROC ; std::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >, COMDAT

; 103  : 		{	// construct empty map from defaults

$LN81:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T178835[rsp], -2
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN33@map@2
	mov	QWORD PTR [rax], rbx
	jmp	SHORT $LN34@map@2
$LN33@map@2:
	xor	eax, eax
$LN34@map@2:
	mov	QWORD PTR [rbx], rax
	mov	rcx, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax
	mov	BYTE PTR [rax+41], 1
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax
	mov	QWORD PTR [rbx+56], 0

; 104  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ ENDP ; std::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T178835 = 32
this$ = 64
?dtor$1@?0???0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA PROC ; `std::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ@4HA ENDP ; `std::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >::map<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> > >'::`1'::dtor$1
text$x	ENDS
PUBLIC	$T178861
PUBLIC	$T178862
PUBLIC	$T179143
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA_KAEB_K@Z DD imagerel $LN75
	DD	imagerel $LN75+308
	DD	imagerel $unwind$?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA_KAEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA_KAEB_K@Z DD 0a1801H
	DD	0126418H
	DD	0115418H
	DD	0103418H
	DD	0d014b218H
	DD	07010c012H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA_KAEB_K@Z
_TEXT	SEGMENT
$T179143 = 32
$T178862 = 32
$T178861 = 48
$T178858 = 64
_Where$ = 64
this$ = 128
_Keyval$ = 136
?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA_KAEB_K@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::erase, COMDAT

; 949  : 		{	// erase and count all that match _Keyval

$LN75:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 96					; 00000060H

; 950  : 		_Pairii _Where = equal_range(_Keyval);

	mov	r8, rdx
	lea	rdx, QWORD PTR _Where$[rsp]
	mov	r13, rcx
	call	?_Eqrange@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@V123@@2@AEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Eqrange

; 951  : 		size_type _Num = 0;
; 952  : 		_Distance(_Where.first, _Where.second, _Num);

	mov	rbp, QWORD PTR _Where$[rsp+24]
	mov	r12, QWORD PTR _Where$[rsp+16]
	lea	rcx, QWORD PTR _Where$[rsp]
	lea	rdx, QWORD PTR $T179143[rsp]
	xor	esi, esi
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rdi, QWORD PTR $T179143[rsp]
	mov	rbx, QWORD PTR $T179143[rsp+8]
$LL20@erase@9:
	test	rdi, rdi
	je	SHORT $LN61@erase@9
	cmp	rdi, r12
	je	SHORT $LN60@erase@9
$LN61@erase@9:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN60@erase@9:
	cmp	rbx, rbp
	je	SHORT $LN9@erase@9
	inc	rsi
	test	rdi, rdi
	jne	SHORT $LN26@erase@9
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN26@erase@9:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN23@erase@9
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LL20@erase@9
$LN23@erase@9:
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN71@erase@9
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LL20@erase@9
	npad	3
$LL41@erase@9:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL41@erase@9
	jmp	SHORT $LL20@erase@9
$LN71@erase@9:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN74@erase@9
$LL19@erase@9:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN74@erase@9
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL19@erase@9
$LN74@erase@9:
	mov	rbx, rax
	jmp	SHORT $LL20@erase@9
$LN9@erase@9:

; 953  : 		erase(_Where.first, _Where.second);

	lea	rax, QWORD PTR _Where$[rsp+16]
	lea	rdx, QWORD PTR $T178862[rsp]
	lea	r9, QWORD PTR $T178862[rsp]
	mov	rcx, QWORD PTR [rax]
	lea	r8, QWORD PTR $T178861[rsp]
	mov	QWORD PTR [rdx], rcx
	mov	rcx, QWORD PTR [rax+8]
	lea	rax, QWORD PTR _Where$[rsp]
	mov	QWORD PTR [rdx+8], rcx
	mov	rcx, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T178861[rsp]
	mov	QWORD PTR [rdx], rcx
	mov	rcx, QWORD PTR [rax+8]
	mov	QWORD PTR [rdx+8], rcx
	lea	rdx, QWORD PTR $T178858[rsp]
	mov	rcx, r13
	call	?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::erase

; 954  : 		return (_Num);
; 955  : 		}

	lea	r11, QWORD PTR [rsp+96]
	mov	rax, rsi
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA_KAEB_K@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::erase
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\utility
pdata	SEGMENT
$pdata$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z DD imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z DD imagerel $LN164+124
	DD	imagerel $LN164+158
	DD	imagerel $chain$0$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z DD imagerel $LN164+158
	DD	imagerel $LN164+431
	DD	imagerel $chain$1$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z DD 021H
	DD	imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z DD 020521H
	DD	0ed405H
	DD	imagerel $LN164
	DD	imagerel $LN164+124
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z DD 0a1601H
	DD	0105416H
	DD	0f3416H
	DD	0f0127216H
	DD	0c00ee010H
	DD	0600b700cH
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
xdata	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z
_TEXT	SEGMENT
$T179239 = 48
_Where$121767 = 48
this$ = 112
__$ReturnUdt$ = 120
_Val$ = 128
?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::insert, COMDAT

; 630  : 		{	// try to insert node with value _Val

$LN164:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	rdi, QWORD PTR [rcx+48]
	mov	r14, r8
	mov	r12, rdx
	mov	rax, QWORD PTR [rdi+8]
	mov	r15, rcx

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty

	mov	bpl, 1

; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN9@insert@3
	mov	r9, QWORD PTR [r8]
	npad	13
$LL10@insert@3:

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;
; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,

	cmp	r9, QWORD PTR [rax+24]
	mov	rdi, rax
	setb	bpl

; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	test	bpl, bpl
	je	SHORT $LN13@insert@3
	mov	rax, QWORD PTR [rax]
	jmp	SHORT $LN14@insert@3
$LN13@insert@3:
	mov	rax, QWORD PTR [rax+16]
$LN14@insert@3:

; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL10@insert@3
$LN9@insert@3:

; 640  : 			}
; 641  : 
; 642  : 		if (this->_Multi)
; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 644  : 		else
; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);

	mov	rsi, QWORD PTR [rcx]
	mov	rbx, rdi
	mov	QWORD PTR _Where$121767[rsp], rsi
	mov	QWORD PTR _Where$121767[rsp+8], rbx

; 647  : 			if (!_Addleft)

	test	bpl, bpl
	je	$LN92@insert@3

; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())

	mov	rax, QWORD PTR [rcx+48]
	mov	QWORD PTR [rsp+112], r13
	mov	r13, QWORD PTR [rax]
	test	rsi, rsi
	je	SHORT $LN78@insert@3
	cmp	rsi, rsi
	je	SHORT $LN77@insert@3
$LN78@insert@3:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN77@insert@3:
	cmp	rdi, r13
	mov	r13, QWORD PTR [rsp+112]
	jne	SHORT $LN4@insert@3

; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

	mov	QWORD PTR [rsp+32], r14
	mov	r9, rdi
	mov	r8b, 1
$LN162@insert@3:
	lea	rdx, QWORD PTR $T179239[rsp]
	mov	rcx, r15
	call	?_Insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@AEBU?$pair@$$CB_KH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Insert
	mov	BYTE PTR [r12+16], 1
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [r12], rcx
	jmp	$LN163@insert@3
$LN4@insert@3:

; 651  : 			else
; 652  : 				--_Where;	// need to test if insert before is okay

	test	rsi, rsi
	jne	SHORT $LN103@insert@3
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN103@insert@3:
	cmp	BYTE PTR [rdi+41], 0
	je	SHORT $LN100@insert@3
	mov	rbx, QWORD PTR [rdi+16]
	mov	QWORD PTR _Where$121767[rsp+8], rbx
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN92@insert@3
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN92@insert@3
$LN100@insert@3:
	mov	rax, QWORD PTR [rdi]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN157@insert@3
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN121@insert@3
	npad	6
$LL122@insert@3:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL122@insert@3
$LN121@insert@3:
	mov	QWORD PTR _Where$121767[rsp+8], rbx
	jmp	SHORT $LN92@insert@3
$LN157@insert@3:
	mov	rax, QWORD PTR [rdi+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN161@insert@3
	npad	2
$LL95@insert@3:
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN161@insert@3
	mov	rbx, rax
	mov	QWORD PTR _Where$121767[rsp+8], rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL95@insert@3
$LN161@insert@3:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN93@insert@3
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN92@insert@3
$LN93@insert@3:
	mov	rbx, rax
	mov	QWORD PTR _Where$121767[rsp+8], rax
$LN92@insert@3:

; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,

	mov	rax, QWORD PTR [r14]
	cmp	QWORD PTR [rbx+24], rax
	jae	SHORT $LN2@insert@3

; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	QWORD PTR [rsp+32], r14
	mov	r9, rdi
	movzx	r8d, bpl
	jmp	$LN162@insert@3
$LN2@insert@3:

; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));

	lea	rcx, QWORD PTR _Where$121767[rsp]
	mov	BYTE PTR [r12+16], 0
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [r12], rax
	mov	rax, QWORD PTR [rcx+8]
$LN163@insert@3:

; 659  : 			}
; 660  : 		}

	mov	rbx, QWORD PTR [rsp+120]
	mov	rbp, QWORD PTR [rsp+128]
	mov	QWORD PTR [r12+8], rax
	mov	rax, r12
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::insert
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ DD imagerel $LN81
	DD	imagerel $LN81+103
	DD	imagerel $unwind$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$1@?0???0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ DD imagerel ??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ+47
	DD	00H
	DD	imagerel ??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ@4HA
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
xdata	ENDS
;	COMDAT ??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T180139 = 32
this$ = 64
??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ PROC ; std::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >, COMDAT

; 103  : 		{	// construct empty map from defaults

$LN81:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T180139[rsp], -2
	mov	rbx, rcx
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN33@map@3
	mov	QWORD PTR [rax], rbx
	jmp	SHORT $LN34@map@3
$LN33@map@3:
	xor	eax, eax
$LN34@map@3:
	mov	QWORD PTR [rbx], rax
	mov	rcx, rbx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
	mov	QWORD PTR [rbx+48], rax
	mov	BYTE PTR [rax+41], 1
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+8], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR [rbx+48]
	mov	QWORD PTR [rax+16], rax
	mov	QWORD PTR [rbx+56], 0

; 104  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ ENDP ; std::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T180139 = 32
this$ = 64
?dtor$1@?0???0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ@4HA PROC ; `std::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ@4HA ENDP ; `std::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >::map<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
pdata	SEGMENT
$pdata$?ThreadDestroyed@CProfiler@@UEAAJ_K@Z DD imagerel $LN175
	DD	imagerel $LN175+368
	DD	imagerel $unwind$?ThreadDestroyed@CProfiler@@UEAAJ_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ThreadDestroyed@CProfiler@@UEAAJ_K@Z DD 0a1d01H
	DD	011641dH
	DD	010541dH
	DD	0e341dH
	DD	0d019921dH
	DD	07015c017H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?ThreadDestroyed@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
_Where$180534 = 32
$T180614 = 48
it$ = 64
this$ = 112
threadID$ = 120
?ThreadDestroyed@CProfiler@@UEAAJ_K@Z PROC		; CProfiler::ThreadDestroyed, COMDAT

; 482  : {

$LN175:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+16], rdx
	push	rdi
	push	r12
	push	r13
	sub	rsp, 80					; 00000050H
	mov	r13, rcx

; 483  : 	this->threadMapCriticalSection.Enter();

	add	rcx, 160				; 000000a0H
	mov	rdi, rdx
	call	QWORD PTR __imp_EnterCriticalSection

; 484  : 	DebugWriteLine(L"ThreadDestroyed %d", threadID);
; 485  : 	
; 486  : 	TThreadIDMap::iterator it = this->threadIDMap.find(threadID);

	mov	rbx, QWORD PTR [r13+328]
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN16@ThreadDest
$LL17@ThreadDest:
	cmp	QWORD PTR [rax+24], rdi
	jae	SHORT $LN15@ThreadDest
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN14@ThreadDest
$LN15@ThreadDest:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN14@ThreadDest:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL17@ThreadDest
$LN16@ThreadDest:
	mov	rax, QWORD PTR [r13+280]
	mov	rsi, QWORD PTR [r13+328]
	mov	QWORD PTR _Where$180534[rsp+8], rbx
	mov	QWORD PTR _Where$180534[rsp], rax
	test	rax, rax
	je	SHORT $LN75@ThreadDest
	cmp	rax, rax
	je	SHORT $LN74@ThreadDest
$LN75@ThreadDest:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN74@ThreadDest:
	cmp	rbx, rsi
	je	SHORT $LN10@ThreadDest
	cmp	rdi, QWORD PTR [rbx+24]
	jb	SHORT $LN10@ThreadDest
	lea	rcx, QWORD PTR _Where$180534[rsp]
	jmp	SHORT $LN11@ThreadDest
$LN10@ThreadDest:
	mov	rax, QWORD PTR [r13+328]
	lea	rcx, QWORD PTR $T180614[rsp]
	mov	QWORD PTR $T180614[rsp+8], rax
	mov	rax, QWORD PTR [r13+280]
	mov	QWORD PTR $T180614[rsp], rax
$LN11@ThreadDest:
	mov	rax, QWORD PTR [rcx]

; 487  : 	
; 488  : 	if (it != this->threadIDMap.end()) {

	mov	rsi, QWORD PTR [r13+328]
	lea	rdx, QWORD PTR it$[rsp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rdi, QWORD PTR it$[rsp]
	test	rdi, rdi
	je	SHORT $LN134@ThreadDest
	cmp	rdi, QWORD PTR [r13+280]
	je	SHORT $LN133@ThreadDest
$LN134@ThreadDest:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN133@ThreadDest:
	mov	rbx, QWORD PTR it$[rsp+8]
	cmp	rbx, rsi
	je	SHORT $LN4@ThreadDest

; 489  : 		ThreadInfo *data = it->second;

	test	rdi, rdi
	jne	SHORT $LN174@ThreadDest
	call	QWORD PTR __imp__invalid_parameter_noinfo
	xor	r11d, r11d
	jmp	SHORT $LN161@ThreadDest
$LN174@ThreadDest:
	mov	r11, QWORD PTR [rdi]
$LN161@ThreadDest:
	cmp	rbx, QWORD PTR [r11+48]
	jne	SHORT $LN148@ThreadDest
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN148@ThreadDest:
	mov	rbx, QWORD PTR [rbx+32]

; 490  : 		
; 491  : 		this->unmanagedThreadIDMap.erase(data->unmanagedThreadId);

	lea	rcx, QWORD PTR [r13+344]
	mov	rdx, rbx
	call	?erase@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEBK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::erase

; 492  : 		this->threadIDMap.erase(threadID);

	lea	rdx, QWORD PTR threadID$[rsp]
	lea	rcx, QWORD PTR [r13+280]
	call	?erase@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA_KAEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::erase

; 493  : 		
; 494  : 		delete data;

	test	rbx, rbx
	je	SHORT $LN4@ThreadDest
	lea	rcx, QWORD PTR [rbx+16]
	call	QWORD PTR __imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	mov	rcx, rbx
	call	??3@YAXPEAX@Z				; operator delete
$LN4@ThreadDest:

; 495  : 	}
; 496  : 	
; 497  : 	this->threadMapCriticalSection.Leave();

	lea	rcx, QWORD PTR [r13+160]
	call	QWORD PTR __imp_LeaveCriticalSection

; 498  : 	return S_OK;
; 499  : }

	lea	r11, QWORD PTR [rsp+80]
	xor	eax, eax
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?ThreadDestroyed@CProfiler@@UEAAJ_K@Z ENDP		; CProfiler::ThreadDestroyed
_TEXT	ENDS
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
pdata	SEGMENT
$pdata$?ThreadCreated@CProfiler@@UEAAJ_K@Z DD imagerel $LN150
	DD	imagerel $LN150+354
	DD	imagerel $unwind$?ThreadCreated@CProfiler@@UEAAJ_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ThreadCreated@CProfiler@@UEAAJ_K@Z DD 0a1a01H
	DD	011741aH
	DD	010641aH
	DD	0f541aH
	DD	0e341aH
	DD	0c016b21aH
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?ThreadCreated@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
_Where$181197 = 32
$T181202 = 48
$T180853 = 48
$T180851 = 72
it$ = 72
this$ = 112
threadID$ = 120
?ThreadCreated@CProfiler@@UEAAJ_K@Z PROC		; CProfiler::ThreadCreated, COMDAT

; 461  : {

$LN150:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 96					; 00000060H

; 462  : 	this->threadMapCriticalSection.Enter();

	lea	r12, QWORD PTR [rcx+160]
	mov	rbp, rcx
	mov	rdi, rdx
	mov	rcx, r12
	call	QWORD PTR __imp_EnterCriticalSection

; 463  : 	DebugWriteLine(L"ThreadCreated %d", threadID);
; 464  : 	
; 465  : 	TThreadIDMap::iterator it = this->threadIDMap.find(threadID);

	mov	rbx, QWORD PTR [rbp+328]
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN17@ThreadCrea
$LL18@ThreadCrea:
	cmp	QWORD PTR [rax+24], rdi
	jae	SHORT $LN16@ThreadCrea
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN15@ThreadCrea
$LN16@ThreadCrea:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN15@ThreadCrea:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL18@ThreadCrea
$LN17@ThreadCrea:
	mov	rax, QWORD PTR [rbp+280]
	mov	rsi, QWORD PTR [rbp+328]
	mov	QWORD PTR _Where$181197[rsp+8], rbx
	mov	QWORD PTR _Where$181197[rsp], rax
	test	rax, rax
	je	SHORT $LN76@ThreadCrea
	cmp	rax, rax
	je	SHORT $LN75@ThreadCrea
$LN76@ThreadCrea:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN75@ThreadCrea:
	cmp	rbx, rsi
	je	SHORT $LN11@ThreadCrea
	cmp	rdi, QWORD PTR [rbx+24]
	jb	SHORT $LN11@ThreadCrea
	lea	rcx, QWORD PTR _Where$181197[rsp]
	jmp	SHORT $LN12@ThreadCrea
$LN11@ThreadCrea:
	mov	rax, QWORD PTR [rbp+328]
	lea	rcx, QWORD PTR $T181202[rsp]
	mov	QWORD PTR $T181202[rsp+8], rax
	mov	rax, QWORD PTR [rbp+280]
	mov	QWORD PTR $T181202[rsp], rax
$LN12@ThreadCrea:
	mov	rax, QWORD PTR [rcx]

; 466  : 	
; 467  : 	if (it == this->threadIDMap.end()) {

	mov	rbx, QWORD PTR [rbp+328]
	lea	rdx, QWORD PTR it$[rsp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rax, QWORD PTR it$[rsp]
	test	rax, rax
	je	SHORT $LN133@ThreadCrea
	cmp	rax, QWORD PTR [rbp+280]
	je	SHORT $LN132@ThreadCrea
$LN133@ThreadCrea:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN132@ThreadCrea:
	cmp	QWORD PTR it$[rsp+8], rbx
	jne	SHORT $LN2@ThreadCrea

; 468  : 		ThreadInfo *data = new ThreadInfo();

	mov	ecx, 64					; 00000040H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN5@ThreadCrea
	lea	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	mov	DWORD PTR [rbx], 0
	mov	QWORD PTR [rbx+8], 0
	jmp	SHORT $LN6@ThreadCrea
$LN5@ThreadCrea:
	xor	ebx, ebx
$LN6@ThreadCrea:

; 469  : 		
; 470  : 		data->managedThreadId = threadID;
; 471  : 		
; 472  : 		this->threadIDMap.insert(TThreadIDPair(threadID, data));

	lea	r8, QWORD PTR $T180851[rsp]
	lea	rdx, QWORD PTR $T180853[rsp]
	lea	rcx, QWORD PTR [rbp+280]
	mov	QWORD PTR [rbx+8], rdi
	mov	QWORD PTR $T180851[rsp], rdi
	mov	QWORD PTR $T180851[rsp+8], rbx
	call	?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::insert
$LN2@ThreadCrea:

; 473  : 	} else {
; 474  : 		DebugWriteLine(L"ThreadCreated %d - did not create thread (already exists)", threadID);
; 475  : 	}
; 476  : 	
; 477  : 	this->threadMapCriticalSection.Leave();

	mov	rcx, r12
	call	QWORD PTR __imp_LeaveCriticalSection

; 478  : 	return S_OK;
; 479  : }

	lea	r11, QWORD PTR [rsp+96]
	xor	eax, eax
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rdi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	r12
	ret	0
?ThreadCreated@CProfiler@@UEAAJ_K@Z ENDP		; CProfiler::ThreadCreated
_TEXT	ENDS
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
pdata	SEGMENT
$pdata$?FunctionUnloadStarted@CProfiler@@UEAAJ_K@Z DD imagerel $LN7
	DD	imagerel $LN7+68
	DD	imagerel $unwind$?FunctionUnloadStarted@CProfiler@@UEAAJ_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FunctionUnloadStarted@CProfiler@@UEAAJ_K@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?FunctionUnloadStarted@CProfiler@@UEAAJ_K@Z
_TEXT	SEGMENT
this$ = 48
functionID$ = 56
?FunctionUnloadStarted@CProfiler@@UEAAJ_K@Z PROC	; CProfiler::FunctionUnloadStarted, COMDAT

; 451  : {

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rdx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 452  : 	mapFunctionCriticalSection.Enter();

	add	rcx, 120				; 00000078H
	call	QWORD PTR __imp_EnterCriticalSection

; 453  : 	DebugWriteLine(L"FunctionUnloadStarted %d", functionID);
; 454  : 	
; 455  : 	this->functionIDMap.erase(functionID);

	lea	rcx, QWORD PTR [rbx+216]
	lea	rdx, QWORD PTR functionID$[rsp]
	call	?erase@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA_KAEB_K@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::erase

; 456  : 	mapFunctionCriticalSection.Leave();

	lea	rcx, QWORD PTR [rbx+120]
	call	QWORD PTR __imp_LeaveCriticalSection

; 457  :     return S_OK;
; 458  : }

	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?FunctionUnloadStarted@CProfiler@@UEAAJ_K@Z ENDP	; CProfiler::FunctionUnloadStarted
_TEXT	ENDS
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
pdata	SEGMENT
$pdata$?ThreadNameChanged@CProfiler@@UEAAJ_KKQEA_W@Z DD imagerel $LN177
	DD	imagerel $LN177+455
	DD	imagerel $unwind$?ThreadNameChanged@CProfiler@@UEAAJ_KKQEA_W@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ThreadNameChanged@CProfiler@@UEAAJ_KKQEA_W@Z DD 0c1c01H
	DD	014641cH
	DD	013541cH
	DD	012341cH
	DD	0f018b21cH
	DD	0d014e016H
	DD	07010c012H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?ThreadNameChanged@CProfiler@@UEAAJ_KKQEA_W@Z
_TEXT	SEGMENT
_Where$181799 = 32
$T181804 = 48
$T181455 = 48
$T181453 = 72
it$ = 72
this$ = 144
threadID$ = 152
cchName$ = 160
name$ = 168
?ThreadNameChanged@CProfiler@@UEAAJ_KKQEA_W@Z PROC	; CProfiler::ThreadNameChanged, COMDAT

; 421  : {

$LN177:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 96					; 00000060H

; 422  : 	this->threadMapCriticalSection.Enter();

	lea	r13, QWORD PTR [rcx+160]
	mov	r12, rcx
	mov	r14, r9
	mov	rcx, r13
	mov	r15d, r8d
	mov	rsi, rdx
	call	QWORD PTR __imp_EnterCriticalSection

; 423  : 	DebugWriteLine(L"ThreadNameChanged %d, %s", threadID, name);
; 424  : 	
; 425  : 	TThreadIDMap::iterator it = this->threadIDMap.find(threadID);

	mov	rbx, QWORD PTR [r12+328]
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN17@ThreadName
	npad	6
$LL18@ThreadName:
	cmp	QWORD PTR [rax+24], rsi
	jae	SHORT $LN16@ThreadName
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN15@ThreadName
$LN16@ThreadName:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN15@ThreadName:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL18@ThreadName
$LN17@ThreadName:
	mov	rax, QWORD PTR [r12+280]
	mov	rdi, QWORD PTR [r12+328]
	mov	QWORD PTR _Where$181799[rsp+8], rbx
	mov	QWORD PTR _Where$181799[rsp], rax
	test	rax, rax
	je	SHORT $LN76@ThreadName
	cmp	rax, rax
	je	SHORT $LN75@ThreadName
$LN76@ThreadName:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN75@ThreadName:
	cmp	rbx, rdi
	je	SHORT $LN11@ThreadName
	cmp	rsi, QWORD PTR [rbx+24]
	jb	SHORT $LN11@ThreadName
	lea	rcx, QWORD PTR _Where$181799[rsp]
	jmp	SHORT $LN12@ThreadName
$LN11@ThreadName:
	mov	rax, QWORD PTR [r12+328]
	lea	rcx, QWORD PTR $T181804[rsp]
	mov	QWORD PTR $T181804[rsp+8], rax
	mov	rax, QWORD PTR [r12+280]
	mov	QWORD PTR $T181804[rsp], rax
$LN12@ThreadName:
	mov	rax, QWORD PTR [rcx]

; 426  : 	
; 427  : 	ThreadInfo *data;
; 428  : 	
; 429  : 	if (it != this->threadIDMap.end()) {

	mov	rbp, QWORD PTR [r12+328]
	lea	rdx, QWORD PTR it$[rsp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rbx, QWORD PTR it$[rsp]
	test	rbx, rbx
	je	SHORT $LN135@ThreadName
	cmp	rbx, QWORD PTR [r12+280]
	je	SHORT $LN134@ThreadName
$LN135@ThreadName:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN134@ThreadName:
	mov	rdi, QWORD PTR it$[rsp+8]
	cmp	rdi, rbp
	je	SHORT $LN2@ThreadName

; 430  : 		DebugWriteLine(L"Thread %d, %s exists", threadID, name);
; 431  : 		data = it->second;

	test	rbx, rbx
	jne	SHORT $LN176@ThreadName
	call	QWORD PTR __imp__invalid_parameter_noinfo
	xor	r11d, r11d
	jmp	SHORT $LN162@ThreadName
$LN176@ThreadName:
	mov	r11, QWORD PTR [rbx]
$LN162@ThreadName:
	cmp	rdi, QWORD PTR [r11+48]
	jne	SHORT $LN149@ThreadName
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN149@ThreadName:
	mov	rcx, QWORD PTR [rdi+32]

; 432  : 		
; 433  : 		data->managedThreadId = threadID;
; 434  : 		data->threadName.assign(name, cchName);

	mov	r8, r15
	mov	rdx, r14
	mov	QWORD PTR [rcx+8], rsi
	add	rcx, 16
	call	QWORD PTR __imp_?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z

; 435  : 	} else {

	jmp	SHORT $LN1@ThreadName
$LN2@ThreadName:

; 436  : 		DebugWriteLine(L"Thread %d, %s does not exist", threadID, name);
; 437  : 		data = new ThreadInfo();

	mov	ecx, 64					; 00000040H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN5@ThreadName
	lea	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	xor	r11d, r11d
	mov	DWORD PTR [rbx], r11d
	mov	QWORD PTR [rbx+8], r11
	jmp	SHORT $LN6@ThreadName
$LN5@ThreadName:
	xor	r11d, r11d
	mov	rbx, r11
$LN6@ThreadName:

; 438  : 		
; 439  : 		data->managedThreadId = threadID;
; 440  : 		data->threadName.assign(name, cchName);

	lea	rcx, QWORD PTR [rbx+16]
	mov	r8, r15
	mov	rdx, r14
	mov	QWORD PTR [rbx+8], rsi
	call	QWORD PTR __imp_?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z

; 441  : 		
; 442  : 		this->threadIDMap.insert(TThreadIDPair(threadID, data));

	lea	r8, QWORD PTR $T181453[rsp]
	lea	rdx, QWORD PTR $T181455[rsp]
	lea	rcx, QWORD PTR [r12+280]
	mov	QWORD PTR $T181453[rsp], rsi
	mov	QWORD PTR $T181453[rsp+8], rbx
	call	?insert@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::insert
$LN1@ThreadName:

; 443  : 	}
; 444  : 			
; 445  : 	this->threadMapCriticalSection.Leave();

	mov	rcx, r13
	call	QWORD PTR __imp_LeaveCriticalSection

; 446  : 	return S_OK;
; 447  : }

	lea	r11, QWORD PTR [rsp+96]
	xor	eax, eax
	mov	rbx, QWORD PTR [r11+48]
	mov	rbp, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?ThreadNameChanged@CProfiler@@UEAAJ_KKQEA_W@Z ENDP	; CProfiler::ThreadNameChanged
_TEXT	ENDS
PUBLIC	??0CProfiler@@QEAA@XZ				; CProfiler::CProfiler
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
pdata	SEGMENT
$pdata$??0CProfiler@@QEAA@XZ DD imagerel $LN266
	DD	imagerel $LN266+589
	DD	imagerel $unwind$??0CProfiler@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CProfiler@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0CProfiler@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0CProfiler@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0CProfiler@@QEAA@XZ@4HA+31
	DD	imagerel $unwind$?dtor$3@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$8@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$8@?0???0CProfiler@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$8@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???0CProfiler@@QEAA@XZ@4HA+31
	DD	imagerel $unwind$?dtor$4@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$15@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$15@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$15@?0???0CProfiler@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$15@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???0CProfiler@@QEAA@XZ@4HA+31
	DD	imagerel $unwind$?dtor$5@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$22@?0???0CProfiler@@QEAA@XZ@4HA DD imagerel ?dtor$22@?0???0CProfiler@@QEAA@XZ@4HA
	DD	imagerel ?dtor$22@?0???0CProfiler@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$22@?0???0CProfiler@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CProfiler@@QEAA@XZ DD imagerel ??0CProfiler@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0CProfiler@@QEAA@XZ+99
	DD	00H
	DD	imagerel ??0CProfiler@@QEAA@XZ+151
	DD	01H
	DD	imagerel ??0CProfiler@@QEAA@XZ+203
	DD	02H
	DD	imagerel ??0CProfiler@@QEAA@XZ+255
	DD	03H
	DD	imagerel ??0CProfiler@@QEAA@XZ+299
	DD	04H
	DD	imagerel ??0CProfiler@@QEAA@XZ+357
	DD	05H
	DD	imagerel ??0CProfiler@@QEAA@XZ+399
	DD	06H
	DD	imagerel ??0CProfiler@@QEAA@XZ+457
	DD	07H
	DD	imagerel ??0CProfiler@@QEAA@XZ+499
	DD	08H
	DD	imagerel ??0CProfiler@@QEAA@XZ+557
	DD	07H
	DD	imagerel ??0CProfiler@@QEAA@XZ+578
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$22@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$15@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CProfiler@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CProfiler@@QEAA@XZ DD 041511H
	DD	07008520cH
	DD	030066007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CProfiler@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CProfiler@@QEAA@XZ DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$??0CProfiler@@QEAA@XZ
	DD	00H
	DD	00H
	DD	0cH
	DD	imagerel $ip2state$??0CProfiler@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CProfiler@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CProfiler@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0CProfiler@@QEAA@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0CProfiler@@QEAA@XZ@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???0CProfiler@@QEAA@XZ@4HA
	DD	03H
	DD	imagerel ?dtor$8@?0???0CProfiler@@QEAA@XZ@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0???0CProfiler@@QEAA@XZ@4HA
	DD	05H
	DD	imagerel ?dtor$15@?0???0CProfiler@@QEAA@XZ@4HA
	DD	05H
	DD	imagerel ?dtor$5@?0???0CProfiler@@QEAA@XZ@4HA
	DD	07H
	DD	imagerel ?dtor$22@?0???0CProfiler@@QEAA@XZ@4HA
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ??0CProfiler@@QEAA@XZ
_TEXT	SEGMENT
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
??0CProfiler@@QEAA@XZ PROC				; CProfiler::CProfiler, COMDAT

; 235  : {

$LN266:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T183703[rsp], -2
	lea	rsi, OFFSET FLAT:?profiler@@3VCProfiler@@A ; profiler
	mov	QWORD PTR this$[rsp], rsi
	lea	rax, OFFSET FLAT:??_7CProfiler@@6B@
	mov	QWORD PTR ?profiler@@3VCProfiler@@A, rax
	mov	edx, -2147482624			; 80000400H
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+40
	call	QWORD PTR __imp_InitializeCriticalSectionAndSpinCount
	test	eax, eax
	jne	SHORT $LN12@CProfiler
	lea	rax, OFFSET FLAT:??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	mov	QWORD PTR $T182163[rsp], rax
	lea	rdx, OFFSET FLAT:_TI2PEAD
	lea	rcx, QWORD PTR $T182163[rsp]
	call	_CxxThrowException
	npad	1
$LN12@CProfiler:
	mov	edx, -2147482624			; 80000400H
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+80
	call	QWORD PTR __imp_InitializeCriticalSectionAndSpinCount
	test	eax, eax
	jne	SHORT $LN16@CProfiler
	lea	rax, OFFSET FLAT:??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	mov	QWORD PTR $T182171[rsp], rax
	lea	rdx, OFFSET FLAT:_TI2PEAD
	lea	rcx, QWORD PTR $T182171[rsp]
	call	_CxxThrowException
	npad	1
$LN16@CProfiler:
	mov	edx, -2147482624			; 80000400H
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+120
	call	QWORD PTR __imp_InitializeCriticalSectionAndSpinCount
	test	eax, eax
	jne	SHORT $LN19@CProfiler
	lea	rax, OFFSET FLAT:??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	mov	QWORD PTR $T182178[rsp], rax
	lea	rdx, OFFSET FLAT:_TI2PEAD
	lea	rcx, QWORD PTR $T182178[rsp]
	call	_CxxThrowException
	npad	1
$LN19@CProfiler:
	mov	edx, -2147482624			; 80000400H
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+160
	call	QWORD PTR __imp_InitializeCriticalSectionAndSpinCount
	test	eax, eax
	jne	SHORT $LN22@CProfiler
	lea	rax, OFFSET FLAT:??_C@_0CF@LIBDMEPI@Couldn?8t?5initialize?5critical?5sec@
	mov	QWORD PTR $T182185[rsp], rax
	lea	rdx, OFFSET FLAT:_TI2PEAD
	lea	rcx, QWORD PTR $T182185[rsp]
	call	_CxxThrowException
	npad	1
$LN22@CProfiler:
	lea	rdi, OFFSET FLAT:?profiler@@3VCProfiler@@A+216
	mov	QWORD PTR $T182685[rsp], rdi
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	xor	ebx, ebx
	test	rax, rax
	je	SHORT $LN57@CProfiler
	mov	QWORD PTR [rax], rdi
	jmp	SHORT $LN58@CProfiler
$LN57@CProfiler:
	mov	rax, rbx
$LN58@CProfiler:
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+216, rax
	mov	rcx, rdi
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::_Buynode
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+264, rax
	mov	BYTE PTR [rax+41], 1
	mov	rax, QWORD PTR ?profiler@@3VCProfiler@@A+264
	mov	QWORD PTR [rax+8], rax
	mov	rax, QWORD PTR ?profiler@@3VCProfiler@@A+264
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR ?profiler@@3VCProfiler@@A+264
	mov	QWORD PTR [rax+16], rax
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+272, rbx
	lea	rdi, OFFSET FLAT:?profiler@@3VCProfiler@@A+280
	mov	QWORD PTR $T183184[rsp], rdi
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN137@CProfiler
	mov	QWORD PTR [rax], rdi
	jmp	SHORT $LN138@CProfiler
$LN137@CProfiler:
	mov	rax, rbx
$LN138@CProfiler:
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+280, rax
	mov	rcx, rdi
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned __int64,ThreadInfo * __ptr64,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+328, rax
	mov	BYTE PTR [rax+41], 1
	mov	rax, QWORD PTR ?profiler@@3VCProfiler@@A+328
	mov	QWORD PTR [rax+8], rax
	mov	rax, QWORD PTR ?profiler@@3VCProfiler@@A+328
	mov	QWORD PTR [rax], rax
	mov	rax, QWORD PTR ?profiler@@3VCProfiler@@A+328
	mov	QWORD PTR [rax+16], rax
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+336, rbx
	lea	rdi, OFFSET FLAT:?profiler@@3VCProfiler@@A+344
	mov	QWORD PTR $T183683[rsp], rdi
	mov	ecx, 8
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN217@CProfiler
	mov	QWORD PTR [rax], rdi
	jmp	SHORT $LN218@CProfiler
$LN217@CProfiler:
	mov	rax, rbx
$LN218@CProfiler:
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+344, rax
	mov	rcx, rdi
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAAPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Buynode
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+392, rax
	mov	BYTE PTR [rax+41], 1
	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+392
	mov	QWORD PTR [rcx+8], rcx
	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+392
	mov	QWORD PTR [rcx], rcx
	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+392
	mov	QWORD PTR [rcx+16], rcx
	mov	QWORD PTR ?profiler@@3VCProfiler@@A+400, rbx

; 236  : 	this->pICorProfilerInfo = nullptr;

	mov	QWORD PTR ?profiler@@3VCProfiler@@A+8, rbx

; 237  : 	this->pICorProfilerInfo2 = nullptr;

	mov	QWORD PTR ?profiler@@3VCProfiler@@A+16, rbx

; 238  : 	this->sigReader = nullptr;

	mov	QWORD PTR ?profiler@@3VCProfiler@@A+208, rbx

; 239  : }

	mov	rax, rsi
	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN265@CProfiler:
??0CProfiler@@QEAA@XZ ENDP				; CProfiler::CProfiler
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$0@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1CriticalSection@@QEAA@XZ		; CriticalSection::~CriticalSection
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$0
; Function compile flags: /Ogtpy
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$1@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 80					; 00000050H
	call	??1CriticalSection@@QEAA@XZ		; CriticalSection::~CriticalSection
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$1
; Function compile flags: /Ogtpy
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$2@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 120				; 00000078H
	call	??1CriticalSection@@QEAA@XZ		; CriticalSection::~CriticalSection
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$2
; Function compile flags: /Ogtpy
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$3@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 160				; 000000a0H
	call	??1CriticalSection@@QEAA@XZ		; CriticalSection::~CriticalSection
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$3
; Function compile flags: /Ogtpy
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$8@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$8
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T182685[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$8@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$8
; Function compile flags: /Ogtpy
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$4@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 216				; 000000d8H
	call	??1?$map@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$4
; Function compile flags: /Ogtpy
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$15@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$15
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T183184[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$15@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$15
; Function compile flags: /Ogtpy
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$5@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 280				; 00000118H
	call	??1?$map@_KPEAVThreadInfo@@U?$less@_K@std@@V?$allocator@U?$pair@$$CB_KPEAVThreadInfo@@@std@@@3@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$5
; Function compile flags: /Ogtpy
$T183703 = 32
$T182163 = 80
this$ = 80
$T183683 = 88
$T183184 = 88
$T182185 = 88
$T182171 = 88
$T182685 = 96
$T182178 = 96
?dtor$22@?0???0CProfiler@@QEAA@XZ@4HA PROC		; `CProfiler::CProfiler'::`1'::dtor$22
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T183683[rbp]
	call	??1?$_Tree_val@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$22@?0???0CProfiler@@QEAA@XZ@4HA ENDP		; `CProfiler::CProfiler'::`1'::dtor$22
text$x	ENDS
PUBLIC	FunctionLeaveGlobal
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\lightweightstack.h
pdata	SEGMENT
$pdata$FunctionLeaveGlobal DD imagerel $LN26
	DD	imagerel $LN26+172
	DD	imagerel $unwind$FunctionLeaveGlobal
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$FunctionLeaveGlobal DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT FunctionLeaveGlobal
_TEXT	SEGMENT
FunctionLeaveGlobal PROC				; COMDAT

; 130  : {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 131  : 	ThreadLocalData *data = getThreadLocalData();

	mov	ecx, DWORD PTR ?tls_index@@3KA		; tls_index
	call	QWORD PTR __imp_TlsGetValue
	mov	rbx, rax

; 132  : 
; 133  : 	profiler.EnterLock(data);

	mov	DWORD PTR [rax+4], 1
	mfence
	mov	rcx, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	xor	edi, edi
	mov	edx, DWORD PTR [rcx+4]
	cmp	edx, 1
	jne	SHORT $LN8@FunctionLe
	npad	12
$LL9@FunctionLe:
	mov	DWORD PTR [rbx+4], edi
	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+200
	or	edx, -1					; ffffffffH
	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_WaitForSingleObject
	mov	DWORD PTR [rbx+4], 1
	mfence
	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	ecx, DWORD PTR [rax+4]
	cmp	ecx, 1
	je	SHORT $LL9@FunctionLe
$LN8@FunctionLe:

; 134  : 
; 135  : 	if (data->stack.empty()) {

	mov	rax, QWORD PTR [rbx+24]
	cmp	QWORD PTR [rbx+32], rax
	jb	SHORT $LN25@FunctionLe

; 136  : 		//DebugWriteLine(L"FunctionLeaveGlobal (but stack was empty)");
; 137  : 	} else {
; 138  : 		StackEntry &stackTop = data->stack.top();

	mov	r8, QWORD PTR [rbx+32]

; 139  : 		//DebugWriteLine(L"FunctionLeaveGlobal %d", stackTop.function->Id);
; 140  : 		stackTop.frameCount--;

	add	DWORD PTR [r8+16], -1

; 141  : 		if (stackTop.frameCount == 0) {

	jne	SHORT $LN25@FunctionLe

; 142  : 			stackTop.function->TimeSpent += (__rdtsc() - stackTop.startTime);

	mov	rcx, QWORD PTR [r8]
	rdtsc
	shl	rdx, 32					; 00000020H
	or	rax, rdx
	sub	rax, QWORD PTR [r8+8]
	add	QWORD PTR [rcx+8], rax

; 143  : 			data->stack.pop();

	add	QWORD PTR [rbx+32], -24
$LN25@FunctionLe:

; 144  : 		}
; 145  : 	}
; 146  : 
; 147  : 	data->inLock = 0;

	mov	DWORD PTR [rbx+4], edi

; 148  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
FunctionLeaveGlobal ENDP
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xtree
pdata	SEGMENT
$pdata$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN620
	DD	imagerel $LN620+58
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN620+58
	DD	imagerel $LN620+494
	DD	imagerel $chain$0$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN620+494
	DD	imagerel $LN620+677
	DD	imagerel $chain$2$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN620+677
	DD	imagerel $LN620+780
	DD	imagerel $chain$3$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD imagerel $LN620+780
	DD	imagerel $LN620+800
	DD	imagerel $chain$4$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 021H
	DD	imagerel $LN620
	DD	imagerel $LN620+58
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 021H
	DD	imagerel $LN620+58
	DD	imagerel $LN620+494
	DD	imagerel $chain$0$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 042321H
	DD	010f423H
	DD	0fe405H
	DD	imagerel $LN620+58
	DD	imagerel $LN620+494
	DD	imagerel $chain$0$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 020521H
	DD	0e3405H
	DD	imagerel $LN620
	DD	imagerel $LN620+58
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z DD 060d01H
	DD	011540dH
	DD	0c009920dH
	DD	060067007H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z
_TEXT	SEGMENT
$T184129 = 48
_Next$ = 48
this$ = 112
__$ReturnUdt$ = 120
_Where$ = 128
_Val$ = 136
?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert, COMDAT

; 664  : 		{	// try to insert node with value _Val using _Where as a hint

$LN620:
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	rdi
	push	r12
	sub	rsp, 80					; 00000050H

; 665  : 
; 666  :  #if _HAS_ITERATOR_DEBUGGING
; 667  : 		if (_Where._Mycont != this)
; 668  : 			_DEBUG_ERROR("map/set insert iterator outside range");
; 669  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 670  : 
; 671  : 		const_iterator _Next;
; 672  : 
; 673  : 		if (size() == 0)

	cmp	QWORD PTR [rcx+56], 0
	mov	rbp, r9
	mov	r12, r8
	mov	rdi, rdx
	mov	rsi, rcx
	jne	SHORT $LN32@insert@4

; 674  : 			return (_Insert(true, _Myhead, _Val));	// insert into empty tree

	mov	QWORD PTR [rsp+32], r9
	mov	r9, QWORD PTR [rcx+48]
	mov	r8b, 1
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
	jmp	$LN619@insert@4
$LN32@insert@4:

; 675  : 		else if (this->_Multi)
; 676  : 			{	// insert even if duplicate
; 677  : 			if (_Where == begin())
; 678  : 				{	// insert at beginning if before first element
; 679  : 				if (!_DEBUG_LT_PRED(this->comp,
; 680  : 					_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 681  : 					return (_Insert(true, _Where._Mynode(), _Val));
; 682  : 				}
; 683  : 			else if (_Where == end())
; 684  : 				{	// insert at end if after last element
; 685  : 				if (!_DEBUG_LT_PRED(this->comp,
; 686  : 					this->_Kfn(_Val), _Key(_Rmost())))
; 687  : 					return (_Insert(false, _Rmost(), _Val));
; 688  : 				}
; 689  : 			else if (!_DEBUG_LT_PRED(this->comp,
; 690  : 				_Key(_Where._Mynode()), this->_Kfn(_Val))
; 691  : 				&& !_DEBUG_LT_PRED(this->comp,
; 692  : 					this->_Kfn(_Val), _Key((--(_Next = _Where))._Mynode())))
; 693  : 				{	// insert before _Where
; 694  : 				if (_Isnil(_Right(_Next._Mynode())))
; 695  : 					return (_Insert(false, _Next._Mynode(), _Val));
; 696  : 				else
; 697  : 					return (_Insert(true, _Where._Mynode(), _Val));
; 698  : 				}
; 699  : 			else if (!_DEBUG_LT_PRED(this->comp,
; 700  : 				this->_Kfn(_Val), _Key(_Where._Mynode()))
; 701  : 				&& (++(_Next = _Where) == end()
; 702  : 					|| !_DEBUG_LT_PRED(this->comp,
; 703  : 						_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 704  : 				{	// insert after _Where
; 705  : 				if (_Isnil(_Right(_Where._Mynode())))
; 706  : 					return (_Insert(false, _Where._Mynode(), _Val));
; 707  : 				else
; 708  : 					return (_Insert(true, _Next._Mynode(), _Val));
; 709  : 				}
; 710  : 			}
; 711  : 		else
; 712  : 			{	// insert only if unique
; 713  : 			if (_Where == begin())

	mov	rax, QWORD PTR [rcx+48]
	mov	QWORD PTR [rsp+112], rbx
	mov	rbx, QWORD PTR [rax]
	mov	rax, QWORD PTR [r8]
	test	rax, rax
	je	SHORT $LN350@insert@4
	cmp	rax, QWORD PTR [rcx]
	je	SHORT $LN349@insert@4
$LN350@insert@4:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN349@insert@4:
	mov	r9, QWORD PTR [r12+8]
	cmp	r9, rbx
	jne	SHORT $LN14@insert@4

; 714  : 				{	// insert at beginning if before first element
; 715  : 				if (_DEBUG_LT_PRED(this->comp,

	mov	eax, DWORD PTR [r9+24]
	cmp	DWORD PTR [rbp], eax
	jae	$LN1@insert@4

; 743  : 				else
; 744  : 					return (_Insert(true, _Next._Mynode(), _Val));

	mov	r8b, 1
	mov	rdx, rdi
	mov	rcx, rsi
	mov	QWORD PTR [rsp+32], rbp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
	jmp	$LN618@insert@4
$LN14@insert@4:

; 716  : 					this->_Kfn(_Val), _Key(_Where._Mynode())))
; 717  : 					return (_Insert(true, _Where._Mynode(), _Val));
; 718  : 				}
; 719  : 			else if (_Where == end())

	mov	rax, QWORD PTR [r12]
	mov	rbx, QWORD PTR [rsi+48]
	test	rax, rax
	je	SHORT $LN393@insert@4
	cmp	rax, QWORD PTR [rsi]
	je	SHORT $LN392@insert@4
$LN393@insert@4:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN392@insert@4:
	mov	rax, QWORD PTR [r12+8]
	cmp	rax, rbx
	jne	SHORT $LN11@insert@4

; 720  : 				{	// insert at end if after last element
; 721  : 				if (_DEBUG_LT_PRED(this->comp,

	mov	rax, QWORD PTR [rsi+48]
	mov	r9, QWORD PTR [rax+16]
	mov	eax, DWORD PTR [rbp]
	cmp	DWORD PTR [r9+24], eax
	jae	$LN1@insert@4

; 722  : 					_Key(_Rmost()), this->_Kfn(_Val)))
; 723  : 					return (_Insert(false, _Rmost(), _Val));

	xor	r8d, r8d

; 743  : 				else
; 744  : 					return (_Insert(true, _Next._Mynode(), _Val));

	mov	rdx, rdi
	mov	rcx, rsi
	mov	QWORD PTR [rsp+32], rbp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
	jmp	$LN618@insert@4
$LN11@insert@4:

; 724  : 				}
; 725  : 			else if (_DEBUG_LT_PRED(this->comp,
; 726  : 				this->_Kfn(_Val), _Key(_Where._Mynode()))
; 727  : 				&& _DEBUG_LT_PRED(this->comp,

	mov	ecx, DWORD PTR [rbp]
	cmp	ecx, DWORD PTR [rax+24]
	jae	$LN8@insert@4
	mov	rax, QWORD PTR [r12]
	lea	rcx, QWORD PTR _Next$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r12+8]
	mov	QWORD PTR [rcx+8], rax
	cmp	QWORD PTR _Next$[rsp], 0
	jne	SHORT $LN446@insert@4
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN446@insert@4:
	mov	rbx, QWORD PTR _Next$[rsp+8]
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN443@insert@4
	mov	rbx, QWORD PTR [rbx+16]
	mov	QWORD PTR _Next$[rsp+8], rbx
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN435@insert@4
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN435@insert@4
$LN443@insert@4:
	mov	rax, QWORD PTR [rbx]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN606@insert@4
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN464@insert@4
	npad	6
$LL465@insert@4:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL465@insert@4
$LN464@insert@4:
	mov	QWORD PTR _Next$[rsp+8], rbx
	jmp	SHORT $LN435@insert@4
$LN606@insert@4:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN613@insert@4
	npad	2
$LL438@insert@4:
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN613@insert@4
	mov	rbx, rax
	mov	QWORD PTR _Next$[rsp+8], rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL438@insert@4
$LN613@insert@4:
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN436@insert@4
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN435@insert@4
$LN436@insert@4:
	mov	rbx, rax
	mov	QWORD PTR _Next$[rsp+8], rax
$LN435@insert@4:
	mov	ecx, DWORD PTR [rbp]
	cmp	DWORD PTR [rbx+24], ecx
	jae	SHORT $LN8@insert@4

; 728  : 					_Key((--(_Next = _Where))._Mynode()), this->_Kfn(_Val)))
; 729  : 				{	// insert before _Where
; 730  : 				if (_Isnil(_Right(_Next._Mynode())))

	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LN7@insert@4

; 731  : 					return (_Insert(false, _Next._Mynode(), _Val));

	mov	r9, rbx
	xor	r8d, r8d

; 743  : 				else
; 744  : 					return (_Insert(true, _Next._Mynode(), _Val));

	mov	rdx, rdi
	mov	rcx, rsi
	mov	QWORD PTR [rsp+32], rbp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
	jmp	$LN618@insert@4
$LN7@insert@4:

; 732  : 				else
; 733  : 					return (_Insert(true, _Where._Mynode(), _Val));

	mov	r9, QWORD PTR [r12+8]

; 743  : 				else
; 744  : 					return (_Insert(true, _Next._Mynode(), _Val));

	mov	r8b, 1
	mov	rdx, rdi
	mov	rcx, rsi
	mov	QWORD PTR [rsp+32], rbp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
	jmp	$LN618@insert@4
$LN8@insert@4:

; 734  : 				}
; 735  : 			else if (_DEBUG_LT_PRED(this->comp,
; 736  : 				_Key(_Where._Mynode()), this->_Kfn(_Val))
; 737  : 				&& (++(_Next = _Where) == end()
; 738  : 					|| _DEBUG_LT_PRED(this->comp,

	mov	rax, QWORD PTR [r12+8]
	cmp	DWORD PTR [rax+24], ecx
	jae	$LN1@insert@4
	mov	rax, QWORD PTR [r12]
	lea	rcx, QWORD PTR _Next$[rsp]
	mov	QWORD PTR [rsp+120], r14
	mov	r14, QWORD PTR [rsi+48]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r12+8]
	mov	QWORD PTR [rcx+8], rax
	cmp	QWORD PTR _Next$[rsp], 0
	mov	QWORD PTR [rsp+128], r15
	mov	r15, QWORD PTR [rsi]
	jne	SHORT $LN542@insert@4
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN542@insert@4:
	mov	rbx, QWORD PTR _Next$[rsp+8]
	cmp	BYTE PTR [rbx+41], 0
	je	SHORT $LN539@insert@4
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN536@insert@4
$LN539@insert@4:
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN608@insert@4
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN536@insert@4
	npad	11
$LL557@insert@4:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL557@insert@4
	jmp	SHORT $LN536@insert@4
$LN608@insert@4:
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN614@insert@4
$LL535@insert@4:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN614@insert@4
	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL535@insert@4
$LN614@insert@4:
	mov	rbx, rax
$LN536@insert@4:
	cmp	QWORD PTR _Next$[rsp], 0
	je	SHORT $LN575@insert@4
	cmp	QWORD PTR _Next$[rsp], r15
	je	SHORT $LN574@insert@4
$LN575@insert@4:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN574@insert@4:
	mov	r15, QWORD PTR [rsp+128]
	cmp	rbx, r14
	mov	r14, QWORD PTR [rsp+120]
	je	SHORT $LN3@insert@4
	mov	eax, DWORD PTR [rbx+24]
	cmp	DWORD PTR [rbp], eax
	jae	SHORT $LN1@insert@4
$LN3@insert@4:

; 739  : 						this->_Kfn(_Val), _Key(_Next._Mynode()))))
; 740  : 				{	// insert after _Where
; 741  : 				if (_Isnil(_Right(_Where._Mynode())))

	mov	r9, QWORD PTR [r12+8]
	mov	rax, QWORD PTR [r9+16]
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LN2@insert@4

; 742  : 					return (_Insert(false, _Where._Mynode(), _Val));

	xor	r8d, r8d
	mov	rdx, rdi
	mov	rcx, rsi
	mov	QWORD PTR [rsp+32], rbp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
	jmp	SHORT $LN618@insert@4
$LN2@insert@4:

; 743  : 				else
; 744  : 					return (_Insert(true, _Next._Mynode(), _Val));

	mov	r9, rbx
	mov	r8b, 1
	mov	rdx, rdi
	mov	rcx, rsi
	mov	QWORD PTR [rsp+32], rbp
	call	?_Insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@IEAA?AViterator@12@_NPEAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::_Insert
	jmp	SHORT $LN618@insert@4
$LN1@insert@4:

; 745  : 				}
; 746  : 			}
; 747  : 
; 748  : 		return (insert(_Val).first);	// try usual insert if all else fails

	lea	rdx, QWORD PTR $T184129[rsp]
	mov	r8, rbp
	mov	rcx, rsi
	call	?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [rdi], rcx
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rdi+8], rax
$LN618@insert@4:
	mov	rbx, QWORD PTR [rsp+112]
$LN619@insert@4:
	mov	rax, rdi

; 749  : 		}

	mov	rbp, QWORD PTR [rsp+136]
	add	rsp, 80					; 00000050H
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert
_TEXT	ENDS
PUBLIC	$T185718
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAAAEAPEAVThreadInfo@@AEBK@Z DD imagerel $LN113
	DD	imagerel $LN113+255
	DD	imagerel $unwind$??A?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAAAEAPEAVThreadInfo@@AEBK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAAAEAPEAVThreadInfo@@AEBK@Z DD 0a1801H
	DD	0126418H
	DD	0115418H
	DD	0103418H
	DD	0d014b218H
	DD	07010c012H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\map
xdata	ENDS
;	COMDAT ??A?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAAAEAPEAVThreadInfo@@AEBK@Z
_TEXT	SEGMENT
_Where$ = 32
$T185714 = 48
$T185718 = 64
$T185717 = 80
this$ = 128
_Keyval$ = 136
??A?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAAAEAPEAVThreadInfo@@AEBK@Z PROC ; std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::operator[], COMDAT

; 168  : 		{	// find element matching _Keyval or insert with default mapped

$LN113:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 96					; 00000060H

; 169  : 		iterator _Where = this->lower_bound(_Keyval);

	mov	rbx, QWORD PTR [rcx+48]
	mov	r13, rdx
	mov	rbp, rcx
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN9@operator@29
	mov	r8d, DWORD PTR [rdx]
	npad	1
$LL10@operator@29:
	cmp	DWORD PTR [rax+24], r8d
	jae	SHORT $LN8@operator@29
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN7@operator@29
$LN8@operator@29:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN7@operator@29:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL10@operator@29
$LN9@operator@29:
	mov	rdi, QWORD PTR [rcx]

; 170  : 		if (_Where == this->end()
; 171  : 			|| this->comp(_Keyval, this->_Key(_Where._Mynode())))

	mov	r12, QWORD PTR [rcx+48]
	mov	QWORD PTR _Where$[rsp+8], rbx
	mov	QWORD PTR _Where$[rsp], rdi
	test	rdi, rdi
	je	SHORT $LN68@operator@29
	cmp	rdi, rdi
	je	SHORT $LN67@operator@29
$LN68@operator@29:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN67@operator@29:
	xor	esi, esi
	cmp	rbx, r12
	je	SHORT $LN1@operator@29
	mov	eax, DWORD PTR [rbx+24]
	cmp	DWORD PTR [r13], eax
	jae	SHORT $LN2@operator@29
$LN1@operator@29:

; 172  : 			_Where = this->insert(_Where,
; 173  : 				value_type(_Keyval, mapped_type()));

	movaps	xmm0, XMMWORD PTR _Where$[rsp]
	mov	eax, DWORD PTR [r13]
	lea	r9, QWORD PTR $T185714[rsp]
	lea	r8, QWORD PTR $T185718[rsp]
	lea	rdx, QWORD PTR $T185717[rsp]
	mov	rcx, rbp
	movdqa	XMMWORD PTR $T185718[rsp], xmm0
	mov	DWORD PTR $T185714[rsp], eax
	mov	QWORD PTR $T185714[rsp+8], rsi
	call	?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AViterator@12@Vconst_iterator@12@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+8]
	lea	rdx, QWORD PTR _Where$[rsp]
	mov	QWORD PTR [rdx], rcx
	mov	QWORD PTR [rdx+8], rax
	mov	rbx, QWORD PTR _Where$[rsp+8]
	mov	rdi, QWORD PTR _Where$[rsp]
$LN2@operator@29:

; 174  : 		return ((*_Where).second);

	test	rdi, rdi
	jne	SHORT $LN111@operator@29
	call	QWORD PTR __imp__invalid_parameter_noinfo
	jmp	SHORT $LN105@operator@29
$LN111@operator@29:
	mov	rsi, QWORD PTR [rdi]
$LN105@operator@29:
	cmp	rbx, QWORD PTR [rsi+48]
	jne	SHORT $LN112@operator@29
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN112@operator@29:

; 175  : 		}

	lea	r11, QWORD PTR [rsp+96]
	lea	rax, QWORD PTR [rbx+32]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r13
	pop	r12
	pop	rdi
	ret	0
??A?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAAAEAPEAVThreadInfo@@AEBK@Z ENDP ; std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::operator[]
_TEXT	ENDS
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
pdata	SEGMENT
$pdata$?ExceptionUnwindFunctionLeave@CProfiler@@UEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?ExceptionUnwindFunctionLeave@CProfiler@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ExceptionUnwindFunctionLeave@CProfiler@@UEAAJXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?ExceptionUnwindFunctionLeave@CProfiler@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?ExceptionUnwindFunctionLeave@CProfiler@@UEAAJXZ PROC	; CProfiler::ExceptionUnwindFunctionLeave, COMDAT

; 514  : {

$LN3:
	sub	rsp, 40					; 00000028H

; 515  : 	DebugWriteLine(L"ExceptionUnwindFunctionLeave");
; 516  : 	FunctionLeaveGlobal();

	call	FunctionLeaveGlobal

; 517  :     return S_OK;

	xor	eax, eax

; 518  : }

	add	rsp, 40					; 00000028H
	ret	0
?ExceptionUnwindFunctionLeave@CProfiler@@UEAAJXZ ENDP	; CProfiler::ExceptionUnwindFunctionLeave
_TEXT	ENDS
PUBLIC	?LogString@CProfiler@@QEAAXPEA_WZZ		; CProfiler::LogString
EXTRN	__chkstk:PROC
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
pdata	SEGMENT
$pdata$?LogString@CProfiler@@QEAAXPEA_WZZ DD imagerel $LN35
	DD	imagerel $LN35+213
	DD	imagerel $unwind$?LogString@CProfiler@@QEAAXPEA_WZZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LogString@CProfiler@@QEAAXPEA_WZZ DD 082401H
	DD	08070124H
	DD	0c015d017H
	DD	060127013H
	DD	030105011H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?LogString@CProfiler@@QEAAXPEA_WZZ
_TEXT	SEGMENT
$T186106 = 32
szBuffer$ = 48
this$ = 16496
pszFmtString$ = 16504
?LogString@CProfiler@@QEAAXPEA_WZZ PROC			; CProfiler::LogString, COMDAT

; 374  : {

$LN35:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	mov	eax, 16440				; 00004038H
	call	__chkstk
	sub	rsp, rax
	mov	rdi, rcx

; 375  : 	WCHAR szBuffer[2 * 4096];
; 376  : 
; 377  : 	va_list args;
; 378  : 	va_start( args, pszFmtString );
; 379  : 	vswprintf_s(szBuffer, 2 * 4096, pszFmtString, args );

	mov	r8, rdx
	lea	r9, QWORD PTR pszFmtString$[rsp+8]
	lea	rcx, QWORD PTR szBuffer$[rsp]
	mov	edx, 8192				; 00002000H
	call	QWORD PTR __imp_vswprintf_s

; 380  : 	va_end( args );
; 381  : 	
; 382  : 	DebugWriteLine(szBuffer);
; 383  : 	nativeToManagedCriticalSection.Enter();

	lea	r13, QWORD PTR [rdi+40]
	mov	rcx, r13
	call	QWORD PTR __imp_EnterCriticalSection

; 384  : 	nativeToManagedBuffer->WriteString(szBuffer);

	mov	r12, QWORD PTR [rdi+32]
	or	rcx, -1
	xor	eax, eax
	lea	rdi, QWORD PTR szBuffer$[rsp]
	mov	ebx, 4
	repne scasw
	not	rcx
	lea	rdi, QWORD PTR [rcx-1]
	add	edi, edi
	xor	esi, esi
	mov	ebp, esi
	mov	DWORD PTR $T186106[rsp], edi
	npad	9
$LL10@LogString:
	lea	rdx, QWORD PTR $T186106[rsp]
	mov	r9d, ebx
	mov	r8d, ebp
	mov	rcx, r12
	call	?WriteInternal@CCircularBuffer@@AEAAHPEAEHH@Z ; CCircularBuffer::WriteInternal
	sub	ebx, eax
	add	ebp, eax
	test	ebx, ebx
	jg	SHORT $LL10@LogString
	test	edi, edi
	js	SHORT $LN16@LogString
	jle	SHORT $LN16@LogString
$LL17@LogString:
	lea	rdx, QWORD PTR szBuffer$[rsp]
	mov	r9d, edi
	mov	r8d, esi
	mov	rcx, r12
	call	?WriteInternal@CCircularBuffer@@AEAAHPEAEHH@Z ; CCircularBuffer::WriteInternal
	sub	edi, eax
	add	esi, eax
	test	edi, edi
	jg	SHORT $LL17@LogString
$LN16@LogString:

; 385  : 	nativeToManagedCriticalSection.Leave();

	mov	rcx, r13
	call	QWORD PTR __imp_LeaveCriticalSection

; 386  : }

	add	rsp, 16440				; 00004038H
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?LogString@CProfiler@@QEAAXPEA_WZZ ENDP			; CProfiler::LogString
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Shutdown@CProfiler@@UEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$?Shutdown@CProfiler@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Shutdown@CProfiler@@UEAAJXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Shutdown@CProfiler@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Shutdown@CProfiler@@UEAAJXZ PROC			; CProfiler::Shutdown, COMDAT

; 300  : {

$LN3:
	sub	rsp, 40					; 00000028H

; 301  : 	LogString(L"Shutdown...");

	lea	rdx, OFFSET FLAT:??_C@_1BI@LJPPCMFK@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AA?4?$AA?4?$AA?4?$AA?$AA@
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString

; 302  : 
; 303  :     return S_OK;

	xor	eax, eax

; 304  : }

	add	rsp, 40					; 00000028H
	ret	0
?Shutdown@CProfiler@@UEAAJXZ ENDP			; CProfiler::Shutdown
_TEXT	ENDS
PUBLIC	?CreateNewRoot@CProfiler@@QEAAPEAUFunctionInfo@@XZ ; CProfiler::CreateNewRoot
;	COMDAT pdata
; File c:\program files\microsoft visual studio 9.0\vc\include\xstring
pdata	SEGMENT
$pdata$?CreateNewRoot@CProfiler@@QEAAPEAUFunctionInfo@@XZ DD imagerel $LN32
	DD	imagerel $LN32+276
	DD	imagerel $unwind$?CreateNewRoot@CProfiler@@QEAAPEAUFunctionInfo@@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateNewRoot@CProfiler@@QEAAPEAUFunctionInfo@@XZ DD 040f01H
	DD	0a340fH
	DD	0700b520fH
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?CreateNewRoot@CProfiler@@QEAAPEAUFunctionInfo@@XZ
_TEXT	SEGMENT
$T186185 = 64
this$ = 64
newRoot$ = 72
?CreateNewRoot@CProfiler@@QEAAPEAUFunctionInfo@@XZ PROC	; CProfiler::CreateNewRoot, COMDAT

; 207  : FunctionInfo *CProfiler::CreateNewRoot() {

$LN32:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H

; 208  : 	rootElementCriticalSection.Enter();

	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+80
	call	QWORD PTR __imp_EnterCriticalSection

; 209  : 	FunctionInfo *oldRoot = sharedMemoryHeader->RootFuncInfo;

	mov	r11, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader

; 210  : 	FunctionInfo *newRoot = nullptr;

	mov	QWORD PTR newRoot$[rsp], 0
	mov	rbx, QWORD PTR [r11+40]

; 211  : 	FunctionInfo *newThreadRoot = oldRoot->GetOrAddChild(getNewPosFunctionID(), newRoot);

$LL8@CreateNewR:
	mov	eax, DWORD PTR ?nextPosFunctionID@@3JC	; nextPosFunctionID
	lea	edx, DWORD PTR [rax+5]
	btr	edx, 31
	lock cmpxchg DWORD PTR ?nextPosFunctionID@@3JC, edx ; nextPosFunctionID
	jne	SHORT $LL8@CreateNewR
	lea	r8, QWORD PTR newRoot$[rsp]
	mov	rcx, rbx
	call	?GetOrAddChild@FunctionInfo@@QEAAPEAU1@HAEAPEAU1@@Z ; FunctionInfo::GetOrAddChild
	mov	rdi, rax

; 212  : 	if (newRoot != nullptr) {

	mov	rax, QWORD PTR newRoot$[rsp]
	test	rax, rax
	je	SHORT $LN13@CreateNewR

; 213  : 		sharedMemoryHeader->RootFuncInfo = newRoot;

	mov	r8, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	QWORD PTR [r8+40], rax

; 214  : 		FreeFunctionInfo(oldRoot);

	mov	ecx, DWORD PTR [rbx+20]
	mov	eax, -1301749992			; b268df18H
	inc	ecx
	movsxd	rdx, ecx
	add	rdx, 3
	imul	rdx, rax
	shr	rdx, 32					; 00000020H
	and	edx, 31
	prefetchw BYTE PTR [r8+rdx*8+88]
	npad	2
$LL15@CreateNewR:
	mov	rax, QWORD PTR [r8+rdx*8+88]
	mov	QWORD PTR [rbx], rax
	lock cmpxchg QWORD PTR [r8+rdx*8+88], rbx
	jne	SHORT $LL15@CreateNewR
$LN13@CreateNewR:

; 215  : 	}
; 216  : 	rootElementCriticalSection.Leave();

	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+80
	call	QWORD PTR __imp_LeaveCriticalSection

; 217  : 	
; 218  : 	ThreadInfo *data = this->unmanagedThreadIDMap[GetCurrentThreadId()];

	call	QWORD PTR __imp_GetCurrentThreadId
	lea	rdx, QWORD PTR $T186185[rsp]
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+344
	mov	DWORD PTR $T186185[rsp], eax
	call	??A?$map@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@@std@@QEAAAEAPEAVThreadInfo@@AEBK@Z ; std::map<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> > >::operator[]
	mov	rcx, QWORD PTR [rax]

; 219  : 	
; 220  : 	data->functionInfoId = newThreadRoot->Id;

	mov	eax, DWORD PTR [rdi]
	mov	DWORD PTR [rcx+56], eax

; 221  : 		
; 222  : 	LogString(L"mapthread %d 0 \"Thread#%d\" \"%s\"", newThreadRoot->Id, GetCurrentThreadId(), data->threadName.c_str());

	cmp	QWORD PTR [rcx+48], 8
	jb	SHORT $LN28@CreateNewR
	mov	rbx, QWORD PTR [rcx+24]
	jmp	SHORT $LN29@CreateNewR
$LN28@CreateNewR:
	lea	rbx, QWORD PTR [rcx+24]
$LN29@CreateNewR:
	call	QWORD PTR __imp_GetCurrentThreadId
	mov	r8d, DWORD PTR [rdi]
	lea	rdx, OFFSET FLAT:??_C@_1EA@LIAAHHAL@?$AAm?$AAa?$AAp?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA0?$AA?5?$AA?$CC?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$CD?$AA?$CF?$AAd?$AA?$CC?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?$AA@
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A ; profiler
	mov	r9d, eax
	mov	QWORD PTR [rsp+32], rbx
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString

; 223  : 	
; 224  : 	return newThreadRoot;
; 225  : }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rax, rdi
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CreateNewRoot@CProfiler@@QEAAPEAUFunctionInfo@@XZ ENDP	; CProfiler::CreateNewRoot
_TEXT	ENDS
PUBLIC	?MapFunction@CProfiler@@QEAA_K_K@Z		; CProfiler::MapFunction
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
pdata	SEGMENT
$pdata$?MapFunction@CProfiler@@QEAA_K_K@Z DD imagerel $LN197
	DD	imagerel $LN197+506
	DD	imagerel $unwind$?MapFunction@CProfiler@@QEAA_K_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MapFunction@CProfiler@@QEAA_K_K@Z DD 091701H
	DD	0186417H
	DD	0175417H
	DD	0163417H
	DD	0140117H
	DD	07010H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?MapFunction@CProfiler@@QEAA_K_K@Z
_TEXT	SEGMENT
_Where$186730 = 48
$T186727 = 64
$T186273 = 80
it$ = 80
$T186275 = 96
signature$119475 = 120
this$ = 176
functionID$ = 184
?MapFunction@CProfiler@@QEAA_K_K@Z PROC			; CProfiler::MapFunction, COMDAT

; 182  : {

$LN197:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 160				; 000000a0H

; 183  : 	mapFunctionCriticalSection.Enter();

	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+120
	mov	rdi, rdx
	call	QWORD PTR __imp_EnterCriticalSection

; 184  : 	int clientData = 0;
; 185  : 	
; 186  : 	TFunctionIDMap::iterator it = this->functionIDMap.find(functionID);

	mov	rsi, QWORD PTR ?profiler@@3VCProfiler@@A+264
	mov	rax, QWORD PTR [rsi+8]
	mov	rbx, rsi
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN18@MapFunctio
	npad	5
$LL19@MapFunctio:
	cmp	QWORD PTR [rax+24], rdi
	jae	SHORT $LN17@MapFunctio
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN16@MapFunctio
$LN17@MapFunctio:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN16@MapFunctio:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL19@MapFunctio
$LN18@MapFunctio:
	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+216
	mov	QWORD PTR _Where$186730[rsp+8], rbx
	mov	rbp, rsi
	mov	QWORD PTR _Where$186730[rsp], rcx
	test	rcx, rcx
	je	SHORT $LN77@MapFunctio
	cmp	rcx, rcx
	je	SHORT $LN76@MapFunctio
$LN77@MapFunctio:
	call	QWORD PTR __imp__invalid_parameter_noinfo
	mov	rsi, QWORD PTR ?profiler@@3VCProfiler@@A+264
	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+216
$LN76@MapFunctio:
	cmp	rbx, rbp
	je	SHORT $LN12@MapFunctio
	cmp	rdi, QWORD PTR [rbx+24]
	jb	SHORT $LN12@MapFunctio
	lea	rdx, QWORD PTR _Where$186730[rsp]
	jmp	SHORT $LN13@MapFunctio
$LN12@MapFunctio:
	mov	QWORD PTR $T186727[rsp+8], rsi
	mov	QWORD PTR $T186727[rsp], rcx
	lea	rdx, QWORD PTR $T186727[rsp]
$LN13@MapFunctio:
	mov	rax, QWORD PTR [rdx]
	lea	r8, QWORD PTR it$[rsp]
	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rax

; 187  : 	if (it == this->functionIDMap.end()) {

	mov	rbx, QWORD PTR it$[rsp]
	test	rbx, rbx
	je	SHORT $LN134@MapFunctio
	cmp	rbx, rcx
	je	SHORT $LN133@MapFunctio
$LN134@MapFunctio:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN133@MapFunctio:
	mov	rbp, QWORD PTR it$[rsp+8]
	cmp	rbp, rsi
	jne	$LN4@MapFunctio

; 188  : 		DebugWriteLine(L"Creating new ID");
; 189  : 		if (sigReader->IsNetInternal(functionID))

	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+208
	mov	rdx, rdi
	call	?IsNetInternal@SignatureReader@@QEAA_N_K@Z ; SignatureReader::IsNetInternal
	test	al, al
	je	SHORT $LL149@MapFunctio
	npad	12

; 190  : 			clientData = -getNewPosFunctionID(); // negative series

$LL144@MapFunctio:
	mov	eax, DWORD PTR ?nextPosFunctionID@@3JC	; nextPosFunctionID
	lea	ebx, DWORD PTR [rax+5]
	btr	ebx, 31
	lock cmpxchg DWORD PTR ?nextPosFunctionID@@3JC, ebx ; nextPosFunctionID
	jne	SHORT $LL144@MapFunctio
	neg	ebx

; 191  : 		else

	jmp	SHORT $LN2@MapFunctio
	npad	5

; 192  : 			clientData = getNewPosFunctionID(); // positive series

$LL149@MapFunctio:
	mov	eax, DWORD PTR ?nextPosFunctionID@@3JC	; nextPosFunctionID
	lea	ebx, DWORD PTR [rax+5]
	btr	ebx, 31
	lock cmpxchg DWORD PTR ?nextPosFunctionID@@3JC, ebx ; nextPosFunctionID
	jne	SHORT $LL149@MapFunctio
$LN2@MapFunctio:

; 193  : 		this->functionIDMap.insert(TFunctionIDPair(functionID, clientData));

	lea	r8, QWORD PTR $T186273[rsp]
	lea	rdx, QWORD PTR $T186275[rsp]
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+216
	mov	QWORD PTR $T186273[rsp], rdi
	mov	DWORD PTR $T186273[rsp+8], ebx
	call	?insert@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@_KHU?$less@_K@std@@V?$allocator@U?$pair@$$CB_KH@std@@@2@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CB_KH@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned __int64,int,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,int> >,0> >::insert

; 194  : 
; 195  : 		// send to host
; 196  : 		std::wstring signature = sigReader->Parse(functionID);

	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+208
	lea	rdx, QWORD PTR signature$119475[rsp]
	mov	r8, rdi
	call	?Parse@SignatureReader@@QEAA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@_K@Z ; SignatureReader::Parse

; 197  : 		LogString(L"map %d %Id %s", clientData, functionID, signature.c_str());

	cmp	QWORD PTR signature$119475[rsp+32], 8
	lea	r11, QWORD PTR signature$119475[rsp+8]
	cmovae	r11, QWORD PTR signature$119475[rsp+8]
	lea	rdx, OFFSET FLAT:??_C@_1BM@IMNIDHAD@?$AAm?$AAa?$AAp?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAI?$AAd?$AA?5?$AA?$CF?$AAs?$AA?$AA@
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A ; profiler
	mov	r9, rdi
	mov	r8d, ebx
	mov	QWORD PTR [rsp+32], r11
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString

; 198  : 	} else {

	lea	rcx, QWORD PTR signature$119475[rsp]
	call	QWORD PTR __imp_??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	jmp	SHORT $LN1@MapFunctio
$LN4@MapFunctio:

; 199  : 		DebugWriteLine(L"using old ID");
; 200  : 		clientData = it->second;

	test	rbx, rbx
	jne	SHORT $LN191@MapFunctio
	call	QWORD PTR __imp__invalid_parameter_noinfo
	xor	r11d, r11d
	jmp	SHORT $LN181@MapFunctio
$LN191@MapFunctio:
	mov	r11, QWORD PTR [rbx]
$LN181@MapFunctio:
	cmp	rbp, QWORD PTR [r11+48]
	jne	SHORT $LN168@MapFunctio
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN168@MapFunctio:
	mov	ebx, DWORD PTR [rbp+32]
$LN1@MapFunctio:

; 201  : 	}
; 202  : 	mapFunctionCriticalSection.Leave();

	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A+120
	call	QWORD PTR __imp_LeaveCriticalSection

; 203  : 	
; 204  : 	return clientData;
; 205  : }

	lea	r11, QWORD PTR [rsp+160]
	movsxd	rax, ebx
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
?MapFunction@CProfiler@@QEAA_K_K@Z ENDP			; CProfiler::MapFunction
_TEXT	ENDS
PUBLIC	?FunctionMapper@CProfiler@@SA_K_KPEAH@Z		; CProfiler::FunctionMapper
; Function compile flags: /Ogtpy
;	COMDAT ?FunctionMapper@CProfiler@@SA_K_KPEAH@Z
_TEXT	SEGMENT
functionID$ = 8
__formal$ = 16
?FunctionMapper@CProfiler@@SA_K_KPEAH@Z PROC		; CProfiler::FunctionMapper, COMDAT

; 178  : 	return profiler.MapFunction(functionID);

	mov	rdx, rcx
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A ; profiler

; 179  : }

	jmp	?MapFunction@CProfiler@@QEAA_K_K@Z	; CProfiler::MapFunction
?FunctionMapper@CProfiler@@SA_K_KPEAH@Z ENDP		; CProfiler::FunctionMapper
_TEXT	ENDS
PUBLIC	FunctionTailcallGlobal
; Function compile flags: /Ogtpy
;	COMDAT FunctionTailcallGlobal
_TEXT	SEGMENT
FunctionTailcallGlobal PROC				; COMDAT

; 152  : 	DebugWriteLine(L"FunctionTailcallGlobal");
; 153  : 	// handle tail calls A->B as leave A, enter B, ...
; 154  : 	FunctionLeaveGlobal();
; 155  : 	
; 156  : 	// FunctionTailcallGlobal call will be followed by FunctionEnterGlobal for new function
; 157  : }

	jmp	FunctionLeaveGlobal
FunctionTailcallGlobal ENDP
_TEXT	ENDS
PUBLIC	?FunctionEnterCreateNewRoot@@YAXPEAUThreadLocalData@@AEB_K@Z ; FunctionEnterCreateNewRoot
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\lightweightstack.h
pdata	SEGMENT
$pdata$?FunctionEnterCreateNewRoot@@YAXPEAUThreadLocalData@@AEB_K@Z DD imagerel $LN8
	DD	imagerel $LN8+112
	DD	imagerel $unwind$?FunctionEnterCreateNewRoot@@YAXPEAUThreadLocalData@@AEB_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FunctionEnterCreateNewRoot@@YAXPEAUThreadLocalData@@AEB_K@Z DD 040a01H
	DD	0a340aH
	DD	07006720aH
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?FunctionEnterCreateNewRoot@@YAXPEAUThreadLocalData@@AEB_K@Z
_TEXT	SEGMENT
$T186995 = 32
data$ = 80
tsc$ = 88
?FunctionEnterCreateNewRoot@@YAXPEAUThreadLocalData@@AEB_K@Z PROC ; FunctionEnterCreateNewRoot, COMDAT

; 48   : {

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 64					; 00000040H

; 49   : 	DebugWriteLine(L"Creating new root");
; 50   : 	// first function call on this thread
; 51   : 	// create a new root node for this thread
; 52   : 	data->stack.push(StackEntry(profiler.CreateNewRoot(), tsc));

	mov	rbx, QWORD PTR [rdx]
	mov	rdi, rcx
	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A ; profiler
	call	?CreateNewRoot@CProfiler@@QEAAPEAUFunctionInfo@@XZ ; CProfiler::CreateNewRoot
	add	QWORD PTR [rdi+32], 24
	mov	QWORD PTR $T186995[rsp+8], rbx
	mov	QWORD PTR $T186995[rsp], rax
	mov	rax, QWORD PTR [rdi+32]
	mov	DWORD PTR $T186995[rsp+16], 1
	cmp	rax, QWORD PTR [rdi+40]
	jne	SHORT $LN5@FunctionEn
	lea	rcx, QWORD PTR [rdi+24]
	call	?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ ; LightweightStack<StackEntry>::Enlarge
$LN5@FunctionEn:
	mov	rcx, QWORD PTR [rdi+32]

; 53   : 	DebugWriteLine(L"Created new root");
; 54   : }

	mov	rbx, QWORD PTR [rsp+80]
	lea	rdx, QWORD PTR $T186995[rsp]
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?FunctionEnterCreateNewRoot@@YAXPEAUThreadLocalData@@AEB_K@Z ENDP ; FunctionEnterCreateNewRoot
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\criticalsection.h
pdata	SEGMENT
$pdata$?ThreadAssignedToOSThread@CProfiler@@UEAAJ_KK@Z DD imagerel $LN306
	DD	imagerel $LN306+576
	DD	imagerel $unwind$?ThreadAssignedToOSThread@CProfiler@@UEAAJ_KK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ThreadAssignedToOSThread@CProfiler@@UEAAJ_KK@Z DD 0c1c01H
	DD	016641cH
	DD	015541cH
	DD	014341cH
	DD	0f018d21cH
	DD	0d014e016H
	DD	07010c012H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT ?ThreadAssignedToOSThread@CProfiler@@UEAAJ_KK@Z
_TEXT	SEGMENT
$T187935 = 32
_Where$187508 = 32
_Where$187936 = 48
$T187515 = 48
$T187138 = 64
it$ = 64
$T187136 = 88
it2$ = 88
this$ = 160
managedThreadID$ = 168
osThreadID$ = 176
?ThreadAssignedToOSThread@CProfiler@@UEAAJ_KK@Z PROC	; CProfiler::ThreadAssignedToOSThread, COMDAT

; 396  : {

$LN306:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
	mov	r14, rcx

; 397  : 	this->threadMapCriticalSection.Enter();

	add	rcx, 160				; 000000a0H
	mov	r12d, r8d
	mov	r13, rdx
	call	QWORD PTR __imp_EnterCriticalSection

; 398  : 	DebugWriteLine(L"ThreadAssignedToOSThread %d, %d", managedThreadID, osThreadID);
; 399  : 	
; 400  : 	TThreadIDMap::iterator it = this->threadIDMap.find(managedThreadID);

	mov	rbx, QWORD PTR [r14+328]
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN15@ThreadAssi
$LL16@ThreadAssi:
	cmp	QWORD PTR [rax+24], r13
	jae	SHORT $LN14@ThreadAssi
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN13@ThreadAssi
$LN14@ThreadAssi:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN13@ThreadAssi:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL16@ThreadAssi
$LN15@ThreadAssi:
	mov	rax, QWORD PTR [r14+280]
	mov	rdi, QWORD PTR [r14+328]
	mov	QWORD PTR _Where$187508[rsp+8], rbx
	mov	QWORD PTR _Where$187508[rsp], rax
	test	rax, rax
	je	SHORT $LN74@ThreadAssi
	cmp	rax, rax
	je	SHORT $LN73@ThreadAssi
$LN74@ThreadAssi:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN73@ThreadAssi:
	cmp	rbx, rdi
	je	SHORT $LN9@ThreadAssi
	cmp	r13, QWORD PTR [rbx+24]
	jb	SHORT $LN9@ThreadAssi
	lea	rcx, QWORD PTR _Where$187508[rsp]
	jmp	SHORT $LN10@ThreadAssi
$LN9@ThreadAssi:
	mov	rax, QWORD PTR [r14+328]
	lea	rcx, QWORD PTR $T187515[rsp]
	mov	QWORD PTR $T187515[rsp+8], rax
	mov	rax, QWORD PTR [r14+280]
	mov	QWORD PTR $T187515[rsp], rax
$LN10@ThreadAssi:
	mov	rax, QWORD PTR [rcx]

; 401  : 	TUThreadIDMap::iterator it2 = this->unmanagedThreadIDMap.find(osThreadID);

	mov	rbx, QWORD PTR [r14+392]
	lea	rdx, QWORD PTR it$[rsp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+41], 0
	jne	SHORT $LN118@ThreadAssi
$LL119@ThreadAssi:
	cmp	DWORD PTR [rax+24], r12d
	jae	SHORT $LN117@ThreadAssi
	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN116@ThreadAssi
$LN117@ThreadAssi:
	mov	rbx, rax
	mov	rax, QWORD PTR [rax]
$LN116@ThreadAssi:
	cmp	BYTE PTR [rax+41], 0
	je	SHORT $LL119@ThreadAssi
$LN118@ThreadAssi:
	mov	rax, QWORD PTR [r14+344]
	mov	rdi, QWORD PTR [r14+392]
	mov	QWORD PTR _Where$187936[rsp+8], rbx
	mov	QWORD PTR _Where$187936[rsp], rax
	test	rax, rax
	je	SHORT $LN177@ThreadAssi
	cmp	rax, rax
	je	SHORT $LN176@ThreadAssi
$LN177@ThreadAssi:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN176@ThreadAssi:
	cmp	rbx, rdi
	je	SHORT $LN112@ThreadAssi
	cmp	r12d, DWORD PTR [rbx+24]
	jb	SHORT $LN112@ThreadAssi
	lea	rcx, QWORD PTR _Where$187936[rsp]
	jmp	SHORT $LN113@ThreadAssi
$LN112@ThreadAssi:
	mov	rax, QWORD PTR [r14+392]
	lea	rcx, QWORD PTR $T187935[rsp]
	mov	QWORD PTR $T187935[rsp+8], rax
	mov	rax, QWORD PTR [r14+344]
	mov	QWORD PTR $T187935[rsp], rax
$LN113@ThreadAssi:
	mov	rax, QWORD PTR [rcx]

; 402  : 	
; 403  : 	if (it != this->threadIDMap.end() && it2 == this->unmanagedThreadIDMap.end()) {

	mov	rdi, QWORD PTR it$[rsp]
	mov	rsi, QWORD PTR [r14+328]
	lea	rdx, QWORD PTR it2$[rsp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax
	test	rdi, rdi
	je	SHORT $LN236@ThreadAssi
	cmp	rdi, QWORD PTR [r14+280]
	je	SHORT $LN235@ThreadAssi
$LN236@ThreadAssi:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN235@ThreadAssi:
	mov	rbx, QWORD PTR it$[rsp+8]
	cmp	rbx, rsi
	je	$LN2@ThreadAssi
	mov	rax, QWORD PTR it2$[rsp]
	mov	rsi, QWORD PTR [r14+392]
	test	rax, rax
	je	SHORT $LN265@ThreadAssi
	cmp	rax, QWORD PTR [r14+344]
	je	SHORT $LN264@ThreadAssi
$LN265@ThreadAssi:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN264@ThreadAssi:
	cmp	QWORD PTR it2$[rsp+8], rsi
	jne	SHORT $LN2@ThreadAssi

; 404  : 		ThreadInfo *data = it->second;

	test	rdi, rdi
	jne	SHORT $LN305@ThreadAssi
	call	QWORD PTR __imp__invalid_parameter_noinfo
	xor	r11d, r11d
	jmp	SHORT $LN292@ThreadAssi
$LN305@ThreadAssi:
	mov	r11, QWORD PTR [rdi]
$LN292@ThreadAssi:
	cmp	rbx, QWORD PTR [r11+48]
	jne	SHORT $LN279@ThreadAssi
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN279@ThreadAssi:
	mov	rax, QWORD PTR [rbx+32]

; 405  : 		
; 406  : 		data->managedThreadId = managedThreadID;
; 407  : 		data->unmanagedThreadId = osThreadID;
; 408  : 		
; 409  : 		this->unmanagedThreadIDMap.insert(TUThreadIDPair(osThreadID, data));

	lea	r8, QWORD PTR $T187136[rsp]
	lea	rdx, QWORD PTR $T187138[rsp]
	lea	rcx, QWORD PTR [r14+344]
	mov	DWORD PTR $T187136[rsp], r12d
	mov	QWORD PTR [rax+8], r13
	mov	DWORD PTR [rax], r12d
	mov	QWORD PTR $T187136[rsp+8], rax
	call	?insert@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@QEAA?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPEAVThreadInfo@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPEAVThreadInfo@@@std@@@3@$0A@@std@@@std@@_N@2@AEBU?$pair@$$CBKPEAVThreadInfo@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ThreadInfo * __ptr64,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ThreadInfo * __ptr64> >,0> >::insert

; 414  : 	}
; 415  : 	
; 416  : 	this->threadMapCriticalSection.Leave();

	lea	rcx, QWORD PTR [r14+160]
	call	QWORD PTR __imp_LeaveCriticalSection

; 417  : 	return S_OK;

	xor	eax, eax
	jmp	SHORT $LN3@ThreadAssi
$LN2@ThreadAssi:

; 410  : 	} else {
; 411  : 		DebugWriteLine(L"Thread %d (%d) already exists in map!", managedThreadID, osThreadID);
; 412  : 		LogString(L"error-Thread %d (%d) already exists in map!-", managedThreadID, osThreadID);

	lea	rdx, OFFSET FLAT:??_C@_1FK@PMAJBODM@?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?9?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi@
	mov	r9d, r12d
	mov	r8, r13
	mov	rcx, r14
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString

; 413  : 		return E_FAIL;

	mov	eax, -2147467259			; ffffffff80004005H
$LN3@ThreadAssi:

; 418  : }

	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+48]
	mov	rbp, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?ThreadAssignedToOSThread@CProfiler@@UEAAJ_KK@Z ENDP	; CProfiler::ThreadAssignedToOSThread
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z DD imagerel $LN46
	DD	imagerel $LN46+321
	DD	imagerel $unwind$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z DD imagerel $LN46+321
	DD	imagerel $LN46+536
	DD	imagerel $chain$0$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z DD imagerel $LN46+536
	DD	imagerel $LN46+558
	DD	imagerel $chain$1$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z DD 021H
	DD	imagerel $LN46
	DD	imagerel $LN46+321
	DD	imagerel $unwind$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z DD 020521H
	DD	066405H
	DD	imagerel $LN46
	DD	imagerel $LN46+321
	DD	imagerel $unwind$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z DD 081501H
	DD	097415H
	DD	085415H
	DD	073415H
	DD	0c0113215H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z
_TEXT	SEGMENT
this$ = 48
pICorProfilerInfoUnk$ = 56
?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z PROC	; CProfiler::Initialize, COMDAT

; 245  : {

$LN46:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 32					; 00000020H
	mov	r12, rdx
	mov	rdi, rcx

; 246  : 	#ifdef DEBUG
; 247  : 	MessageBox(nullptr, TEXT("CProfiler::Initialize - Attach debugger now!"), TEXT("Attach debugger"), MB_OK);
; 248  : 	// __debugbreak(); // __asm int 3; replacement on x64 and Itanium
; 249  : 	#endif
; 250  : 
; 251  : 	// Have to disable the profiler, if this process starts other .NET processes (e. g. run a project in SharpDevelop)
; 252  : 	SetEnvironmentVariable("COR_ENABLE_PROFILING", "0");

	lea	rdx, OFFSET FLAT:??_C@_01GBGANLPD@0?$AA@
	lea	rcx, OFFSET FLAT:??_C@_0BF@IEBMFIMJ@COR_ENABLE_PROFILING?$AA@
	call	QWORD PTR __imp_SetEnvironmentVariableA

; 253  : 	
; 254  : 	InitializeCommunication();

	mov	rcx, rdi
	call	?InitializeCommunication@CProfiler@@AEAAHXZ ; CProfiler::InitializeCommunication

; 255  : 
; 256  : 	// log that we are initializing
; 257  : 	LogString(L"Initializing...");

	lea	rdx, OFFSET FLAT:??_C@_1CA@CPAJBOA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AA@
	mov	rcx, rdi
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString

; 258  : 	
; 259  : 	sharedMemoryHeader->mallocator.initialize((byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->HeapOffset, (byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->HeapOffset + sharedMemoryHeader->HeapLength);

	mov	rax, QWORD PTR [rdi+24]
	mov	r9, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	r8, QWORD PTR [rax+16]
	movsxd	rax, DWORD PTR [r9+24]
	movsxd	rcx, DWORD PTR [r9+28]
	add	rcx, rax
	add	rax, r8
	mov	QWORD PTR [r9+64], rax
	mov	QWORD PTR [r9+72], rax
	add	rcx, r8
	mov	QWORD PTR [r9+80], rcx

; 260  : 	
; 261  : 	stackAllocator.initialize((byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->ThreadDataOffset, (byte *)sharedMemory->GetStartPtr() + sharedMemoryHeader->ThreadDataOffset + sharedMemoryHeader->ThreadDataLength);

	mov	rax, QWORD PTR [rdi+24]
	movsxd	rdx, DWORD PTR [r9+20]
	mov	rcx, QWORD PTR [rax+16]
	movsxd	rax, DWORD PTR [r9+16]
	add	rdx, rax
	add	rdx, rcx
	add	rax, rcx
	mov	QWORD PTR ?stackAllocator@@3UfastAllocator@@A, rax
	mov	QWORD PTR ?stackAllocator@@3UfastAllocator@@A+8, rax
	mov	QWORD PTR ?stackAllocator@@3UfastAllocator@@A+16, rdx

; 262  : 
; 263  : 	sharedMemoryHeader->RootFuncInfo = CreateFunctionInfo(0, 0);

$LL30@Initialize@2:
	mov	rdx, QWORD PTR [r9+120]
	xor	ebx, ebx
	test	rdx, rdx
	je	SHORT $LN42@Initialize@2
	mov	rcx, QWORD PTR [rdx]
	mov	rax, rdx
	lock cmpxchg QWORD PTR [r9+120], rcx
	jne	SHORT $LL30@Initialize@2
	xor	eax, eax
	mov	QWORD PTR [rdx], rax
	mov	QWORD PTR [rdx+8], rax
	mov	QWORD PTR [rdx+16], rax
	mov	QWORD PTR [rdx+24], rax
	mov	QWORD PTR [rdx+32], rax
	mov	QWORD PTR [rdx+40], rax
	mov	QWORD PTR [rdx+48], rax
	jmp	SHORT $LN31@Initialize@2
$LN42@Initialize@2:
	mov	ecx, 56					; 00000038H
	lock xadd QWORD PTR [r9+72], rcx
	mov	rax, QWORD PTR [r9+80]
	mov	rdx, rbx
	sub	rax, rcx
	cmp	rax, 56					; 00000038H
	cmovg	rdx, rcx
$LN31@Initialize@2:
	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	DWORD PTR [rdx], ebx
	mov	QWORD PTR [rdx+8], rbx
	mov	DWORD PTR [rdx+20], 3
	mov	QWORD PTR [rax+40], rdx

; 264  : 
; 265  : 	// get the ICorProfilerInfo interface
; 266  :     HRESULT hr = pICorProfilerInfoUnk->QueryInterface(IID_ICorProfilerInfo, (LPVOID*)&pICorProfilerInfo);

	mov	rax, QWORD PTR [r12]
	lea	r8, QWORD PTR [rdi+8]
	lea	rdx, OFFSET FLAT:IID_ICorProfilerInfo
	mov	rcx, r12
	call	QWORD PTR [rax]

; 267  :     if (FAILED(hr))

	test	eax, eax
	jns	SHORT $LN6@Initialize@2

; 268  :         return E_FAIL;

	mov	eax, -2147467259			; ffffffff80004005H
	jmp	$LN7@Initialize@2
$LN6@Initialize@2:

; 269  : 	// determine if this object implements ICorProfilerInfo2
; 270  :     hr = pICorProfilerInfoUnk->QueryInterface(IID_ICorProfilerInfo2, (LPVOID*)&pICorProfilerInfo2);

	mov	rax, QWORD PTR [r12]
	lea	r8, QWORD PTR [rdi+16]
	lea	rdx, OFFSET FLAT:IID_ICorProfilerInfo2
	mov	rcx, r12
	mov	QWORD PTR [rsp+48], rsi
	call	QWORD PTR [rax]

; 271  :     if (FAILED(hr))

	test	eax, eax
	jns	SHORT $LN5@Initialize@2

; 272  : 	{
; 273  : 		LogString(L"FATAL ERROR: Unsupported .NET version needs to be at least 2.0!");

	lea	rdx, OFFSET FLAT:??_C@_1IA@ICOEBLFH@?$AAF?$AAA?$AAT?$AAA?$AAL?$AA?5?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AA?4?$AAN?$AAE?$AAT?$AA?5?$AAv?$AAe@
	mov	rcx, rdi
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString

; 274  : 		this->pICorProfilerInfo2 = nullptr;

	mov	QWORD PTR [rdi+16], rbx

; 275  : 		return E_FAIL;

	mov	eax, -2147467259			; ffffffff80004005H
	jmp	$LN45@Initialize@2
$LN5@Initialize@2:

; 276  : 	}
; 277  : 
; 278  : 	// Indicate which events we're interested in.
; 279  : 	hr = SetEventMask();

	mov	rcx, QWORD PTR [rdi+8]
	mov	edx, 16781889				; 01001241H
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+128]

; 280  :     if (FAILED(hr))

	test	eax, eax
	jns	SHORT $LN4@Initialize@2

; 281  :         LogString(L"Error setting the event mask");

	lea	rdx, OFFSET FLAT:??_C@_1DK@JNGEKABN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AA@
	mov	rcx, rdi
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString
$LN4@Initialize@2:

; 282  : 
; 283  : 	// set the enter, leave and tailcall hooks
; 284  : 	hr = pICorProfilerInfo2->SetEnterLeaveFunctionHooks2(FunctionEnterNaked, FunctionLeaveNaked, FunctionTailcallNaked);

	mov	rcx, QWORD PTR [rdi+16]
	lea	r9, OFFSET FLAT:FunctionTailcallNaked
	lea	r8, OFFSET FLAT:FunctionLeaveNaked
	mov	rax, QWORD PTR [rcx]
	lea	rdx, OFFSET FLAT:FunctionEnterNaked
	call	QWORD PTR [rax+296]

; 285  : 	if (SUCCEEDED(hr))

	test	eax, eax
	js	SHORT $LN44@Initialize@2

; 286  : 		hr = pICorProfilerInfo2->SetFunctionIDMapper(FunctionMapper);

	mov	rcx, QWORD PTR [rdi+16]
	lea	rdx, OFFSET FLAT:?FunctionMapper@CProfiler@@SA_K_KPEAH@Z ; CProfiler::FunctionMapper
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+144]

; 287  : 	// report our success or failure to the log file
; 288  :     if (FAILED(hr))

	test	eax, eax
	js	SHORT $LN44@Initialize@2

; 290  : 	else
; 291  : 		LogString(L"Successfully initialized profiling" );

	lea	rdx, OFFSET FLAT:??_C@_1EG@BIFPEPFJ@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AA?5?$AAp?$AAr?$AAo?$AAf?$AAi?$AAl?$AAi@
	mov	rcx, rdi
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString
	jmp	SHORT $LN1@Initialize@2
$LN44@Initialize@2:

; 289  :         LogString(L"Error setting the enter, leave and tailcall hooks");

	lea	rdx, OFFSET FLAT:??_C@_1GE@MBLADCNK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?0?$AA?5?$AAl?$AAe?$AAa?$AAv?$AAe?$AA?5?$AAa@
	mov	rcx, rdi
	call	?LogString@CProfiler@@QEAAXPEA_WZZ	; CProfiler::LogString
$LN1@Initialize@2:

; 292  : 
; 293  : 	this->sigReader = new SignatureReader(this->pICorProfilerInfo);

	mov	ecx, 4688				; 00001250H
	call	??2@YAPEAX_K@Z				; operator new
	test	rax, rax
	je	SHORT $LN9@Initialize@2
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, rax
	call	??0SignatureReader@@QEAA@PEAUICorProfilerInfo@@@Z ; SignatureReader::SignatureReader
	mov	rbx, rax
$LN9@Initialize@2:
	mov	QWORD PTR [rdi+208], rbx

; 294  : 	
; 295  :     return S_OK;

	xor	eax, eax
$LN45@Initialize@2:
	mov	rsi, QWORD PTR [rsp+48]
$LN7@Initialize@2:

; 296  : }

	mov	rbx, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r12
	ret	0
?Initialize@CProfiler@@UEAAJPEAUIUnknown@@@Z ENDP	; CProfiler::Initialize
_TEXT	ENDS
PUBLIC	FunctionEnterGlobal
;	COMDAT pdata
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\lightweightstack.h
pdata	SEGMENT
$pdata$FunctionEnterGlobal DD imagerel $LN78
	DD	imagerel $LN78+614
	DD	imagerel $unwind$FunctionEnterGlobal
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$FunctionEnterGlobal DD 060c01H
	DD	0c340cH
	DD	07008720cH
	DD	050066007H
; Function compile flags: /Ogtpy
; File c:\local\sharpdevelop_3.2.0.5777_source\src\addins\misc\profiler\hook\profiler.cpp
xdata	ENDS
;	COMDAT FunctionEnterGlobal
_TEXT	SEGMENT
$T188497 = 32
functionID$ = 96
newParent$119239 = 104
$T188496 = 112
FunctionEnterGlobal PROC				; COMDAT

; 71   : {

$LN78:
	mov	QWORD PTR [rsp+8], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	esi, ecx

; 72   : 	ThreadLocalData *data = getThreadLocalData();

	mov	ecx, DWORD PTR ?tls_index@@3KA		; tls_index
	call	QWORD PTR __imp_TlsGetValue

; 73   : 	
; 74   : 	if (data == nullptr) {

	xor	ebp, ebp
	mov	rbx, rax
	test	rax, rax
	jne	$LN9@FunctionEn@2

; 75   : 		data = AttachToThread();

	mov	rcx, QWORD PTR ?allThreadLocalDatas@@3PEAVLightweightList@@EA ; allThreadLocalDatas
	call	?add@LightweightList@@QEAAPEAUThreadLocalData@@XZ ; LightweightList::add
	mov	ecx, DWORD PTR ?tls_index@@3KA		; tls_index
	mov	rdx, rax
	mov	rbx, rax
	call	QWORD PTR __imp_TlsSetValue

; 76   : 		profiler.EnterLock(data);

	mov	DWORD PTR [rbx+4], 1
	mfence
	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	ecx, DWORD PTR [rax+4]
	cmp	ecx, 1
	jne	SHORT $LN16@FunctionEn@2
	npad	1
$LL17@FunctionEn@2:
	mov	DWORD PTR [rbx+4], ebp
	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+200
	or	edx, -1					; ffffffffH
	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_WaitForSingleObject
	mov	DWORD PTR [rbx+4], 1
	mfence
	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	ecx, DWORD PTR [rax+4]
	cmp	ecx, 1
	je	SHORT $LL17@FunctionEn@2
$LN16@FunctionEn@2:

; 77   : 		FunctionEnterCreateNewRoot(data, __rdtsc());

	rdtsc
	shl	rdx, 32					; 00000020H
	mov	rcx, rbx
	or	rax, rdx
	lea	rdx, QWORD PTR $T188496[rsp]
	mov	QWORD PTR $T188496[rsp], rax
	call	?FunctionEnterCreateNewRoot@@YAXPEAUThreadLocalData@@AEB_K@Z ; FunctionEnterCreateNewRoot

; 78   : 	} else

	jmp	SHORT $LN24@FunctionEn@2
$LN9@FunctionEn@2:

; 79   : 		profiler.EnterLock(data);

	mov	DWORD PTR [rax+4], 1
	mfence
	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	ecx, DWORD PTR [rax+4]
	cmp	ecx, 1
	jne	SHORT $LN24@FunctionEn@2
	npad	10
$LL25@FunctionEn@2:
	mov	DWORD PTR [rbx+4], ebp
	mov	rcx, QWORD PTR ?profiler@@3VCProfiler@@A+200
	or	edx, -1					; ffffffffH
	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_WaitForSingleObject
	mov	DWORD PTR [rbx+4], 1
	mfence
	mov	rax, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	ecx, DWORD PTR [rax+4]
	cmp	ecx, 1
	je	SHORT $LL25@FunctionEn@2
$LN24@FunctionEn@2:

; 80   : 
; 81   : 	// this call allows GetOrAddChild to update the value at the top of the stack
; 82   : 	// if the FunctionInfo is resized
; 83   : 	FunctionInfo *f = data->stack.top().function;
; 84   : 	
; 85   : 	if ((sharedMemoryHeader->doNotProfileDotnetInternals && functionID < 0 && f->Id < 0) || (sharedMemoryHeader->combineRecursiveFunction && functionID == f->Id)) {

	mov	rcx, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	mov	rax, QWORD PTR [rbx+32]
	mov	rdi, QWORD PTR [rax]
	cmp	BYTE PTR [rcx+60], bpl
	je	SHORT $LN5@FunctionEn@2
	test	esi, esi
	jns	SHORT $LN5@FunctionEn@2
	cmp	DWORD PTR [rdi], ebp
	jl	SHORT $LN6@FunctionEn@2
$LN5@FunctionEn@2:
	cmp	BYTE PTR [rcx+61], bpl
	je	SHORT $LN7@FunctionEn@2
	cmp	esi, DWORD PTR [rdi]
	jne	SHORT $LN7@FunctionEn@2
$LN6@FunctionEn@2:

; 86   : 		data->stack.top().frameCount++;

	inc	DWORD PTR [rax+16]

; 111  : 	}
; 112  : 
; 113  : 	data->inLock = 0;

	mov	DWORD PTR [rbx+4], ebp

; 114  : }

	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN7@FunctionEn@2:

; 87   : 	} else {
; 88   : 		//DebugWriteLine(L"FunctionEnterGlobal %d, current stack top=%d", functionID, f->Id);
; 89   : 		FunctionInfo *newParent = nullptr;
; 90   : 		FunctionInfo *child = f->GetOrAddChild(functionID, newParent);

	lea	r8, QWORD PTR newParent$119239[rsp]
	mov	edx, esi
	mov	rcx, rdi
	mov	QWORD PTR newParent$119239[rsp], rbp
	call	?GetOrAddChild@FunctionInfo@@QEAAPEAU1@HAEAPEAU1@@Z ; FunctionInfo::GetOrAddChild

; 91   : 		if (newParent != nullptr) {

	mov	r8, QWORD PTR newParent$119239[rsp]
	mov	rsi, rax
	test	r8, r8
	je	$LN54@FunctionEn@2

; 92   : 			// f was moved to newParent
; 93   : 			// update stack:
; 94   : 			data->stack.top().function = newParent;

	mov	rcx, QWORD PTR [rbx+32]
	mov	QWORD PTR [rcx], r8

; 95   : 			// update parent of f:
; 96   : 			if (data->stack.hasAtLeastTwoElements()) {

	mov	rcx, QWORD PTR [rbx+24]
	cmp	QWORD PTR [rbx+32], rcx
	jbe	SHORT $LN2@FunctionEn@2

; 97   : 				//DebugWriteLine("Updating parent of parent");
; 98   : 				data->stack.belowTop().function->AddOrUpdateChild(newParent);

	mov	rcx, QWORD PTR [rbx+32]
	mov	r9d, DWORD PTR [r8]
	mov	r10, QWORD PTR [rcx-24]
	mov	ecx, r9d
	mov	r11d, DWORD PTR [r10+20]
	and	ecx, r11d
	movsxd	rax, ecx
	mov	rdx, QWORD PTR [r10+rax*8+24]
	test	rdx, rdx
	je	SHORT $LN76@FunctionEn@2
$LL45@FunctionEn@2:
	cmp	DWORD PTR [rdx], r9d
	je	SHORT $LN76@FunctionEn@2
	inc	ecx
	and	ecx, r11d
	movsxd	rax, ecx
	mov	rdx, QWORD PTR [r10+rax*8+24]
	test	rdx, rdx
	jne	SHORT $LL45@FunctionEn@2
$LN76@FunctionEn@2:
	movsxd	rax, ecx
	mov	QWORD PTR [r10+rax*8+24], r8

; 99   : 				data->stack.belowTop().function->Check();
; 100  : 			} else {

	jmp	SHORT $LN1@FunctionEn@2
$LN2@FunctionEn@2:

; 101  : 				DebugWriteLine(L"Updating parent of parent (root)");
; 102  : 				profiler.MovedRootChild(newParent);

	lea	rcx, OFFSET FLAT:?profiler@@3VCProfiler@@A ; profiler
	mov	rdx, r8
	call	?MovedRootChild@CProfiler@@QEAAXPEAUFunctionInfo@@@Z ; CProfiler::MovedRootChild
$LN1@FunctionEn@2:

; 103  : 			}
; 104  : 			FreeFunctionInfo(f);

	mov	eax, DWORD PTR [rdi+20]
	mov	rdx, QWORD PTR ?sharedMemoryHeader@@3PEAUSharedMemoryHeader@@EA ; sharedMemoryHeader
	inc	eax
	movsxd	rcx, eax
	mov	eax, -1301749992			; b268df18H
	add	rcx, 3
	imul	rcx, rax
	shr	rcx, 32					; 00000020H
	and	ecx, 31
	prefetchw BYTE PTR [rdx+rcx*8+88]
	npad	7
$LL56@FunctionEn@2:
	mov	rax, QWORD PTR [rdx+rcx*8+88]
	mov	QWORD PTR [rdi], rax
	lock cmpxchg QWORD PTR [rdx+rcx*8+88], rdi
	jne	SHORT $LL56@FunctionEn@2
$LN54@FunctionEn@2:

; 105  : 		}
; 106  : 		
; 107  : 		// Set the stats for this function
; 108  : 		child->CallCount++;

	inc	DWORD PTR [rsi+4]

; 109  : 		
; 110  : 		data->stack.push(StackEntry(child, __rdtsc()));

	rdtsc
	add	QWORD PTR [rbx+32], 24
	shl	rdx, 32					; 00000020H
	mov	QWORD PTR $T188497[rsp], rsi
	or	rax, rdx
	mov	DWORD PTR $T188497[rsp+16], 1
	mov	QWORD PTR $T188497[rsp+8], rax
	mov	rax, QWORD PTR [rbx+32]
	cmp	rax, QWORD PTR [rbx+40]
	jne	SHORT $LN65@FunctionEn@2
	lea	rcx, QWORD PTR [rbx+24]
	call	?Enlarge@?$LightweightStack@UStackEntry@@@@QEAAXXZ ; LightweightStack<StackEntry>::Enlarge
$LN65@FunctionEn@2:
	mov	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR $T188497[rsp]
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax

; 111  : 	}
; 112  : 
; 113  : 	data->inLock = 0;

	mov	DWORD PTR [rbx+4], ebp

; 114  : }

	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
FunctionEnterGlobal ENDP
END
